{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"source/images/post/2018/03/4090800.jpeg","path":"images/post/2018/03/4090800.jpeg","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"source/images/post/2014/11/19/debug-jvm-on-linux-1.jpg","path":"images/post/2014/11/19/debug-jvm-on-linux-1.jpg","modified":0,"renderable":0},{"_id":"source/images/post/2014/11/19/debug-jvm-on-linux-2.jpg","path":"images/post/2014/11/19/debug-jvm-on-linux-2.jpg","modified":0,"renderable":0},{"_id":"source/images/post/2014/11/19/debug-jvm-on-linux-3.jpg","path":"images/post/2014/11/19/debug-jvm-on-linux-3.jpg","modified":0,"renderable":0},{"_id":"source/images/post/2014/11/19/debug-jvm-on-linux-4.jpg","path":"images/post/2014/11/19/debug-jvm-on-linux-4.jpg","modified":0,"renderable":0},{"_id":"source/images/post/2014/11/19/debug-jvm-on-linux-5.jpg","path":"images/post/2014/11/19/debug-jvm-on-linux-5.jpg","modified":0,"renderable":0},{"_id":"source/images/post/2014/10/01/configure-vim-highlight-on-mac.png","path":"images/post/2014/10/01/configure-vim-highlight-on-mac.png","modified":0,"renderable":0},{"_id":"source/images/post/2014/11/08/compile-openjdk7-on-mac.png","path":"images/post/2014/11/08/compile-openjdk7-on-mac.png","modified":0,"renderable":0},{"_id":"themes/next/source/lib/fancybox/README.md","path":"lib/fancybox/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/LICENSE","path":"lib/fancybox/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.css","path":"lib/fancybox/source/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.js","path":"lib/fancybox/source/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/README.md","path":"lib/pace/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/LICENSE","path":"lib/reading_progress/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/README.md","path":"lib/reading_progress/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/package.json","path":"lib/reading_progress/package.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","path":"lib/reading_progress/reading_progress.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.min.js","path":"lib/reading_progress/reading_progress.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"9bcd197b8ce46fd8463e9cb56e108a7eaa6c827f","modified":1522177481000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1522177481000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1522177481000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1522177481000},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1522177481000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1522177481000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1522177481000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1522177481000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1522177481000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1522177481000},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1522177481000},{"_id":"themes/next/README.md","hash":"81c51e4b0fe5eaab6becfc0d6ef342bdd749a781","modified":1522177481000},{"_id":"themes/next/_config.yml","hash":"80d3b2c12701da468ea644be7bf0fabf66d8afa8","modified":1522177481000},{"_id":"themes/next/bower.json","hash":"b133dd92c7a825745a3b74474c2d738d9fd8ff07","modified":1522177481000},{"_id":"themes/next/crowdin.yml","hash":"fe22a450cc1272b7ac5476e6b33a999f8b8a2034","modified":1522177481000},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1522177481000},{"_id":"themes/next/package.json","hash":"77f15fd8e1bf54fe9e04513e38a70823225256cc","modified":1522177481000},{"_id":"source/about/index.md","hash":"4794bb9545184596effb61f9b91b026d4e286d8b","modified":1522177481000},{"_id":"source/categories/index.md","hash":"8a241baacbc18ea01294a522d6c3e3ca467559e8","modified":1522177481000},{"_id":"source/images/avatar.png","hash":"4d799e720b5dabc3abcb7a2a41c690e4320a3161","modified":1522177481000},{"_id":"source/tags/index.md","hash":"6fa13c6aa7dea1193c5fce12cbb3ea642af7d3e8","modified":1522177481000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"476c9bb6616818be9d86567ad4e2e539c0e0da2f","modified":1522177481000},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1522177481000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1522177481000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1522177481000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1522177481000},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1522177481000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1522177481000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1522177481000},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1522177481000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1522177481000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1522177481000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"9f90a1a2df8c54edd3c8d99714ef0ce175983938","modified":1522177481000},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1522177481000},{"_id":"themes/next/docs/MATH.md","hash":"d047b8a3d9aa49b478a33e5a326195d460cb4589","modified":1522177481000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1522177481000},{"_id":"themes/next/languages/_en.yml","hash":"2397256c752276df666c1ff579902abb367b2380","modified":1522177481000},{"_id":"themes/next/languages/ar.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/bg.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/bn.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/cs.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/da.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/de.yml","hash":"f4dc655d4bd396b9c309da2a99b42c0456c3fe16","modified":1522177481000},{"_id":"themes/next/languages/es.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/el.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/et.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/fa.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/fi.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/fr.yml","hash":"dacb82b46d7b79656cdb75768a031fa73f178477","modified":1522177481000},{"_id":"themes/next/languages/he.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/hi.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/hr.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/hu.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/id.yml","hash":"c89ef3ed946a150f052f470f71393db6a6d3acaa","modified":1522177481000},{"_id":"themes/next/languages/it.yml","hash":"f0fb26ab84e5d0508ddc07bd67d581033520bb43","modified":1522177481000},{"_id":"themes/next/languages/ja.yml","hash":"02029ef467628369a88d1022746b861dca3fb921","modified":1522177481000},{"_id":"themes/next/languages/jv.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/ko.yml","hash":"c95a00066bda4c04ce7bf65f8bf08e82c4d8fbcf","modified":1522177481000},{"_id":"themes/next/languages/lv.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/lt.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/ms.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/nl.yml","hash":"8fc1165a138081d25ff4c171dea2980ce71fe2b0","modified":1522177481000},{"_id":"themes/next/languages/pa.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/no.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/pt-BR.yml","hash":"268188db09c6779a570c8fc647ccc1a73322476c","modified":1522177481000},{"_id":"themes/next/languages/pl.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/pt.yml","hash":"d8898007460ec50eb9969ba38d1b030613260ce7","modified":1522177481000},{"_id":"themes/next/languages/ro.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/sl.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/ru.yml","hash":"26ae39b50887dcf0bf3ca3d820e5382fc11cc996","modified":1522177481000},{"_id":"themes/next/languages/sr.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/sv.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/th.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/tr.yml","hash":"efc298288935bf892efc9707b1ae4ea92d5fb7b4","modified":1522177481000},{"_id":"themes/next/languages/uk.yml","hash":"e1abab282917fcad60368e7e754ba1a70f888f38","modified":1522177481000},{"_id":"themes/next/languages/vi.yml","hash":"7792081d90122327f913f224f31965460936df5a","modified":1522177481000},{"_id":"themes/next/languages/zh-CN.yml","hash":"58a8bccf93a59cd4639b31f2c31b4cf4a0366f37","modified":1522177481000},{"_id":"themes/next/languages/zh-HK.yml","hash":"f7b3304e44959f74149a01d5f140fef64bfb3fa1","modified":1522177481000},{"_id":"themes/next/languages/zh-TW.yml","hash":"1f025215f1ac03dd4db9b4f87aa393ee43494bc3","modified":1522177481000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1522177481000},{"_id":"themes/next/layout/_layout.swig","hash":"5803acd1f338db83a3b8d99eebbf163083e02520","modified":1522177481000},{"_id":"themes/next/layout/archive.swig","hash":"833a2213d31be45a12b8e4e5e609073978bd251b","modified":1522177481000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1522177481000},{"_id":"themes/next/layout/page.swig","hash":"3f9b2444f12251727ebbc28159f02e9e9489742e","modified":1522177481000},{"_id":"themes/next/scripts/merge-configs.js","hash":"ca9845dc76f5710b4c6fba5fe25ff0d2fcf0adaa","modified":1522177481000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1522177481000},{"_id":"themes/next/layout/post.swig","hash":"8e2d079b46076996cc9343213d5bf7da8178d32d","modified":1522177481000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1522177481000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1522177481000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1522177481000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1522177481000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1522177481000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522177481000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1522177481000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1522177481000},{"_id":"themes/next/docs/ru/README.md","hash":"fd2ee8e3f5afed406f11f24b13e3174dd0d40611","modified":1522177481000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1522177481000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1522177481000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1522177481000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"98ef4dc1a7a12320211ffb36d264cd86ffcce0dd","modified":1522177481000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1522177481000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1522177481000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"cbb419ccef174ef1a3fff5fc74261c600fdeec0e","modified":1522177481000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"1c7df019737656fdfd8d124c7c045a64ac8a2a8d","modified":1522177481000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c5a7dae1e7dd0163352178c198e06058c672fd34","modified":1522177481000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"c1ba919f70efe87a39e6217883e1625af0b2c23c","modified":1522177481000},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1522177481000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1522177481000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1522177481000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1522177481000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"464082e431ea5b06df782d5f312ee25be9e5f169","modified":1522177481000},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1522177481000},{"_id":"themes/next/layout/_macro/post.swig","hash":"7b85cd74fe673d1c842e705a18ae2e2e04f5d391","modified":1522177481000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"aa620c582143f43ba1cb1a5e59240041a911185b","modified":1522177481000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"355ddd5b8af696f7bffb183addd7e84c0a4e2123","modified":1522177481000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"fea45ab314b9ea23edab25c2b8620f909d856b1d","modified":1522177481000},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1522177481000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5df32b286a8265ba82a4ef5e1439ff34751545ad","modified":1522177481000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"f62e6198dcc41b1cb6a1036094e724065d4e4008","modified":1522177481000},{"_id":"themes/next/layout/_partials/header.swig","hash":"6bdae92508fb5009b023386341f3b161a4ac6c70","modified":1522177481000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1522177481000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1522177481000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1522177481000},{"_id":"themes/next/layout/_partials/sub-menu.swig","hash":"9783a9569fe8344ed287013156e52ca1b0a25544","modified":1522177481000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1522177481000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1522177481000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1522177481000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1522177481000},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1522177481000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1522177481000},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"cabd9640dc3027a0b3ac06f5ebce777e50754065","modified":1522177481000},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1522177481000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1522177481000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1522177481000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1522177481000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1522177481000},{"_id":"themes/next/scripts/tags/button.js","hash":"5a61c2da25970a4981fbd65f4a57c5e85db4dcda","modified":1522177481000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"db70a841e7c1708f95ca97b44413b526b267fa9b","modified":1522177481000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"2b3a4dc15dea33972c0b6d46a1483dabbf06fb5b","modified":1522177481000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"a98fc19a90924f2368e1982f8c449cbc09df8439","modified":1522177481000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1b97b1b5364945b8ab3e50813bef84273055234f","modified":1522177481000},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"b7600f6b868d8f4f7032126242d9738cd1e6ad71","modified":1522177481000},{"_id":"themes/next/scripts/tags/label.js","hash":"621004f2836040b12c4e8fef77e62cf22c561297","modified":1522177481000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"460e5e1f305847dcd4bcab9da2038a85f0a1c273","modified":1522177481000},{"_id":"themes/next/scripts/tags/note.js","hash":"4975d4433e11161b2e9a5744b7287c2d667b3c76","modified":1522177481000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1522177481000},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1522177481000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1522177481000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1522177481000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1522177481000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1522177481000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1522177481000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1522177481000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1522177481000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1522177481000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1522177481000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1522177481000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1522177481000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1522177481000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1522177481000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1522177481000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1522177481000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1522177481000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1522177481000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1522177481000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522177481000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522177481000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522177481000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522177481000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522177481000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522177481000},{"_id":"themes/next/layout/_macro/menu/menu-badge-1.swig","hash":"7ffc5c159ab566805ceda6b8c7a4149a7e296116","modified":1522177481000},{"_id":"themes/next/layout/_macro/menu/menu-badge-2.swig","hash":"7b96a0e6079e845573338523cea4437817a4b1e1","modified":1522177481000},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"6a04cd1ef9ebac103d86b61505fa9b0f26268fdc","modified":1522177481000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1522177481000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"cd7e3331a61939c820e0437bf5d815cb0a42fefb","modified":1522177481000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"9f7aa33a620aea6ede1fb907b61fd071c018c525","modified":1522177481000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1522177481000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1522177481000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1522177481000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1522177481000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1522177481000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1522177481000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1522177481000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1522177481000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1522177481000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"67f0cb55e6702c492e99a9f697827629da036a0c","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"94b26dfbcd1cf2eb87dd9752d58213338926af27","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"cee047575ae324398025423696b760db64d04e6f","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1522177481000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1522177481000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1522177481000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"2fbee33a4ccd7c8217c73e85a9a1488170e05629","modified":1522177481000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1522177481000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"17a54796f6e03fc834880a58efca45c286e40e40","modified":1522177481000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"40e3cacbd5fa5f2948d0179eff6dd88053e8648e","modified":1522177481000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"6f340d122a9816ccdf4b45b662880a4b2d087671","modified":1522177481000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"c0eb6123464d745ac5324ce6deac8ded601f432f","modified":1522177481000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"42f62695029834d45934705c619035733762309e","modified":1522177481000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1522177481000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1522177481000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"011ae6303afacddabc4ddf570fe3dd227569cd4f","modified":1522177481000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1522177481000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1522177481000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1522177481000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1522177481000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1522177481000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1522177481000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1522177481000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"81ca13d6d0beff8b1a4b542a51e3b0fb68f08efd","modified":1522177481000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"7a2706304465b9e673d5561b715e7c72a238437c","modified":1522177481000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1522177481000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"32392d213f5d05bc26b2dc452f2fc6fea9d44f6d","modified":1522177481000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"cfb03ec629f13883509eac66e561e9dba562333f","modified":1522177481000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"d104855f1d12e3e00ad01f454c27799ccbe0c4ed","modified":1522177481000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1522177481000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1522177481000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"531cdedd7fbe8cb1dab2e4328774a9f6b15b59da","modified":1522177481000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1522177481000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1522177481000},{"_id":"themes/next/source/js/src/motion.js","hash":"50e57f8acb6924c6999cdcc664ddd3f0730d2061","modified":1522177481000},{"_id":"themes/next/source/js/src/post-details.js","hash":"d1333fb588d4521b4d1e9c69aef06e0ad1bf0b12","modified":1522177481000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1522177481000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1522177481000},{"_id":"themes/next/source/js/src/utils.js","hash":"bb67eb5b5f301a92503c81b1f8edd2a4d1fcc879","modified":1522177481000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1522177481000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1522177481000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1522177481000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1522177481000},{"_id":"source/_posts/2011/01/10/hello-world.md","hash":"b076b9416165ac70a9b91d625f58b4ab9bba7ec1","modified":1522177481000},{"_id":"source/_posts/2014/01/20/install-and-configure-mysql-on-centos.md","hash":"1648f056a530c87cd87b24e0b1da9ee4a61ca788","modified":1522177481000},{"_id":"source/_posts/2014/10/01/configure-vim-syntax-highlight-on-mac.md","hash":"fa02087ac6d73fbc87dc1e4c2aa387fae84ce627","modified":1522177481000},{"_id":"source/_posts/2014/11/08/compile-jdk7-source-code-on-centos.md","hash":"0bf2f40415aa2b42b33c418bd30ff93864b57792","modified":1522177481000},{"_id":"source/_posts/2014/11/19/build-hotspot-jvm-debug-environment-on-linux.md","hash":"dfb7de2e419f1f426c54fe5d2ce8fe396b40d514","modified":1522177481000},{"_id":"source/_posts/2014/12/01/analyse-jvm-startup-flow-through-source-code-create.md","hash":"380106bd8f211bd7d1a511c8e891e19b51511f57","modified":1522177481000},{"_id":"source/_posts/2014/12/01/analyse-jvm-startup-flow-through-source-code-initialize.md","hash":"7b45c4049066558f4cca25da3c999d4a269349a6","modified":1522177481000},{"_id":"source/images/post/2018/03/4090800.jpeg","hash":"2daa21a9a4ce9d4eeada6a70f1dbec468cb4644b","modified":1522177481000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1522177481000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1522177481000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1522177481000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"18309b68ff33163a6f76a39437e618bb6ed411f8","modified":1522177481000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1522177481000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1522177481000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1522177481000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1522177481000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"0810e7c43d6c8adc8434a8fa66eabe0436ab8178","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"f362fbc791dafb378807cabbc58abf03e097af6d","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f43c821ea272f80703862260b140932fe4aa0e1f","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"ba1842dbeb97e46c6c4d2ae0e7a2ca6d610ada67","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"05a5abf02e84ba8f639b6f9533418359f0ae4ecb","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"41f9cdafa00e256561c50ae0b97ab7fcd7c1d6a2","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"a863f2c8bae1fbccdc181a5d178b808cd80c5b5e","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1522177481000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1522177481000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"17b95828f9db7f131ec0361a8c0e89b0b5c9bff5","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"0b57ca04dc3998cf70bb90d777b0db05f3928b82","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8bf095377d28881f63a30bd7db97526829103bf2","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"5d15cc8bbefe44c77a9b9f96bf04a6033a4b35b8","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1522177481000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c06be422bc41fd35e5c7948cdea2c09961207f6","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1522177481000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1522177481000},{"_id":"source/images/post/2014/11/19/debug-jvm-on-linux-1.jpg","hash":"91c95abc79edd1183559d93959cb470e0b0a2132","modified":1522177481000},{"_id":"source/images/post/2014/11/19/debug-jvm-on-linux-2.jpg","hash":"075755b982a59aa4b1cf9686ed328784ecfa4442","modified":1522177481000},{"_id":"source/images/post/2014/11/19/debug-jvm-on-linux-3.jpg","hash":"41c485b3b467012017a4057697e980f1aae01509","modified":1522177481000},{"_id":"source/images/post/2014/11/19/debug-jvm-on-linux-4.jpg","hash":"6aed6c9e0d5a8c5649f997e9d4f9b1791a9765db","modified":1522177481000},{"_id":"source/images/post/2014/11/19/debug-jvm-on-linux-5.jpg","hash":"7c219bfaee1b59e521723e973527f3dc244fbe3c","modified":1522177481000},{"_id":"source/images/post/2014/10/01/configure-vim-highlight-on-mac.png","hash":"cbb2bf9cd32578d71dabae8ea9e3df1f8183a8cc","modified":1522177481000},{"_id":"source/images/post/2014/11/08/compile-openjdk7-on-mac.png","hash":"dd088ed47481f6478b5120f828e0d1225083554a","modified":1522177481000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"d8bf9cb15d9d91c7ad022ba2954b5b4d326f17f7","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/README.md","hash":"a40db80eb6386b085ff810fd3e302f12e76b8df7","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/LICENSE","hash":"8624bcdae55baeef00cd11d5dfcfa60f68710a02","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/config","hash":"0bd9061daa1ae14bc8c15ccb2616123858620669","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/index","hash":"e30560397de03977af861fb1d376dac5a1b1d8e6","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/packed-refs","hash":"cde1114db41fc8373e117cbefb5754588ff07c3d","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"a5913612c237bb7443c6006a386edd775201d423","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.css","hash":"84adea69673c392c1d34a5a316e8e5960aa348b5","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.js","hash":"b85b75426ff7569d54a1f69689895315e80ed85d","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1522250165000},{"_id":"themes/next/source/lib/fancybox/.git/logs/HEAD","hash":"d18ee759165303e0e83f6ea4257763c753ef8536","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"fec45d19179030b8f43ebd0eabc5467892c14136","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"fec45d19179030b8f43ebd0eabc5467892c14136","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/objects/00/c03f6be011e8878608eec12f68caf42b73f38e","hash":"8516bd35bc8f9223e13de5877778c8d14d49d6db","modified":1522250171000},{"_id":"themes/next/source/lib/fancybox/.git/objects/19/3567a3107003507fafacd255c349857e417926","hash":"ef5eab75e8c6998cb223edb4eb8a26c4cfc9415c","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/objects/36/9bab09306448a2970d378b59bb21c059edad63","hash":"877e0c15623d0d6ff8f09bb627fc60a489f3c105","modified":1522250171000},{"_id":"themes/next/source/lib/fancybox/.git/objects/54/0a7b36ee26decfc3f0f34bf73bc85c48899128","hash":"2e5447a9dd879d71368e9dddd34d93849d00b934","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/objects/78/068b93f813cecbbd50c8247de547035009d512","hash":"4bc2bee779bd7e3cca13ee34801cf1e12585e5ae","modified":1522250171000},{"_id":"themes/next/source/lib/fancybox/.git/objects/7b/15d3cb03fda86241f8b2b335f04e9b9de0e1c4","hash":"d1fe3bd82c90f7d93874798a8ee8ebf1391d7207","modified":1522250171000},{"_id":"themes/next/source/lib/fancybox/.git/objects/89/9d7a75b543fbed2a785f67d995bc77e06eb2e9","hash":"5651e2b80703225f642625c0fb2646543096d2cf","modified":1522250171000},{"_id":"themes/next/source/lib/fancybox/.git/objects/92/4369c371444afb18fb86309229f5b4c24c6cf4","hash":"9eb6fa8ff9081e6650f6bee350d21567df105737","modified":1522250171000},{"_id":"themes/next/source/lib/fancybox/.git/objects/94/a9ed024d3859793618152ea559a168bbcbb5e2","hash":"1c2d080a86f03eb960e112a94910a5115addf57a","modified":1522250171000},{"_id":"themes/next/source/lib/fancybox/.git/objects/aa/654e17af8c354994f706c4e33bba6b5b70caeb","hash":"22b1bdf0b0974bf5e9022953ac26066056c235ff","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/objects/bd/e1f741357b44b49290d43fdd193125202fef81","hash":"9beefc75cc0c37d04e98dd13b51ad85df40e77b9","modified":1522250171000},{"_id":"themes/next/source/lib/fancybox/.git/objects/c2/fc5def1b6c38369e5e8b849adb956bd79b549e","hash":"27f03b9616e615b2724bac0fa4507d152697f3f1","modified":1522250171000},{"_id":"themes/next/source/lib/fancybox/.git/objects/ac/97c2cc9f61c52753abe4174a4a74b2064e5af0","hash":"272e74036b0612de83d9d0aa9604d3edf888b249","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/objects/f6/bb280a0b2c68256a8e906b35c6976c80c1b3be","hash":"5daaee11fc384fbe0f02c7123036c954ee9a73fd","modified":1522250171000},{"_id":"themes/next/source/lib/fancybox/.git/refs/heads/master","hash":"01fe0b1cf911f9e2e30415be1c967b1eaae2ee38","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/logs/refs/heads/master","hash":"d18ee759165303e0e83f6ea4257763c753ef8536","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1522250172000},{"_id":"themes/next/source/lib/fancybox/.git/logs/refs/remotes/origin/HEAD","hash":"d18ee759165303e0e83f6ea4257763c753ef8536","modified":1522250172000},{"_id":"public/search.xml","hash":"8ad2aed2ebb0bacf8440801ccf26944f0d02c80e","modified":1522250202157},{"_id":"public/about/index.html","hash":"2a451741c296e65f5a161b0272160e488ecb1821","modified":1522250202204},{"_id":"public/categories/index.html","hash":"393486ab0d597ba717df8c3fa8dc40977952c78e","modified":1522250202204},{"_id":"public/tags/index.html","hash":"f64134b6ca844d71323daf4bc350e3ec325ae808","modified":1522250202205},{"_id":"public/2014/12/01/analyse-jvm-startup-flow-through-source-code-initialize.html","hash":"e65144c7f4568756eeed9f12baf44e0a73bd4dd0","modified":1522250202205},{"_id":"public/2014/12/01/analyse-jvm-startup-flow-through-source-code-create.html","hash":"2e69a742b8314366f895eb7c9b02cbe84d5ad6a8","modified":1522250202205},{"_id":"public/2014/11/19/build-hotspot-jvm-debug-environment-on-linux.html","hash":"f1b8a7b3f192c2a65080cd46b05b2507748985b0","modified":1522250202205},{"_id":"public/2014/11/08/compile-jdk7-source-code-on-centos.html","hash":"a224b56e70e1078c195a1cec142ddd51add0a2ce","modified":1522250202205},{"_id":"public/2014/01/20/install-and-configure-mysql-on-centos.html","hash":"bc9ab8ff9fc85d99e50dcc71e615b0eb53c8f335","modified":1522250202205},{"_id":"public/2014/10/01/configure-vim-syntax-highlight-on-mac.html","hash":"68f891388096a3f82ea5b32d2a647e50c08f2242","modified":1522250202205},{"_id":"public/2011/01/10/hello-world.html","hash":"eed71c549113b0bddf58c6833a4f546363029fc5","modified":1522250202205},{"_id":"public/index.html","hash":"ff82eca4ae8eec603b70148ce6bf9a574825f031","modified":1522250202206},{"_id":"public/archives/index.html","hash":"de29d34faaebf9668379fae0b05a504959f8cc5e","modified":1522250202206},{"_id":"public/archives/2011/index.html","hash":"dcf41c4490c216f36634ce9e8ca778397cca56e5","modified":1522250202206},{"_id":"public/archives/2011/01/index.html","hash":"ac8dbe7b547120e26b1bf5805ccf1832d57a9d68","modified":1522250202206},{"_id":"public/archives/2014/index.html","hash":"93815b3a066ee1e0bb27a56ab2b03bec45390339","modified":1522250202206},{"_id":"public/archives/2014/01/index.html","hash":"6806d002e9118b0dc8ed8d1a084e68a2c2252290","modified":1522250202206},{"_id":"public/archives/2014/11/index.html","hash":"9e0f8e70cc3dba12a98ea329e209e756c8dc5afb","modified":1522250202207},{"_id":"public/archives/2014/12/index.html","hash":"5145abdf28dba650ae58c71fc176c8a726dacfe8","modified":1522250202207},{"_id":"public/categories/默认分类/index.html","hash":"c6886e5447dd602e9fb9b46dfccff7fd486f2ee2","modified":1522250202207},{"_id":"public/categories/OPENJDK/index.html","hash":"3c2fba7d2ab900a58a2be804159177f313bd6ef8","modified":1522250202207},{"_id":"public/categories/MYSQL/index.html","hash":"95a537b7e006fa597ea8850cb88869ed27177172","modified":1522250202207},{"_id":"public/categories/MAC/index.html","hash":"9744f68d0a10a489f00612ebf952ba0fe64d4ab2","modified":1522250202207},{"_id":"public/tags/OPENJDK/index.html","hash":"0748376bed4c9b02a085ab4dc04dc8cb726c9c60","modified":1522250202207},{"_id":"public/tags/JVM/index.html","hash":"d632db242913404f9768317d8f8a11ce55f5f24f","modified":1522250202207},{"_id":"public/tags/CENTOS/index.html","hash":"d3c24ce7ca72499e0409b044cf9436e3a6bb63f2","modified":1522250202207},{"_id":"public/tags/MYSQL/index.html","hash":"6b124ca2bd595299dfcd94ae3f84f4c061d2a68b","modified":1522250202208},{"_id":"public/tags/LINUX/index.html","hash":"a589ea4a5523c07cb9b58f9205db3180ce0911e9","modified":1522250202208},{"_id":"public/tags/VIM/index.html","hash":"9326b1d17da270f4be5a81e156a96c44c2ab3296","modified":1522250202208},{"_id":"public/tags/MAC/index.html","hash":"c217209011df0dee8d0e977abeddc5a3c30cec6b","modified":1522250202208},{"_id":"public/lib/fancybox/LICENSE","hash":"8624bcdae55baeef00cd11d5dfcfa60f68710a02","modified":1522250202212},{"_id":"public/lib/fancybox/README.html","hash":"acfa25ca9b6457a4a70a4b35cf72c9dafc33584e","modified":1522250202240},{"_id":"public/lib/fancybox/source/jquery.fancybox.min.css","hash":"84adea69673c392c1d34a5a316e8e5960aa348b5","modified":1522250202240},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"a5913612c237bb7443c6006a386edd775201d423","modified":1522250202240},{"_id":"public/lib/fancybox/source/jquery.fancybox.min.js","hash":"b85b75426ff7569d54a1f69689895315e80ed85d","modified":1522250202240},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"fec45d19179030b8f43ebd0eabc5467892c14136","modified":1522250202240},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"fec45d19179030b8f43ebd0eabc5467892c14136","modified":1522250202240},{"_id":"themes/next/source/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1522250334000},{"_id":"themes/next/source/lib/pace/README.md","hash":"33b87ed998d59f117dc329f999a4ffc744b41e79","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1522250334000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/config","hash":"46d590e05dc25560a69d5cc71b337adad9654443","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/index","hash":"944f2fd5d31c4231f56a8f17f9b386f46dd6ea4b","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/packed-refs","hash":"bb3c30cf521feaa7ac447fee70f54cdcbd1892a1","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1522250329000},{"_id":"themes/next/source/lib/pace/.git/logs/HEAD","hash":"698e2ab73aa118bbf63ec8d3cbe966c0ea53d131","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/00/13175fe71888324d9142744034e8296501174a","hash":"0ad0e50f7fe91fe14491924aa4b1e2e8f060a5cd","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/1c/159365320ef5dde63906912f3df067376b40d0","hash":"1dd6b7373c3f9c67e34aa319c9c08fd0f667156a","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/23/4f9b3e93f06a85cb2ec01acc872ccdc2bec7cb","hash":"63f8640eceff35a80175a102fcbd8789e690cfaa","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/35/a749d823ad0aae6111a76dc501a1170478f376","hash":"e757129fb6bca3170b62b05f3e850e4b55f3ae88","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/3e/dcd352d2a1a60dbb6a43e7e9f00bab8b55791a","hash":"725bf5094855cd943dd1cd351906fb1ebec1d861","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/41/28e69301ad36a283c0fc523f3aef89644d2467","hash":"d8b985cf431fbdc5b4fa3be89e27db7a3437c920","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/49/0db22b657dd64430d003fe2831905a54858b22","hash":"43694656c4c331cfa3667afca630bd486ac0d0fe","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/4d/fbb499a4f7b2f26a535c335cd66c966ff8b261","hash":"14e4cdcc137045c7efed32f796273d40c9fcef87","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/53/3d55db0342c2b011ac05703c3b42e88a25c1ed","hash":"c48454760d2e04602a5499188b33d38839c58aee","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/60/0378418401f2b0e7c58407a7bbc5a5196cfa51","hash":"20489d796247dda758599f40cbfcf14d194ef64a","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/82/8dcba3c8a21de08d1eb38f2eee453b51543188","hash":"629aad2ee2e564790e78cd46e99ad396544960ab","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/8b/b4535a79cc15127f8906b24c4e0bb4a38a5947","hash":"9c2d65a63f18929b09f3592dda064f24309ff98b","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/84/a17ac7b4fe9cea559de91f00af88f810bff7f1","hash":"b41b6d3cbccd75b711f0523bba1c26bf19b0a862","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/97/1e8a1f2ad6d45f693980c106af0aead9d1c215","hash":"e45f0963920a53a57f6b53d178e5b05a8e315189","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/a6/dbd9c99e726f621e2bdcd3c6fe2795a5d4272d","hash":"25350dd31f504af7206610ced355d162aabda8dd","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/aa/813c5a6398600e01b740696cd889eb3becad84","hash":"c62a1513ca820dc59fe1cd6d9ec16c92e0e2fbf0","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/9b/3058068409f2282607ebb91717d7a6a1406230","hash":"651c5857021e11dc397df86dbe0f01e6c7dc7f16","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/c0/05c71f1a000d8187df58083d215c962d7f5505","hash":"dffd212ca2ec705233fabe82a6f483d6be4b151d","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/de/79ab6539ac3702aaac64b879d95e6575f4eefa","hash":"0046fefd52ed4679e0fee757cc91ced94e3ddc12","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/objects/f3/0e0a99bb016267bde55537dd47b3657ae59544","hash":"8bf0bc17a6111b6a82981073133f33cc8e815c41","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/refs/heads/master","hash":"3190f62cf3c4f9eccb1e54c8f7289ed7e6955767","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/logs/refs/heads/master","hash":"698e2ab73aa118bbf63ec8d3cbe966c0ea53d131","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1522250334000},{"_id":"themes/next/source/lib/pace/.git/logs/refs/remotes/origin/HEAD","hash":"698e2ab73aa118bbf63ec8d3cbe966c0ea53d131","modified":1522250334000},{"_id":"public/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1522250374943},{"_id":"public/lib/pace/README.html","hash":"58f2105ada5cc52dff5aabcecb92569ee84493a0","modified":1522250374955},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1522250374955},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1522250374955},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1522250374956},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1522250374956},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1522250374956},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1522250374956},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1522250374956},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1522250374956},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1522250374956},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1522250374956},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1522250374956},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1522250374956},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1522250374956},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1522250374965},{"_id":"themes/next/source/lib/reading_progress/.editorconfig","hash":"7d47ecd70ca58d26af4f69ff1b23034edcf4475e","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/.gitignore","hash":"09cde1060b4213a7eee528b54560777d2d3756e8","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/README.md","hash":"9b00c4ce1a739c825df4e51977f7525d2c9f6b81","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/package.json","hash":"7bcb3787978a0c445b1bd3dfeca6ae6016c98abc","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","hash":"174678a8e2a24763e3fe8b9c25496fdf6ee0220b","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/reading_progress.min.js","hash":"98af8d99819882904f9b1a9254bebf40602e1843","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/.git/config","hash":"961f76a65d5278408c0317ac92bff35cfe52dfe8","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/index","hash":"beac7fe42f64ea93d896022471c2a9f3a3f2a8e4","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/.git/packed-refs","hash":"a41854c213091f96c7ab8259d2b6cc5e4c45b23c","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1522250414000},{"_id":"themes/next/source/lib/reading_progress/.git/logs/HEAD","hash":"ba70e711ceec564a31ed9c74eef56c43c7ac54fc","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/00/4fa4280892c7d18f6151fac22daf51344c02ea","hash":"7a81ed1087c3792f37bd83137d4034179c911627","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/01/36e1990fcbef0586e0bd4b9d90b96900dcd575","hash":"37ac2f94a41384f4cb66cd74c8313099367a5603","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/08/4d73e711ab990007314dab66ac8da236a98212","hash":"aca52af21085b7a579b275a1e7bb5f1a8818e3d4","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/01/9a385ce3e8b0232ee5edfa6b4e1dcd44cf142e","hash":"6894d6df0722077c5d21d116f33046625cd57ab8","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/2b/c9c88e86c252b037a36df9a3d3df519b254bfc","hash":"e647f9721e4f2e1cd52bfff3c80683b787f76a11","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/2d/488e7ac12f9be4cba8a7a383e972449b4ecef7","hash":"e477cea6ada0896804b0e8dab23c9d56825a0ece","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/36/58085a9181df88f19f04603b28f6ea21d199cc","hash":"6a467dd51d39b28c1af9c25869e25c6821f6602a","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/48/1ebe947f06e440e41c1a971be0844e852c1d37","hash":"61fea90ca1824db58df6cfc662bc5b371db02224","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/71/4aebae4e17e00cdb0e82893d9fa39d35b20b59","hash":"d09daa7d244ee40035e6eb67f13867182fb8af86","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/83/d5a97b3daaa59cccb44af55f6723f431f2e94a","hash":"448c16fa4f53e5123838d4c3593dcfb15f309905","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/8f/ca1e70cfeea939105e31d7d17f7c3516120b30","hash":"312d55b1a7fbdcc14c54b3805f0827fc42ad94ed","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/98/a2041bc808f55bbcb9d8b53560e22558338bda","hash":"ebb53379aa2d77ea0832973fa3e44846df0f170f","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/a2/7bba2bf42630fc03150b64fc74f2a29c151a27","hash":"b1afe600ba94298a2905a2cf64c900f5954cc146","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/a8/63332915ebfd107ca4418c25c80674875c422b","hash":"f12e708237bcf98c072e73e45f1542cfb5646839","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/ae/aa7a68a7131bd03e0bce06f45bfdfa1cd93587","hash":"d7d37380ba502a4050834df40227d612cf911595","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/b2/6b015c6a0aacd5fcbd3fd3a09b0b216855f35c","hash":"6924e4c4558366a76578a2497d2fca15ef39a9f8","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/b6/eda56cb9647d239b26d86f579204cbccf745fe","hash":"12e479d3dfe08df6f9d4d56be2f0a17d9720d846","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/c0/018cb7262951a7eea4001bea16bf6c1db1de0e","hash":"b54299894dbbf00b3187ae3e16a480a91ca75e73","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/c7/8ceb135b768a369ded42f77d4db3f6363bde20","hash":"aa90e157f2a043dad6017bab2e4aa699f6236a63","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/d1/94060fce08431ebef4cb5f4c02739b913373cb","hash":"b9022b117b03703b5fa8af85fc076b692bde33cf","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/e5/dc795cdf7d9163cc736be938a9707f73869c9f","hash":"57163dfa4eebe09d57ede37ee259b7cbb2b1e643","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/f6/8184f97255dfd504e22775df6450edb9b51d70","hash":"b0a36dcf81780a9f82db6318daa065200e16efee","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/f0/acd06a59665dabfb6eb0608f0a797fdcd44158","hash":"f85f3dbe326b8752f6e32c7169ed3b409f4167b7","modified":1522250419000},{"_id":"themes/next/source/lib/reading_progress/.git/refs/heads/master","hash":"35b5015021477f00984d50ee8894b23b639bb6d4","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/.git/logs/refs/heads/master","hash":"ba70e711ceec564a31ed9c74eef56c43c7ac54fc","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1522250420000},{"_id":"themes/next/source/lib/reading_progress/.git/logs/refs/remotes/origin/HEAD","hash":"ba70e711ceec564a31ed9c74eef56c43c7ac54fc","modified":1522250420000},{"_id":"public/lib/reading_progress/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1522250427671},{"_id":"public/lib/reading_progress/README.html","hash":"3287121425b2e90fc66e6410984e80a8c85d9ecd","modified":1522250427687},{"_id":"public/lib/reading_progress/package.json","hash":"e404a0bdf26df62eb89173c6fe5f5824345801c5","modified":1522250427687},{"_id":"public/lib/reading_progress/reading_progress.js","hash":"174678a8e2a24763e3fe8b9c25496fdf6ee0220b","modified":1522250427687},{"_id":"public/lib/reading_progress/reading_progress.min.js","hash":"98af8d99819882904f9b1a9254bebf40602e1843","modified":1522250427688},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1522250811000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1522250811000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1522250811000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1522250811000}],"Category":[{"name":"默认分类","_id":"cjfb89nbz00055ls6r97cdtci"},{"name":"OpenJDK","_id":"cjfb89nc4000a5ls6i7dfkfba"},{"name":"MySQL","_id":"cjfb89nc8000f5ls6rs4gukx8"},{"name":"Mac","_id":"cjfb89nc9000j5ls6p4mp5vvf"}],"Data":[],"Page":[{"title":"关于我","date":"2018-03-25T16:41:09.000Z","type":"about","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2018-03-26 00:41:09\ntype: \"about\"\ncomments: false\n---\n","updated":"2018-03-27T19:04:41.000Z","path":"about/index.html","layout":"page","_id":"cjfb89n6000005ls63b717675","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2018-03-25T16:39:44.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-03-26 00:39:44\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-03-27T19:04:41.000Z","path":"categories/index.html","layout":"page","_id":"cjfb89n6300015ls6rovkbr7k","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-03-25T16:41:20.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-03-26 00:41:20\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-03-27T19:04:41.000Z","path":"tags/index.html","layout":"page","_id":"cjfb89n6600025ls6q2poeuya","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","date":"2011-01-10T04:13:35.000Z","_content":"   [原博客](http://zhaohe162.blog.163.com)从2007年7月24日注册已经有10+个年头了，估计也算是中国第一批博客用户了，也见证了网易博客从最初到后来发展成熟的过程。\n   \n记得当年比较流行装扮博客，网易官方推出了各式各样的皮肤，并且允许用户博客自定义和分享，后来推出首页自定义模块，具体方式是通过特定的代码来加入更丰富的功能，也就是那时候最初接触到了HTML/CSS。\n\n装扮玩博客后还有更重要的一项就是：推广。当时为了提高博客访问量增加影响力也着实费了一番功夫，通过各种方式各种渠道宣传、互换人气，当时比较有名的是`博客群(http://www.bokequn.cn)` `博搜(http://www.boosou.com)`和`博无忧（http://www.bo56.com）`。\n\n2009年的时候，网易博客推出了圈子功能，类似QQ群，博友可以把自己的博文、相册推荐到圈子里，圈子里同时有论坛功能，于是大家开始各种灌水，我的圈子从2009年1月份开通，到后来网易博客没落共有3万7千多圈友，在当时也是个比较大的社群了。\n<!-- more -->\n同年，网易博客每隔段时间就发系统公告，说要对系统存储空间进行扩容，后来技术团队应该是攻克了存储扩容问题，于是便再也没有发过类似公告。\n\n从2011年工作后开始更新技术文章，有时候写博客需要贴代码，但网易博客没有这个功能，所以通过意见反馈渠道反馈了这一情况，意外的是居然收到了网易的产品经理的回复，并且网易博客很快加入了该功能，虽然不太好用，但还是很感谢。\n\n2013年网易博客向部分博主推出了广告服务内测，很荣幸被选入其中，由于访问量还不错，前后一年内共入账了1K左右，算是人生中第一桶金。不过随着业务发展，网易公司决定对推广资源进行合理调整，于2014年4月1日下线网易博客有道推广广告位。\n\n...\n\n十一年，零零散散记载了很多篇，随着工作的忙碌近几年更新频率与日俱减。工作年头越来越多，反而慢慢有了重新执笔的冲动，突然想写点什么。\n\n今年（2017）建立了自己的GitHub Pages并注册了自己的域名，经过一番折腾后，决定把原博客的部分文章迁移过来，一方面用于纪念曾经的青葱岁月，另一方面同时鼓励自己笔耕不辍，把自己这些年以来的所见所闻、所感所悟以文字的方式记录下来，如果恰巧你也有类似的经历或共鸣，那也算是人生中一大幸事了。\n","source":"_posts/2011/01/10/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2011-01-10 12:13:35\ncategories: 默认分类\n---\n   [原博客](http://zhaohe162.blog.163.com)从2007年7月24日注册已经有10+个年头了，估计也算是中国第一批博客用户了，也见证了网易博客从最初到后来发展成熟的过程。\n   \n记得当年比较流行装扮博客，网易官方推出了各式各样的皮肤，并且允许用户博客自定义和分享，后来推出首页自定义模块，具体方式是通过特定的代码来加入更丰富的功能，也就是那时候最初接触到了HTML/CSS。\n\n装扮玩博客后还有更重要的一项就是：推广。当时为了提高博客访问量增加影响力也着实费了一番功夫，通过各种方式各种渠道宣传、互换人气，当时比较有名的是`博客群(http://www.bokequn.cn)` `博搜(http://www.boosou.com)`和`博无忧（http://www.bo56.com）`。\n\n2009年的时候，网易博客推出了圈子功能，类似QQ群，博友可以把自己的博文、相册推荐到圈子里，圈子里同时有论坛功能，于是大家开始各种灌水，我的圈子从2009年1月份开通，到后来网易博客没落共有3万7千多圈友，在当时也是个比较大的社群了。\n<!-- more -->\n同年，网易博客每隔段时间就发系统公告，说要对系统存储空间进行扩容，后来技术团队应该是攻克了存储扩容问题，于是便再也没有发过类似公告。\n\n从2011年工作后开始更新技术文章，有时候写博客需要贴代码，但网易博客没有这个功能，所以通过意见反馈渠道反馈了这一情况，意外的是居然收到了网易的产品经理的回复，并且网易博客很快加入了该功能，虽然不太好用，但还是很感谢。\n\n2013年网易博客向部分博主推出了广告服务内测，很荣幸被选入其中，由于访问量还不错，前后一年内共入账了1K左右，算是人生中第一桶金。不过随着业务发展，网易公司决定对推广资源进行合理调整，于2014年4月1日下线网易博客有道推广广告位。\n\n...\n\n十一年，零零散散记载了很多篇，随着工作的忙碌近几年更新频率与日俱减。工作年头越来越多，反而慢慢有了重新执笔的冲动，突然想写点什么。\n\n今年（2017）建立了自己的GitHub Pages并注册了自己的域名，经过一番折腾后，决定把原博客的部分文章迁移过来，一方面用于纪念曾经的青葱岁月，另一方面同时鼓励自己笔耕不辍，把自己这些年以来的所见所闻、所感所悟以文字的方式记录下来，如果恰巧你也有类似的经历或共鸣，那也算是人生中一大幸事了。\n","slug":"2011/01/10/hello-world","published":1,"updated":"2018-03-27T19:04:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfb89nbt00035ls69h0n3uwx","content":"<p>   <a href=\"http://zhaohe162.blog.163.com\" target=\"_blank\" rel=\"noopener\">原博客</a>从2007年7月24日注册已经有10+个年头了，估计也算是中国第一批博客用户了，也见证了网易博客从最初到后来发展成熟的过程。</p>\n<p>记得当年比较流行装扮博客，网易官方推出了各式各样的皮肤，并且允许用户博客自定义和分享，后来推出首页自定义模块，具体方式是通过特定的代码来加入更丰富的功能，也就是那时候最初接触到了HTML/CSS。</p>\n<p>装扮玩博客后还有更重要的一项就是：推广。当时为了提高博客访问量增加影响力也着实费了一番功夫，通过各种方式各种渠道宣传、互换人气，当时比较有名的是<code>博客群(http://www.bokequn.cn)</code> <code>博搜(http://www.boosou.com)</code>和<code>博无忧（http://www.bo56.com）</code>。</p>\n<p>2009年的时候，网易博客推出了圈子功能，类似QQ群，博友可以把自己的博文、相册推荐到圈子里，圈子里同时有论坛功能，于是大家开始各种灌水，我的圈子从2009年1月份开通，到后来网易博客没落共有3万7千多圈友，在当时也是个比较大的社群了。<br><a id=\"more\"></a><br>同年，网易博客每隔段时间就发系统公告，说要对系统存储空间进行扩容，后来技术团队应该是攻克了存储扩容问题，于是便再也没有发过类似公告。</p>\n<p>从2011年工作后开始更新技术文章，有时候写博客需要贴代码，但网易博客没有这个功能，所以通过意见反馈渠道反馈了这一情况，意外的是居然收到了网易的产品经理的回复，并且网易博客很快加入了该功能，虽然不太好用，但还是很感谢。</p>\n<p>2013年网易博客向部分博主推出了广告服务内测，很荣幸被选入其中，由于访问量还不错，前后一年内共入账了1K左右，算是人生中第一桶金。不过随着业务发展，网易公司决定对推广资源进行合理调整，于2014年4月1日下线网易博客有道推广广告位。</p>\n<p>…</p>\n<p>十一年，零零散散记载了很多篇，随着工作的忙碌近几年更新频率与日俱减。工作年头越来越多，反而慢慢有了重新执笔的冲动，突然想写点什么。</p>\n<p>今年（2017）建立了自己的GitHub Pages并注册了自己的域名，经过一番折腾后，决定把原博客的部分文章迁移过来，一方面用于纪念曾经的青葱岁月，另一方面同时鼓励自己笔耕不辍，把自己这些年以来的所见所闻、所感所悟以文字的方式记录下来，如果恰巧你也有类似的经历或共鸣，那也算是人生中一大幸事了。</p>\n","site":{"data":{}},"excerpt":"<p>   <a href=\"http://zhaohe162.blog.163.com\" target=\"_blank\" rel=\"noopener\">原博客</a>从2007年7月24日注册已经有10+个年头了，估计也算是中国第一批博客用户了，也见证了网易博客从最初到后来发展成熟的过程。</p>\n<p>记得当年比较流行装扮博客，网易官方推出了各式各样的皮肤，并且允许用户博客自定义和分享，后来推出首页自定义模块，具体方式是通过特定的代码来加入更丰富的功能，也就是那时候最初接触到了HTML/CSS。</p>\n<p>装扮玩博客后还有更重要的一项就是：推广。当时为了提高博客访问量增加影响力也着实费了一番功夫，通过各种方式各种渠道宣传、互换人气，当时比较有名的是<code>博客群(http://www.bokequn.cn)</code> <code>博搜(http://www.boosou.com)</code>和<code>博无忧（http://www.bo56.com）</code>。</p>\n<p>2009年的时候，网易博客推出了圈子功能，类似QQ群，博友可以把自己的博文、相册推荐到圈子里，圈子里同时有论坛功能，于是大家开始各种灌水，我的圈子从2009年1月份开通，到后来网易博客没落共有3万7千多圈友，在当时也是个比较大的社群了。<br>","more":"<br>同年，网易博客每隔段时间就发系统公告，说要对系统存储空间进行扩容，后来技术团队应该是攻克了存储扩容问题，于是便再也没有发过类似公告。</p>\n<p>从2011年工作后开始更新技术文章，有时候写博客需要贴代码，但网易博客没有这个功能，所以通过意见反馈渠道反馈了这一情况，意外的是居然收到了网易的产品经理的回复，并且网易博客很快加入了该功能，虽然不太好用，但还是很感谢。</p>\n<p>2013年网易博客向部分博主推出了广告服务内测，很荣幸被选入其中，由于访问量还不错，前后一年内共入账了1K左右，算是人生中第一桶金。不过随着业务发展，网易公司决定对推广资源进行合理调整，于2014年4月1日下线网易博客有道推广广告位。</p>\n<p>…</p>\n<p>十一年，零零散散记载了很多篇，随着工作的忙碌近几年更新频率与日俱减。工作年头越来越多，反而慢慢有了重新执笔的冲动，突然想写点什么。</p>\n<p>今年（2017）建立了自己的GitHub Pages并注册了自己的域名，经过一番折腾后，决定把原博客的部分文章迁移过来，一方面用于纪念曾经的青葱岁月，另一方面同时鼓励自己笔耕不辍，把自己这些年以来的所见所闻、所感所悟以文字的方式记录下来，如果恰巧你也有类似的经历或共鸣，那也算是人生中一大幸事了。</p>"},{"title":"在Linux上编译OpenJDK7源码","date":"2014-11-07T21:50:46.000Z","_content":"\n\n# 软件环境\n- OS：CentOS 6.5\n- JDK: OpenJDK-7u40\n\n# 准备工作\n\n## 下载源码包\n[OpenJDK Source Releases](https://jdk7.java.net/source.html)\n\n## 解压源码包\n```bash\n# unzip openjdk-7u40-fcs-src-b43-26_aug_2013.zip\n```\n\n- hotspot 虚拟机实现，大部分是C/C++代码\n- jdk Java核心类库目录，位于 jdk/src/share/classes\n- langtools 一些编译工具\n\n## 安装依赖\n```bash\nyum -y install gcc gcc-c++ alsa-lib alsa-lib-devel libXrender libXrender-devel libXi-devel libXt-devel libXtst-devel cups cups-devel\n```\n\n<!-- more -->\n\n## 安装freetype\n```bash\n# ./configure && make && make install\n```\n\n## 安装Ant\n```bash\nln -s /usr/local/apache-ant-1.9.4/bin/ant /usr/bin/ant\n```\n\n## 安装JDK（如果已有则不必重新安装） \n`Sun JDK或Open JDK均可，过程略.`\n\n# 环境配置\n编辑文件`vim ~/.bash_profile`加入以下变量\n\n```\nexport LANG=\"C\"\nexport ALT_BOOTDIR=\"/usr/java/jdk1.7.0_67/\"\nexport ANT_HOME=\"/usr/local/apache-ant-1.9.4\"\nexport ALT_FREETYPE_HEADERS_PATH=\"/usr/local/include/freetype2\"\nexport ALT_FREETYPE_LIB_PATH=\"/usr/local/lib\"\nexport ALLOW_DOWNLOADS=true\nexport SKIP_DEBUG_BUILD=false\nexport SKIP_FASTDEBUG_BUILD=true\nexport DEBUG_NAME=debug\nunset JAVA_HOME\nunset CLASSPATH\n```\n\n使变量生效\n```\n# source ~/.bash_profile\n```\n\n# 编译源码\n\n## 测试环境是否健全\n```\n# make sanity\n```\n\n## 如果输出以下内容则表示通过，可以进行编译。\n```\nSanity check passed.\n```\n\n## 开始编译\n```\n# make ARCH_DATA_MODEL=64\n```\n\n## 看到如下输出则为编译成功\n```\n>>>Finished making images @ Sat Nov  8 00:45:16 EST 2014 ...\nmake[2]: Leaving directory `/usr/local/openjdk/jdk/make'\n########################################################################\n##### Leaving jdk for target(s) sanity all docs images             #####\n########################################################################\n##### Build time 00:10:15 jdk for target(s) sanity all docs images #####\n########################################################################\n\n#-- Build times ----------\nTarget debug_build\nStart 2014-11-08 00:26:41\nEnd   2014-11-08 00:45:16\n00:02:11 corba\n00:04:36 hotspot\n00:00:24 jaxp\n00:00:30 jaxws\n00:10:15 jdk\n00:00:39 langtools\n00:18:35 TOTAL\n-------------------------\nmake[1]: Leaving directory `/usr/local/openjdk'\n[root@BobServerStation openjdk]#\n```\n\n# 测试验证\n\n## 一个测试类\n```java\n/**\n* Author: HunterZhao\n* Date: 2014-11-08\n*/\npublic class Test{\n  public static void main(String[] args){\n       System.out.println(\"Hello OpenJDK~\");\n  }\n}\n```\n\n使用刚生成的JDK编译\n```\n# ./build/linux-amd64/bin/javac Test.java\n```\n在当前目录下会生成Test.class文件，然后运行便会看到输出。\n```\n# ./build/linux-amd64/bin/java Test\nHello OpenJDK~\n```\n\n## 另一个测试类\n进入目录`jdk/src/share/classes/java/io`，然后修改`PrintStream.java`\n\n```java\n/**\n   * Prints a string.  If the argument is <code>null</code> then the string\n   * <code>\"null\"</code> is printed.  Otherwise, the string's characters are\n   * converted into bytes according to the platform's default character\n   * encoding, and these bytes are written in exactly the manner of the\n   * <code>{@link #write(int)}</code> method.\n   *\n   * @param      s   The <code>String</code> to be printed\n   */\n  public void print(String s) {\n      if (s == null) {\n          s = \"null\";\n      }\n      s = s + \" This is OpenJdk7 compiled by Bob.Z!!!\";  // 重新赋值\n      write(s);\n  }\n```\n\n接下来重新编译JDK，重新编译刚才的Test.java文件并运行会看到如下输出：\n\n\n![compile-openjdk7](/images/post/2014/11/08/compile-openjdk7-on-mac.png)\n\nEnjoy them~\n\n\n# Reference\n- OpenJDK: https://jdk7.java.net/\n- freetype: http://download.savannah.gnu.org/releases/freetype/\n- Ant: http://archive.apache.org/dist/ant/binaries/","source":"_posts/2014/11/08/compile-jdk7-source-code-on-centos.md","raw":"---\ntitle: 在Linux上编译OpenJDK7源码\ndate: 2014-11-08 05:50:46\ncategories: OpenJDK\ntags:\n    - OpenJDK\n    - JVM\n    - CentOS\n---\n\n\n# 软件环境\n- OS：CentOS 6.5\n- JDK: OpenJDK-7u40\n\n# 准备工作\n\n## 下载源码包\n[OpenJDK Source Releases](https://jdk7.java.net/source.html)\n\n## 解压源码包\n```bash\n# unzip openjdk-7u40-fcs-src-b43-26_aug_2013.zip\n```\n\n- hotspot 虚拟机实现，大部分是C/C++代码\n- jdk Java核心类库目录，位于 jdk/src/share/classes\n- langtools 一些编译工具\n\n## 安装依赖\n```bash\nyum -y install gcc gcc-c++ alsa-lib alsa-lib-devel libXrender libXrender-devel libXi-devel libXt-devel libXtst-devel cups cups-devel\n```\n\n<!-- more -->\n\n## 安装freetype\n```bash\n# ./configure && make && make install\n```\n\n## 安装Ant\n```bash\nln -s /usr/local/apache-ant-1.9.4/bin/ant /usr/bin/ant\n```\n\n## 安装JDK（如果已有则不必重新安装） \n`Sun JDK或Open JDK均可，过程略.`\n\n# 环境配置\n编辑文件`vim ~/.bash_profile`加入以下变量\n\n```\nexport LANG=\"C\"\nexport ALT_BOOTDIR=\"/usr/java/jdk1.7.0_67/\"\nexport ANT_HOME=\"/usr/local/apache-ant-1.9.4\"\nexport ALT_FREETYPE_HEADERS_PATH=\"/usr/local/include/freetype2\"\nexport ALT_FREETYPE_LIB_PATH=\"/usr/local/lib\"\nexport ALLOW_DOWNLOADS=true\nexport SKIP_DEBUG_BUILD=false\nexport SKIP_FASTDEBUG_BUILD=true\nexport DEBUG_NAME=debug\nunset JAVA_HOME\nunset CLASSPATH\n```\n\n使变量生效\n```\n# source ~/.bash_profile\n```\n\n# 编译源码\n\n## 测试环境是否健全\n```\n# make sanity\n```\n\n## 如果输出以下内容则表示通过，可以进行编译。\n```\nSanity check passed.\n```\n\n## 开始编译\n```\n# make ARCH_DATA_MODEL=64\n```\n\n## 看到如下输出则为编译成功\n```\n>>>Finished making images @ Sat Nov  8 00:45:16 EST 2014 ...\nmake[2]: Leaving directory `/usr/local/openjdk/jdk/make'\n########################################################################\n##### Leaving jdk for target(s) sanity all docs images             #####\n########################################################################\n##### Build time 00:10:15 jdk for target(s) sanity all docs images #####\n########################################################################\n\n#-- Build times ----------\nTarget debug_build\nStart 2014-11-08 00:26:41\nEnd   2014-11-08 00:45:16\n00:02:11 corba\n00:04:36 hotspot\n00:00:24 jaxp\n00:00:30 jaxws\n00:10:15 jdk\n00:00:39 langtools\n00:18:35 TOTAL\n-------------------------\nmake[1]: Leaving directory `/usr/local/openjdk'\n[root@BobServerStation openjdk]#\n```\n\n# 测试验证\n\n## 一个测试类\n```java\n/**\n* Author: HunterZhao\n* Date: 2014-11-08\n*/\npublic class Test{\n  public static void main(String[] args){\n       System.out.println(\"Hello OpenJDK~\");\n  }\n}\n```\n\n使用刚生成的JDK编译\n```\n# ./build/linux-amd64/bin/javac Test.java\n```\n在当前目录下会生成Test.class文件，然后运行便会看到输出。\n```\n# ./build/linux-amd64/bin/java Test\nHello OpenJDK~\n```\n\n## 另一个测试类\n进入目录`jdk/src/share/classes/java/io`，然后修改`PrintStream.java`\n\n```java\n/**\n   * Prints a string.  If the argument is <code>null</code> then the string\n   * <code>\"null\"</code> is printed.  Otherwise, the string's characters are\n   * converted into bytes according to the platform's default character\n   * encoding, and these bytes are written in exactly the manner of the\n   * <code>{@link #write(int)}</code> method.\n   *\n   * @param      s   The <code>String</code> to be printed\n   */\n  public void print(String s) {\n      if (s == null) {\n          s = \"null\";\n      }\n      s = s + \" This is OpenJdk7 compiled by Bob.Z!!!\";  // 重新赋值\n      write(s);\n  }\n```\n\n接下来重新编译JDK，重新编译刚才的Test.java文件并运行会看到如下输出：\n\n\n![compile-openjdk7](/images/post/2014/11/08/compile-openjdk7-on-mac.png)\n\nEnjoy them~\n\n\n# Reference\n- OpenJDK: https://jdk7.java.net/\n- freetype: http://download.savannah.gnu.org/releases/freetype/\n- Ant: http://archive.apache.org/dist/ant/binaries/","slug":"2014/11/08/compile-jdk7-source-code-on-centos","published":1,"updated":"2018-03-27T19:04:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfb89nbw00045ls61kpoe082","content":"<h1 id=\"软件环境\"><a href=\"#软件环境\" class=\"headerlink\" title=\"软件环境\"></a>软件环境</h1><ul>\n<li>OS：CentOS 6.5</li>\n<li>JDK: OpenJDK-7u40</li>\n</ul>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><h2 id=\"下载源码包\"><a href=\"#下载源码包\" class=\"headerlink\" title=\"下载源码包\"></a>下载源码包</h2><p><a href=\"https://jdk7.java.net/source.html\" target=\"_blank\" rel=\"noopener\">OpenJDK Source Releases</a></p>\n<h2 id=\"解压源码包\"><a href=\"#解压源码包\" class=\"headerlink\" title=\"解压源码包\"></a>解压源码包</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># unzip openjdk-7u40-fcs-src-b43-26_aug_2013.zip</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>hotspot 虚拟机实现，大部分是C/C++代码</li>\n<li>jdk Java核心类库目录，位于 jdk/src/share/classes</li>\n<li>langtools 一些编译工具</li>\n</ul>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc gcc-c++ alsa-lib alsa-lib-devel libXrender libXrender-devel libXi-devel libXt-devel libXtst-devel cups cups-devel</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"安装freetype\"><a href=\"#安装freetype\" class=\"headerlink\" title=\"安装freetype\"></a>安装freetype</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ./configure &amp;&amp; make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Ant\"><a href=\"#安装Ant\" class=\"headerlink\" title=\"安装Ant\"></a>安装Ant</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /usr/<span class=\"built_in\">local</span>/apache-ant-1.9.4/bin/ant /usr/bin/ant</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装JDK（如果已有则不必重新安装）\"><a href=\"#安装JDK（如果已有则不必重新安装）\" class=\"headerlink\" title=\"安装JDK（如果已有则不必重新安装）\"></a>安装JDK（如果已有则不必重新安装）</h2><p><code>Sun JDK或Open JDK均可，过程略.</code></p>\n<h1 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h1><p>编辑文件<code>vim ~/.bash_profile</code>加入以下变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export LANG=&quot;C&quot;</span><br><span class=\"line\">export ALT_BOOTDIR=&quot;/usr/java/jdk1.7.0_67/&quot;</span><br><span class=\"line\">export ANT_HOME=&quot;/usr/local/apache-ant-1.9.4&quot;</span><br><span class=\"line\">export ALT_FREETYPE_HEADERS_PATH=&quot;/usr/local/include/freetype2&quot;</span><br><span class=\"line\">export ALT_FREETYPE_LIB_PATH=&quot;/usr/local/lib&quot;</span><br><span class=\"line\">export ALLOW_DOWNLOADS=true</span><br><span class=\"line\">export SKIP_DEBUG_BUILD=false</span><br><span class=\"line\">export SKIP_FASTDEBUG_BUILD=true</span><br><span class=\"line\">export DEBUG_NAME=debug</span><br><span class=\"line\">unset JAVA_HOME</span><br><span class=\"line\">unset CLASSPATH</span><br></pre></td></tr></table></figure>\n<p>使变量生效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># source ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"编译源码\"><a href=\"#编译源码\" class=\"headerlink\" title=\"编译源码\"></a>编译源码</h1><h2 id=\"测试环境是否健全\"><a href=\"#测试环境是否健全\" class=\"headerlink\" title=\"测试环境是否健全\"></a>测试环境是否健全</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># make sanity</span><br></pre></td></tr></table></figure>\n<h2 id=\"如果输出以下内容则表示通过，可以进行编译。\"><a href=\"#如果输出以下内容则表示通过，可以进行编译。\" class=\"headerlink\" title=\"如果输出以下内容则表示通过，可以进行编译。\"></a>如果输出以下内容则表示通过，可以进行编译。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Sanity check passed.</span><br></pre></td></tr></table></figure>\n<h2 id=\"开始编译\"><a href=\"#开始编译\" class=\"headerlink\" title=\"开始编译\"></a>开始编译</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># make ARCH_DATA_MODEL=64</span><br></pre></td></tr></table></figure>\n<h2 id=\"看到如下输出则为编译成功\"><a href=\"#看到如下输出则为编译成功\" class=\"headerlink\" title=\"看到如下输出则为编译成功\"></a>看到如下输出则为编译成功</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;Finished making images @ Sat Nov  8 00:45:16 EST 2014 ...</span><br><span class=\"line\">make[2]: Leaving directory `/usr/local/openjdk/jdk/make&apos;</span><br><span class=\"line\">########################################################################</span><br><span class=\"line\">##### Leaving jdk for target(s) sanity all docs images             #####</span><br><span class=\"line\">########################################################################</span><br><span class=\"line\">##### Build time 00:10:15 jdk for target(s) sanity all docs images #####</span><br><span class=\"line\">########################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">#-- Build times ----------</span><br><span class=\"line\">Target debug_build</span><br><span class=\"line\">Start 2014-11-08 00:26:41</span><br><span class=\"line\">End   2014-11-08 00:45:16</span><br><span class=\"line\">00:02:11 corba</span><br><span class=\"line\">00:04:36 hotspot</span><br><span class=\"line\">00:00:24 jaxp</span><br><span class=\"line\">00:00:30 jaxws</span><br><span class=\"line\">00:10:15 jdk</span><br><span class=\"line\">00:00:39 langtools</span><br><span class=\"line\">00:18:35 TOTAL</span><br><span class=\"line\">-------------------------</span><br><span class=\"line\">make[1]: Leaving directory `/usr/local/openjdk&apos;</span><br><span class=\"line\">[root@BobServerStation openjdk]#</span><br></pre></td></tr></table></figure>\n<h1 id=\"测试验证\"><a href=\"#测试验证\" class=\"headerlink\" title=\"测试验证\"></a>测试验证</h1><h2 id=\"一个测试类\"><a href=\"#一个测试类\" class=\"headerlink\" title=\"一个测试类\"></a>一个测试类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* Author: HunterZhao</span></span><br><span class=\"line\"><span class=\"comment\">* Date: 2014-11-08</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">       System.out.println(<span class=\"string\">\"Hello OpenJDK~\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用刚生成的JDK编译<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ./build/linux-amd64/bin/javac Test.java</span><br></pre></td></tr></table></figure></p>\n<p>在当前目录下会生成Test.class文件，然后运行便会看到输出。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ./build/linux-amd64/bin/java Test</span><br><span class=\"line\">Hello OpenJDK~</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"另一个测试类\"><a href=\"#另一个测试类\" class=\"headerlink\" title=\"另一个测试类\"></a>另一个测试类</h2><p>进入目录<code>jdk/src/share/classes/java/io</code>，然后修改<code>PrintStream.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Prints a string.  If the argument is &lt;code&gt;null&lt;/code&gt; then the string</span></span><br><span class=\"line\"><span class=\"comment\">   * &lt;code&gt;\"null\"&lt;/code&gt; is printed.  Otherwise, the string's characters are</span></span><br><span class=\"line\"><span class=\"comment\">   * converted into bytes according to the platform's default character</span></span><br><span class=\"line\"><span class=\"comment\">   * encoding, and these bytes are written in exactly the manner of the</span></span><br><span class=\"line\"><span class=\"comment\">   * &lt;code&gt;&#123;<span class=\"doctag\">@link</span> #write(int)&#125;&lt;/code&gt; method.</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>      s   The &lt;code&gt;String&lt;/code&gt; to be printed</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (s == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">          s = <span class=\"string\">\"null\"</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      s = s + <span class=\"string\">\" This is OpenJdk7 compiled by Bob.Z!!!\"</span>;  <span class=\"comment\">// 重新赋值</span></span><br><span class=\"line\">      write(s);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>接下来重新编译JDK，重新编译刚才的Test.java文件并运行会看到如下输出：</p>\n<p><img src=\"/images/post/2014/11/08/compile-openjdk7-on-mac.png\" alt=\"compile-openjdk7\"></p>\n<p>Enjoy them~</p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><ul>\n<li>OpenJDK: <a href=\"https://jdk7.java.net/\" target=\"_blank\" rel=\"noopener\">https://jdk7.java.net/</a></li>\n<li>freetype: <a href=\"http://download.savannah.gnu.org/releases/freetype/\" target=\"_blank\" rel=\"noopener\">http://download.savannah.gnu.org/releases/freetype/</a></li>\n<li>Ant: <a href=\"http://archive.apache.org/dist/ant/binaries/\" target=\"_blank\" rel=\"noopener\">http://archive.apache.org/dist/ant/binaries/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"软件环境\"><a href=\"#软件环境\" class=\"headerlink\" title=\"软件环境\"></a>软件环境</h1><ul>\n<li>OS：CentOS 6.5</li>\n<li>JDK: OpenJDK-7u40</li>\n</ul>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><h2 id=\"下载源码包\"><a href=\"#下载源码包\" class=\"headerlink\" title=\"下载源码包\"></a>下载源码包</h2><p><a href=\"https://jdk7.java.net/source.html\" target=\"_blank\" rel=\"noopener\">OpenJDK Source Releases</a></p>\n<h2 id=\"解压源码包\"><a href=\"#解压源码包\" class=\"headerlink\" title=\"解压源码包\"></a>解压源码包</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># unzip openjdk-7u40-fcs-src-b43-26_aug_2013.zip</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>hotspot 虚拟机实现，大部分是C/C++代码</li>\n<li>jdk Java核心类库目录，位于 jdk/src/share/classes</li>\n<li>langtools 一些编译工具</li>\n</ul>\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc gcc-c++ alsa-lib alsa-lib-devel libXrender libXrender-devel libXi-devel libXt-devel libXtst-devel cups cups-devel</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"安装freetype\"><a href=\"#安装freetype\" class=\"headerlink\" title=\"安装freetype\"></a>安装freetype</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ./configure &amp;&amp; make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"安装Ant\"><a href=\"#安装Ant\" class=\"headerlink\" title=\"安装Ant\"></a>安装Ant</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s /usr/<span class=\"built_in\">local</span>/apache-ant-1.9.4/bin/ant /usr/bin/ant</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装JDK（如果已有则不必重新安装）\"><a href=\"#安装JDK（如果已有则不必重新安装）\" class=\"headerlink\" title=\"安装JDK（如果已有则不必重新安装）\"></a>安装JDK（如果已有则不必重新安装）</h2><p><code>Sun JDK或Open JDK均可，过程略.</code></p>\n<h1 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h1><p>编辑文件<code>vim ~/.bash_profile</code>加入以下变量</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export LANG=&quot;C&quot;</span><br><span class=\"line\">export ALT_BOOTDIR=&quot;/usr/java/jdk1.7.0_67/&quot;</span><br><span class=\"line\">export ANT_HOME=&quot;/usr/local/apache-ant-1.9.4&quot;</span><br><span class=\"line\">export ALT_FREETYPE_HEADERS_PATH=&quot;/usr/local/include/freetype2&quot;</span><br><span class=\"line\">export ALT_FREETYPE_LIB_PATH=&quot;/usr/local/lib&quot;</span><br><span class=\"line\">export ALLOW_DOWNLOADS=true</span><br><span class=\"line\">export SKIP_DEBUG_BUILD=false</span><br><span class=\"line\">export SKIP_FASTDEBUG_BUILD=true</span><br><span class=\"line\">export DEBUG_NAME=debug</span><br><span class=\"line\">unset JAVA_HOME</span><br><span class=\"line\">unset CLASSPATH</span><br></pre></td></tr></table></figure>\n<p>使变量生效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># source ~/.bash_profile</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"编译源码\"><a href=\"#编译源码\" class=\"headerlink\" title=\"编译源码\"></a>编译源码</h1><h2 id=\"测试环境是否健全\"><a href=\"#测试环境是否健全\" class=\"headerlink\" title=\"测试环境是否健全\"></a>测试环境是否健全</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># make sanity</span><br></pre></td></tr></table></figure>\n<h2 id=\"如果输出以下内容则表示通过，可以进行编译。\"><a href=\"#如果输出以下内容则表示通过，可以进行编译。\" class=\"headerlink\" title=\"如果输出以下内容则表示通过，可以进行编译。\"></a>如果输出以下内容则表示通过，可以进行编译。</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Sanity check passed.</span><br></pre></td></tr></table></figure>\n<h2 id=\"开始编译\"><a href=\"#开始编译\" class=\"headerlink\" title=\"开始编译\"></a>开始编译</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># make ARCH_DATA_MODEL=64</span><br></pre></td></tr></table></figure>\n<h2 id=\"看到如下输出则为编译成功\"><a href=\"#看到如下输出则为编译成功\" class=\"headerlink\" title=\"看到如下输出则为编译成功\"></a>看到如下输出则为编译成功</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt;Finished making images @ Sat Nov  8 00:45:16 EST 2014 ...</span><br><span class=\"line\">make[2]: Leaving directory `/usr/local/openjdk/jdk/make&apos;</span><br><span class=\"line\">########################################################################</span><br><span class=\"line\">##### Leaving jdk for target(s) sanity all docs images             #####</span><br><span class=\"line\">########################################################################</span><br><span class=\"line\">##### Build time 00:10:15 jdk for target(s) sanity all docs images #####</span><br><span class=\"line\">########################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">#-- Build times ----------</span><br><span class=\"line\">Target debug_build</span><br><span class=\"line\">Start 2014-11-08 00:26:41</span><br><span class=\"line\">End   2014-11-08 00:45:16</span><br><span class=\"line\">00:02:11 corba</span><br><span class=\"line\">00:04:36 hotspot</span><br><span class=\"line\">00:00:24 jaxp</span><br><span class=\"line\">00:00:30 jaxws</span><br><span class=\"line\">00:10:15 jdk</span><br><span class=\"line\">00:00:39 langtools</span><br><span class=\"line\">00:18:35 TOTAL</span><br><span class=\"line\">-------------------------</span><br><span class=\"line\">make[1]: Leaving directory `/usr/local/openjdk&apos;</span><br><span class=\"line\">[root@BobServerStation openjdk]#</span><br></pre></td></tr></table></figure>\n<h1 id=\"测试验证\"><a href=\"#测试验证\" class=\"headerlink\" title=\"测试验证\"></a>测试验证</h1><h2 id=\"一个测试类\"><a href=\"#一个测试类\" class=\"headerlink\" title=\"一个测试类\"></a>一个测试类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* Author: HunterZhao</span></span><br><span class=\"line\"><span class=\"comment\">* Date: 2014-11-08</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">       System.out.println(<span class=\"string\">\"Hello OpenJDK~\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用刚生成的JDK编译<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ./build/linux-amd64/bin/javac Test.java</span><br></pre></td></tr></table></figure></p>\n<p>在当前目录下会生成Test.class文件，然后运行便会看到输出。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ./build/linux-amd64/bin/java Test</span><br><span class=\"line\">Hello OpenJDK~</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"另一个测试类\"><a href=\"#另一个测试类\" class=\"headerlink\" title=\"另一个测试类\"></a>另一个测试类</h2><p>进入目录<code>jdk/src/share/classes/java/io</code>，然后修改<code>PrintStream.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Prints a string.  If the argument is &lt;code&gt;null&lt;/code&gt; then the string</span></span><br><span class=\"line\"><span class=\"comment\">   * &lt;code&gt;\"null\"&lt;/code&gt; is printed.  Otherwise, the string's characters are</span></span><br><span class=\"line\"><span class=\"comment\">   * converted into bytes according to the platform's default character</span></span><br><span class=\"line\"><span class=\"comment\">   * encoding, and these bytes are written in exactly the manner of the</span></span><br><span class=\"line\"><span class=\"comment\">   * &lt;code&gt;&#123;<span class=\"doctag\">@link</span> #write(int)&#125;&lt;/code&gt; method.</span></span><br><span class=\"line\"><span class=\"comment\">   *</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span>      s   The &lt;code&gt;String&lt;/code&gt; to be printed</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (s == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">          s = <span class=\"string\">\"null\"</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      s = s + <span class=\"string\">\" This is OpenJdk7 compiled by Bob.Z!!!\"</span>;  <span class=\"comment\">// 重新赋值</span></span><br><span class=\"line\">      write(s);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>接下来重新编译JDK，重新编译刚才的Test.java文件并运行会看到如下输出：</p>\n<p><img src=\"/images/post/2014/11/08/compile-openjdk7-on-mac.png\" alt=\"compile-openjdk7\"></p>\n<p>Enjoy them~</p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><ul>\n<li>OpenJDK: <a href=\"https://jdk7.java.net/\" target=\"_blank\" rel=\"noopener\">https://jdk7.java.net/</a></li>\n<li>freetype: <a href=\"http://download.savannah.gnu.org/releases/freetype/\" target=\"_blank\" rel=\"noopener\">http://download.savannah.gnu.org/releases/freetype/</a></li>\n<li>Ant: <a href=\"http://archive.apache.org/dist/ant/binaries/\" target=\"_blank\" rel=\"noopener\">http://archive.apache.org/dist/ant/binaries/</a></li>\n</ul>"},{"title":"CentOS通过yum安装配置MySQL","date":"2014-01-20T04:06:34.000Z","_content":"\n# 安装MySQL\n```bash\n[root@HunterWorkStation local]# yum -y install mysql mysql-server\n```\n\n\n# 启动MySQL服务\n```bash\n[root@HunterWorkStation local]# service mysqld start\n\nInitializing MySQL database:  Installing MySQL system tables...    OK\nFilling help tables...   OK\n\nTo start mysqld at boot time you have to copy\nsupport-files/mysql.server to the right place for your system\n\nPLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !\nTo do so, start the server, then issue the following commands:\n\n/usr/bin/mysqladmin -u root password 'new-password'\n/usr/bin/mysqladmin -u root -h localhost.localdomain password 'new-password'\n\nAlternatively you can run:\n/usr/bin/mysql_secure_installation\n\nwhich will also give you the option of removing the test\ndatabases and anonymous user created by default.  This is\nstrongly recommended for production servers.\n\nSee the manual for more instructions.\nYou can start the MySQL daemon with:\n\ncd /usr ; /usr/bin/mysqld_safe &\nYou can test the MySQL daemon with mysql-test-run.pl\ncd /usr/mysql-test ; perl mysql-test-run.pl\n\nPlease report any problems with the /usr/bin/mysqlbug script!\n\n\nStarting mysqld:                                           [  OK  ]\n```\n<!-- more -->\n# 设置root用户密码\n```bash\n[root@HunterWorkStation local]# mysqladmin -u root password 'YOUR PASSWORD HERE'\n```\n\n# 登陆数据库并授权\n此时用户是无法远程登陆该数据库的，接下来为用户授权\n```bash\n[root@HunterWorkStation local]# mysql -u root -p\n\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 4\nServer version: 5.1.71 Source distribution\n\nCopyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> grant all on *.* to root@'%' identified by '123456';  # 为所有主机授权使用root用户操作所有库和表，密码123456\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n\n# 设置MySQL服务开机自启动\n```bash\n[root@HunterWorkStation local]# chkconfig mysqld on\n```\n\n设置后查看是否设置成功\n```bash\n[root@HunterWorkStation local]# chkconfig --list | grep mysqld\n\nmysqld    0:off\t 1:off  2:on  3:on  4:on  5:on  6:off   # 2-5为on则表示自启动\n```\n\n# 设置服务端编码\n```bash\n[root@HunterWorkStation local]# vim /etc/my.cnf\n\n[mysqld]\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\nuser=mysql\ndefault-character-set=utf8\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n```\n\n# 重启MySQL服务\n```bash\n[root@HunterWorkStation local]# service mysqld restart\nStopping mysqld:                                           [  OK  ]\nStarting mysqld:                                           [  OK  ]\n```\n\n\n至此，安装配置完毕，接来下可以用客户端连接操作MySQL。","source":"_posts/2014/01/20/install-and-configure-mysql-on-centos.md","raw":"---\ntitle: CentOS通过yum安装配置MySQL\ndate: 2014-01-20 12:06:34\ncategories: MySQL\ntags:\n    - MySQL\n    - CentOS\n---\n\n# 安装MySQL\n```bash\n[root@HunterWorkStation local]# yum -y install mysql mysql-server\n```\n\n\n# 启动MySQL服务\n```bash\n[root@HunterWorkStation local]# service mysqld start\n\nInitializing MySQL database:  Installing MySQL system tables...    OK\nFilling help tables...   OK\n\nTo start mysqld at boot time you have to copy\nsupport-files/mysql.server to the right place for your system\n\nPLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !\nTo do so, start the server, then issue the following commands:\n\n/usr/bin/mysqladmin -u root password 'new-password'\n/usr/bin/mysqladmin -u root -h localhost.localdomain password 'new-password'\n\nAlternatively you can run:\n/usr/bin/mysql_secure_installation\n\nwhich will also give you the option of removing the test\ndatabases and anonymous user created by default.  This is\nstrongly recommended for production servers.\n\nSee the manual for more instructions.\nYou can start the MySQL daemon with:\n\ncd /usr ; /usr/bin/mysqld_safe &\nYou can test the MySQL daemon with mysql-test-run.pl\ncd /usr/mysql-test ; perl mysql-test-run.pl\n\nPlease report any problems with the /usr/bin/mysqlbug script!\n\n\nStarting mysqld:                                           [  OK  ]\n```\n<!-- more -->\n# 设置root用户密码\n```bash\n[root@HunterWorkStation local]# mysqladmin -u root password 'YOUR PASSWORD HERE'\n```\n\n# 登陆数据库并授权\n此时用户是无法远程登陆该数据库的，接下来为用户授权\n```bash\n[root@HunterWorkStation local]# mysql -u root -p\n\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 4\nServer version: 5.1.71 Source distribution\n\nCopyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql> grant all on *.* to root@'%' identified by '123456';  # 为所有主机授权使用root用户操作所有库和表，密码123456\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n\n# 设置MySQL服务开机自启动\n```bash\n[root@HunterWorkStation local]# chkconfig mysqld on\n```\n\n设置后查看是否设置成功\n```bash\n[root@HunterWorkStation local]# chkconfig --list | grep mysqld\n\nmysqld    0:off\t 1:off  2:on  3:on  4:on  5:on  6:off   # 2-5为on则表示自启动\n```\n\n# 设置服务端编码\n```bash\n[root@HunterWorkStation local]# vim /etc/my.cnf\n\n[mysqld]\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\nuser=mysql\ndefault-character-set=utf8\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n```\n\n# 重启MySQL服务\n```bash\n[root@HunterWorkStation local]# service mysqld restart\nStopping mysqld:                                           [  OK  ]\nStarting mysqld:                                           [  OK  ]\n```\n\n\n至此，安装配置完毕，接来下可以用客户端连接操作MySQL。","slug":"2014/01/20/install-and-configure-mysql-on-centos","published":1,"updated":"2018-03-27T19:04:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfb89nc000065ls65nrntooj","content":"<h1 id=\"安装MySQL\"><a href=\"#安装MySQL\" class=\"headerlink\" title=\"安装MySQL\"></a>安装MySQL</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># yum -y install mysql mysql-server</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"启动MySQL服务\"><a href=\"#启动MySQL服务\" class=\"headerlink\" title=\"启动MySQL服务\"></a>启动MySQL服务</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># service mysqld start</span></span><br><span class=\"line\"></span><br><span class=\"line\">Initializing MySQL database:  Installing MySQL system tables...    OK</span><br><span class=\"line\">Filling <span class=\"built_in\">help</span> tables...   OK</span><br><span class=\"line\"></span><br><span class=\"line\">To start mysqld at boot time you have to copy</span><br><span class=\"line\">support-files/mysql.server to the right place <span class=\"keyword\">for</span> your system</span><br><span class=\"line\"></span><br><span class=\"line\">PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !</span><br><span class=\"line\">To <span class=\"keyword\">do</span> so, start the server, <span class=\"keyword\">then</span> issue the following commands:</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/bin/mysqladmin -u root password <span class=\"string\">'new-password'</span></span><br><span class=\"line\">/usr/bin/mysqladmin -u root -h localhost.localdomain password <span class=\"string\">'new-password'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Alternatively you can run:</span><br><span class=\"line\">/usr/bin/mysql_secure_installation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">which</span> will also give you the option of removing the <span class=\"built_in\">test</span></span><br><span class=\"line\">databases and anonymous user created by default.  This is</span><br><span class=\"line\">strongly recommended <span class=\"keyword\">for</span> production servers.</span><br><span class=\"line\"></span><br><span class=\"line\">See the manual <span class=\"keyword\">for</span> more instructions.</span><br><span class=\"line\">You can start the MySQL daemon with:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr ; /usr/bin/mysqld_safe &amp;</span><br><span class=\"line\">You can <span class=\"built_in\">test</span> the MySQL daemon with mysql-test-run.pl</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/mysql-test ; perl mysql-test-run.pl</span><br><span class=\"line\"></span><br><span class=\"line\">Please report any problems with the /usr/bin/mysqlbug script!</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Starting mysqld:                                           [  OK  ]</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"设置root用户密码\"><a href=\"#设置root用户密码\" class=\"headerlink\" title=\"设置root用户密码\"></a>设置root用户密码</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># mysqladmin -u root password 'YOUR PASSWORD HERE'</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"登陆数据库并授权\"><a href=\"#登陆数据库并授权\" class=\"headerlink\" title=\"登陆数据库并授权\"></a>登陆数据库并授权</h1><p>此时用户是无法远程登陆该数据库的，接下来为用户授权<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># mysql -u root -p</span></span><br><span class=\"line\"></span><br><span class=\"line\">Enter password: </span><br><span class=\"line\">Welcome to the MySQL monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection id is 4</span><br><span class=\"line\">Server version: 5.1.71 Source distribution</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class=\"line\">affiliates. Other names may be trademarks of their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\">Type <span class=\"string\">'help;'</span> or <span class=\"string\">'\\h'</span> <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>. Type <span class=\"string\">'\\c'</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; grant all on *.* to root@<span class=\"string\">'%'</span> identified by <span class=\"string\">'123456'</span>;  <span class=\"comment\"># 为所有主机授权使用root用户操作所有库和表，密码123456</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"设置MySQL服务开机自启动\"><a href=\"#设置MySQL服务开机自启动\" class=\"headerlink\" title=\"设置MySQL服务开机自启动\"></a>设置MySQL服务开机自启动</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># chkconfig mysqld on</span></span><br></pre></td></tr></table></figure>\n<p>设置后查看是否设置成功<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># chkconfig --list | grep mysqld</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysqld    0:off\t 1:off  2:on  3:on  4:on  5:on  6:off   <span class=\"comment\"># 2-5为on则表示自启动</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"设置服务端编码\"><a href=\"#设置服务端编码\" class=\"headerlink\" title=\"设置服务端编码\"></a>设置服务端编码</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># vim /etc/my.cnf</span></span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">datadir=/var/lib/mysql</span><br><span class=\"line\">socket=/var/lib/mysql/mysql.sock</span><br><span class=\"line\">user=mysql</span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\"><span class=\"comment\"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class=\"line\">symbolic-links=0</span><br></pre></td></tr></table></figure>\n<h1 id=\"重启MySQL服务\"><a href=\"#重启MySQL服务\" class=\"headerlink\" title=\"重启MySQL服务\"></a>重启MySQL服务</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># service mysqld restart</span></span><br><span class=\"line\">Stopping mysqld:                                           [  OK  ]</span><br><span class=\"line\">Starting mysqld:                                           [  OK  ]</span><br></pre></td></tr></table></figure>\n<p>至此，安装配置完毕，接来下可以用客户端连接操作MySQL。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"安装MySQL\"><a href=\"#安装MySQL\" class=\"headerlink\" title=\"安装MySQL\"></a>安装MySQL</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># yum -y install mysql mysql-server</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"启动MySQL服务\"><a href=\"#启动MySQL服务\" class=\"headerlink\" title=\"启动MySQL服务\"></a>启动MySQL服务</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># service mysqld start</span></span><br><span class=\"line\"></span><br><span class=\"line\">Initializing MySQL database:  Installing MySQL system tables...    OK</span><br><span class=\"line\">Filling <span class=\"built_in\">help</span> tables...   OK</span><br><span class=\"line\"></span><br><span class=\"line\">To start mysqld at boot time you have to copy</span><br><span class=\"line\">support-files/mysql.server to the right place <span class=\"keyword\">for</span> your system</span><br><span class=\"line\"></span><br><span class=\"line\">PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !</span><br><span class=\"line\">To <span class=\"keyword\">do</span> so, start the server, <span class=\"keyword\">then</span> issue the following commands:</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/bin/mysqladmin -u root password <span class=\"string\">'new-password'</span></span><br><span class=\"line\">/usr/bin/mysqladmin -u root -h localhost.localdomain password <span class=\"string\">'new-password'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Alternatively you can run:</span><br><span class=\"line\">/usr/bin/mysql_secure_installation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">which</span> will also give you the option of removing the <span class=\"built_in\">test</span></span><br><span class=\"line\">databases and anonymous user created by default.  This is</span><br><span class=\"line\">strongly recommended <span class=\"keyword\">for</span> production servers.</span><br><span class=\"line\"></span><br><span class=\"line\">See the manual <span class=\"keyword\">for</span> more instructions.</span><br><span class=\"line\">You can start the MySQL daemon with:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr ; /usr/bin/mysqld_safe &amp;</span><br><span class=\"line\">You can <span class=\"built_in\">test</span> the MySQL daemon with mysql-test-run.pl</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/mysql-test ; perl mysql-test-run.pl</span><br><span class=\"line\"></span><br><span class=\"line\">Please report any problems with the /usr/bin/mysqlbug script!</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Starting mysqld:                                           [  OK  ]</span><br></pre></td></tr></table></figure>","more":"<h1 id=\"设置root用户密码\"><a href=\"#设置root用户密码\" class=\"headerlink\" title=\"设置root用户密码\"></a>设置root用户密码</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># mysqladmin -u root password 'YOUR PASSWORD HERE'</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"登陆数据库并授权\"><a href=\"#登陆数据库并授权\" class=\"headerlink\" title=\"登陆数据库并授权\"></a>登陆数据库并授权</h1><p>此时用户是无法远程登陆该数据库的，接下来为用户授权<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># mysql -u root -p</span></span><br><span class=\"line\"></span><br><span class=\"line\">Enter password: </span><br><span class=\"line\">Welcome to the MySQL monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection id is 4</span><br><span class=\"line\">Server version: 5.1.71 Source distribution</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.</span><br><span class=\"line\"></span><br><span class=\"line\">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class=\"line\">affiliates. Other names may be trademarks of their respective</span><br><span class=\"line\">owners.</span><br><span class=\"line\"></span><br><span class=\"line\">Type <span class=\"string\">'help;'</span> or <span class=\"string\">'\\h'</span> <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>. Type <span class=\"string\">'\\c'</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; grant all on *.* to root@<span class=\"string\">'%'</span> identified by <span class=\"string\">'123456'</span>;  <span class=\"comment\"># 为所有主机授权使用root用户操作所有库和表，密码123456</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"设置MySQL服务开机自启动\"><a href=\"#设置MySQL服务开机自启动\" class=\"headerlink\" title=\"设置MySQL服务开机自启动\"></a>设置MySQL服务开机自启动</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># chkconfig mysqld on</span></span><br></pre></td></tr></table></figure>\n<p>设置后查看是否设置成功<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># chkconfig --list | grep mysqld</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysqld    0:off\t 1:off  2:on  3:on  4:on  5:on  6:off   <span class=\"comment\"># 2-5为on则表示自启动</span></span><br></pre></td></tr></table></figure></p>\n<h1 id=\"设置服务端编码\"><a href=\"#设置服务端编码\" class=\"headerlink\" title=\"设置服务端编码\"></a>设置服务端编码</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># vim /etc/my.cnf</span></span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">datadir=/var/lib/mysql</span><br><span class=\"line\">socket=/var/lib/mysql/mysql.sock</span><br><span class=\"line\">user=mysql</span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\"><span class=\"comment\"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class=\"line\">symbolic-links=0</span><br></pre></td></tr></table></figure>\n<h1 id=\"重启MySQL服务\"><a href=\"#重启MySQL服务\" class=\"headerlink\" title=\"重启MySQL服务\"></a>重启MySQL服务</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@HunterWorkStation <span class=\"built_in\">local</span>]<span class=\"comment\"># service mysqld restart</span></span><br><span class=\"line\">Stopping mysqld:                                           [  OK  ]</span><br><span class=\"line\">Starting mysqld:                                           [  OK  ]</span><br></pre></td></tr></table></figure>\n<p>至此，安装配置完毕，接来下可以用客户端连接操作MySQL。</p>"},{"title":"Mac下vim开启语法高亮&着色","date":"2014-01-20T04:06:34.000Z","_content":"\n\nMac OS并不像大多数Linux发行版vim默认自带语法着色高亮显示（通常Linux可通过编辑/etc/vimrc进行全局设置或~/vimrc进行单用户设置），使用vi/vim编辑文件时很不方便，如何解决 ?\n\n\n# 编辑文件/usr/share/vim/vimrc\n```bash\nBobZhao@mac:~ > sudo vim /usr/share/vim/vimrc\nPassword:\n\" Configuration file for vim\nset modelines=0         \" CVE-2007-2438\n\n\" Normally we use vim-extensions. If you want true vi-compatibility\n\" remove change the following statements\nset nocompatible        \" Use Vim defaults instead of 100% vi compatibility\nset backspace=2         \" more powerful backspacing\n\n\" Don't write backup file if vim is being called by \"crontab -e\"\nau BufWrite /private/tmp/crontab.* set nowritebackup\n\" Don't write backup file if vim is being called by \"chpass\"\nau BufWrite /private/etc/pw.* set nowritebackup\n```\n\n<!-- more -->\n\n# 在set backspace=2下插入配置\n```bash\nset ai                  \" auto indenting\nset history=100         \" keep 100 lines of history\nset ruler               \" show the cursor position\nsyntax on               \" syntax highlighting\nset hlsearch            \" highlight the last searched term\nfiletype plugin on      \" use the file type plugins\n\n\" When editing a file, always jump to the last cursor position\nautocmd BufReadPost *\n\\ if ! exists(\"g:leave_my_cursor_position_alone\") |\n\\ if line(\"'\\\"\") > 0 && line (\"'\\\"\") <= line(\"$\") |\n\\ exe \"normal g'\\\"\" |\n\\ endif |\n\\ endif\n```\n\n# 验证\n再次打开该文件发现已经生效\n![configure-vim](/images/post/2014/10/01/configure-vim-highlight-on-mac.png)\n\n\n","source":"_posts/2014/10/01/configure-vim-syntax-highlight-on-mac.md","raw":"---\ntitle: Mac下vim开启语法高亮&着色\ndate: 2014-01-20 12:06:34\ncategories: Mac\ntags:\n    - Linux\n    - vim\n    - Mac\n---\n\n\nMac OS并不像大多数Linux发行版vim默认自带语法着色高亮显示（通常Linux可通过编辑/etc/vimrc进行全局设置或~/vimrc进行单用户设置），使用vi/vim编辑文件时很不方便，如何解决 ?\n\n\n# 编辑文件/usr/share/vim/vimrc\n```bash\nBobZhao@mac:~ > sudo vim /usr/share/vim/vimrc\nPassword:\n\" Configuration file for vim\nset modelines=0         \" CVE-2007-2438\n\n\" Normally we use vim-extensions. If you want true vi-compatibility\n\" remove change the following statements\nset nocompatible        \" Use Vim defaults instead of 100% vi compatibility\nset backspace=2         \" more powerful backspacing\n\n\" Don't write backup file if vim is being called by \"crontab -e\"\nau BufWrite /private/tmp/crontab.* set nowritebackup\n\" Don't write backup file if vim is being called by \"chpass\"\nau BufWrite /private/etc/pw.* set nowritebackup\n```\n\n<!-- more -->\n\n# 在set backspace=2下插入配置\n```bash\nset ai                  \" auto indenting\nset history=100         \" keep 100 lines of history\nset ruler               \" show the cursor position\nsyntax on               \" syntax highlighting\nset hlsearch            \" highlight the last searched term\nfiletype plugin on      \" use the file type plugins\n\n\" When editing a file, always jump to the last cursor position\nautocmd BufReadPost *\n\\ if ! exists(\"g:leave_my_cursor_position_alone\") |\n\\ if line(\"'\\\"\") > 0 && line (\"'\\\"\") <= line(\"$\") |\n\\ exe \"normal g'\\\"\" |\n\\ endif |\n\\ endif\n```\n\n# 验证\n再次打开该文件发现已经生效\n![configure-vim](/images/post/2014/10/01/configure-vim-highlight-on-mac.png)\n\n\n","slug":"2014/10/01/configure-vim-syntax-highlight-on-mac","published":1,"updated":"2018-03-27T19:04:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfb89nc200085ls60cyqjzdc","content":"<p>Mac OS并不像大多数Linux发行版vim默认自带语法着色高亮显示（通常Linux可通过编辑/etc/vimrc进行全局设置或~/vimrc进行单用户设置），使用vi/vim编辑文件时很不方便，如何解决 ?</p>\n<h1 id=\"编辑文件-usr-share-vim-vimrc\"><a href=\"#编辑文件-usr-share-vim-vimrc\" class=\"headerlink\" title=\"编辑文件/usr/share/vim/vimrc\"></a>编辑文件/usr/share/vim/vimrc</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BobZhao@mac:~ &gt; sudo vim /usr/share/vim/vimrc</span><br><span class=\"line\">Password:</span><br><span class=\"line\"><span class=\"string\">\" Configuration file for vim</span></span><br><span class=\"line\"><span class=\"string\">set modelines=0         \"</span> CVE-2007-2438</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\" Normally we use vim-extensions. If you want true vi-compatibility</span></span><br><span class=\"line\"><span class=\"string\">\"</span> remove change the following statements</span><br><span class=\"line\"><span class=\"built_in\">set</span> nocompatible        <span class=\"string\">\" Use Vim defaults instead of 100% vi compatibility</span></span><br><span class=\"line\"><span class=\"string\">set backspace=2         \"</span> more powerful backspacing</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\" Don't write backup file if vim is being called by \"</span>crontab -e<span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">au BufWrite /private/tmp/crontab.* set nowritebackup</span></span><br><span class=\"line\"><span class=\"string\">\"</span> Don<span class=\"string\">'t write backup file if vim is being called by \"chpass\"</span></span><br><span class=\"line\"><span class=\"string\">au BufWrite /private/etc/pw.* set nowritebackup</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"在set-backspace-2下插入配置\"><a href=\"#在set-backspace-2下插入配置\" class=\"headerlink\" title=\"在set backspace=2下插入配置\"></a>在set backspace=2下插入配置</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> ai                  <span class=\"string\">\" auto indenting</span></span><br><span class=\"line\"><span class=\"string\">set history=100         \"</span> keep 100 lines of <span class=\"built_in\">history</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> ruler               <span class=\"string\">\" show the cursor position</span></span><br><span class=\"line\"><span class=\"string\">syntax on               \"</span> syntax highlighting</span><br><span class=\"line\"><span class=\"built_in\">set</span> hlsearch            <span class=\"string\">\" highlight the last searched term</span></span><br><span class=\"line\"><span class=\"string\">filetype plugin on      \"</span> use the file <span class=\"built_in\">type</span> plugins</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\" When editing a file, always jump to the last cursor position</span></span><br><span class=\"line\"><span class=\"string\">autocmd BufReadPost *</span></span><br><span class=\"line\"><span class=\"string\">\\ if ! exists(\"</span>g:leave_my_cursor_position_alone<span class=\"string\">\") |</span></span><br><span class=\"line\"><span class=\"string\">\\ if line(\"</span><span class=\"string\">'\\\"\") &gt; 0 &amp;&amp; line (\"'</span>\\<span class=\"string\">\"\"</span>) &lt;= line(<span class=\"string\">\"$\"</span>) |</span><br><span class=\"line\">\\ exe <span class=\"string\">\"normal g'\\\"\"</span> |</span><br><span class=\"line\">\\ endif |</span><br><span class=\"line\">\\ endif</span><br></pre></td></tr></table></figure>\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><p>再次打开该文件发现已经生效<br><img src=\"/images/post/2014/10/01/configure-vim-highlight-on-mac.png\" alt=\"configure-vim\"></p>\n","site":{"data":{}},"excerpt":"<p>Mac OS并不像大多数Linux发行版vim默认自带语法着色高亮显示（通常Linux可通过编辑/etc/vimrc进行全局设置或~/vimrc进行单用户设置），使用vi/vim编辑文件时很不方便，如何解决 ?</p>\n<h1 id=\"编辑文件-usr-share-vim-vimrc\"><a href=\"#编辑文件-usr-share-vim-vimrc\" class=\"headerlink\" title=\"编辑文件/usr/share/vim/vimrc\"></a>编辑文件/usr/share/vim/vimrc</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BobZhao@mac:~ &gt; sudo vim /usr/share/vim/vimrc</span><br><span class=\"line\">Password:</span><br><span class=\"line\"><span class=\"string\">\" Configuration file for vim</span></span><br><span class=\"line\"><span class=\"string\">set modelines=0         \"</span> CVE-2007-2438</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\" Normally we use vim-extensions. If you want true vi-compatibility</span></span><br><span class=\"line\"><span class=\"string\">\"</span> remove change the following statements</span><br><span class=\"line\"><span class=\"built_in\">set</span> nocompatible        <span class=\"string\">\" Use Vim defaults instead of 100% vi compatibility</span></span><br><span class=\"line\"><span class=\"string\">set backspace=2         \"</span> more powerful backspacing</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\" Don't write backup file if vim is being called by \"</span>crontab -e<span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">au BufWrite /private/tmp/crontab.* set nowritebackup</span></span><br><span class=\"line\"><span class=\"string\">\"</span> Don<span class=\"string\">'t write backup file if vim is being called by \"chpass\"</span></span><br><span class=\"line\"><span class=\"string\">au BufWrite /private/etc/pw.* set nowritebackup</span></span><br></pre></td></tr></table></figure>","more":"<h1 id=\"在set-backspace-2下插入配置\"><a href=\"#在set-backspace-2下插入配置\" class=\"headerlink\" title=\"在set backspace=2下插入配置\"></a>在set backspace=2下插入配置</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> ai                  <span class=\"string\">\" auto indenting</span></span><br><span class=\"line\"><span class=\"string\">set history=100         \"</span> keep 100 lines of <span class=\"built_in\">history</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> ruler               <span class=\"string\">\" show the cursor position</span></span><br><span class=\"line\"><span class=\"string\">syntax on               \"</span> syntax highlighting</span><br><span class=\"line\"><span class=\"built_in\">set</span> hlsearch            <span class=\"string\">\" highlight the last searched term</span></span><br><span class=\"line\"><span class=\"string\">filetype plugin on      \"</span> use the file <span class=\"built_in\">type</span> plugins</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\" When editing a file, always jump to the last cursor position</span></span><br><span class=\"line\"><span class=\"string\">autocmd BufReadPost *</span></span><br><span class=\"line\"><span class=\"string\">\\ if ! exists(\"</span>g:leave_my_cursor_position_alone<span class=\"string\">\") |</span></span><br><span class=\"line\"><span class=\"string\">\\ if line(\"</span><span class=\"string\">'\\\"\") &gt; 0 &amp;&amp; line (\"'</span>\\<span class=\"string\">\"\"</span>) &lt;= line(<span class=\"string\">\"$\"</span>) |</span><br><span class=\"line\">\\ exe <span class=\"string\">\"normal g'\\\"\"</span> |</span><br><span class=\"line\">\\ endif |</span><br><span class=\"line\">\\ endif</span><br></pre></td></tr></table></figure>\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><p>再次打开该文件发现已经生效<br><img src=\"/images/post/2014/10/01/configure-vim-highlight-on-mac.png\" alt=\"configure-vim\"></p>"},{"title":"在Linux下搭建OpenJDK7源码调试环境","date":"2014-11-19T09:17:53.000Z","_content":"\n在前面的文章中博主已经介绍过如何在Linux下编译OpenJDK7源码，现继续介绍如何在Linux下搭建基于eclipse IDE的Hotspot源码调试环境。鉴于网上关于JVM源码调试方面的文章寥寥无几并且内容参差不全，本文将把博主摸索数天的经验及成果以图文形式详细介绍Hotspot的debug过程。\n\n# 软件环境\n- OS：CentOS 6.5\n- OpenJDK: OpenJDK-7u40\n- JDK Version：openjdk-7u40-fcs-src-b43-26_aug_2013\n- IDE：eclipse-cpp-luna-SR1-linux-gtk-x86_64\n\n# 导入源码\n首先解压JDK源码包至`/usr/local`目录，然后启动eclipse，依次选择`File` > `New` > `Makefile Project with Existing Code`(如果没有则在Other里找)\n\n![debug-openjdk7](/images/post/2014/11/19/debug-jvm-on-linux-1.jpg)\n\n# 配置环境变量\n定位到项目名右键 > `Properties >C/C++ Build`需要修改两个地方：\n- 将Builder里`Use default build command`的对勾去掉，填入参数`ARCH_DATA_MODEL=64`\n- 将`Build location`的`Build directory`追加上`/make`，最终是`${workspace_lc:/hotspot}/make`，目的是告诉make编译器到该目录下寻找编译文件Makefile。\n\n<!-- more -->\n\n\n![debug-openjdk7](/images/post/2014/11/19/debug-jvm-on-linux-2.jpg)\n\n# 开始编译\n选择菜单栏`Project` > `Build Project`，如果运气不差的话会看到已经开始build了，沏杯咖啡慢慢等吧（首次build大概需要10-20m）。\n\n![debug-openjdk7](/images/post/2014/11/19/debug-jvm-on-linux-3.jpg)\n\n部分LOG信息：\n\n```bash\nmake[4]: Entering directory `/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug'\necho \"**NOTICE** Dtrace support disabled: \"/usr/include/sys/sdt.h not found\"\"\n**NOTICE** Dtrace support disabled: /usr/include/sys/sdt.h not found\nmake[4]: Leaving directory `/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug'\nAll done.\nmake[3]: Leaving directory `/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug'\ncd linux_amd64_compiler2/fastdebug && ./test_gamma\njava version \"1.7.0_67\"\nJava(TM) SE Runtime Environment (build 1.7.0_67-b01)\nOpenJDK 64-Bit Server VM (build 24.0-b56-internal-fastdebug, mixed mode)\n\n 1. A1 B5 C8 D6 E3 F7 G2 H4 \n 2. A1 B6 C8 D3 E7 F4 G2 H5 \n 3. A1 B7 C4 D6 E8 F2 G5 H3 \n 4. A1 B7 C5 D8 E2 F4 G6 H3 \n 5. A2 B4 C6 D8 E3 F1 G7 H5 \n 6. A2 B5 C7 D1 E3 F8 G6 H4\n\n -- 此处略去N行------\n\n\n Using java runtime at: /usr/java/jdk1.7.0_67/jre\nmake[2]: Leaving directory `/usr/local/openjdk/hotspot/build/linux'\nmake[1]: Leaving directory `/usr/local/openjdk/hotspot/make'\ncd /usr/local/openjdk/hotspot/make; \\\n    make BUILD_FLAVOR=fastdebug VM_TARGET=fastdebug1 generic_build1 \nINFO: ENABLE_FULL_DEBUG_SYMBOLS=1\nINFO: /usr/bin/objcopy cmd found so will create .debuginfo files.\nINFO: STRIP_POLICY=min_strip\nINFO: ZIP_DEBUGINFO_FILES=1\nmake[1]: Entering directory `/usr/local/openjdk/hotspot/make'\nmkdir -p /usr/local/openjdk/hotspot/build/linux\nNo compiler1 (fastdebug1) for ARCH_DATA_MODEL=64\nmake[1]: Leaving directory `/usr/local/openjdk/hotspot/make'\nmake BUILD_FLAVOR=fastdebug VM_SUBDIR=fastdebug \\\n      EXPORT_SUBDIR=/fastdebug \\\n      generic_export\nINFO: ENABLE_FULL_DEBUG_SYMBOLS=1\nINFO: /usr/bin/objcopy cmd found so will create .debuginfo files.\nINFO: STRIP_POLICY=min_strip\nINFO: ZIP_DEBUGINFO_FILES=1\nmake[1]: Entering directory `/usr/local/openjdk/hotspot/make'\nmake[1]: Nothing to be done for `generic_export'.\nmake[1]: Leaving directory `/usr/local/openjdk/hotspot/make'\n\n16:02:09 Build Finished (took 8s.216ms)\n```\n\n# 配置DEBUG环境\n- 编译成功之后就可以测试了，需配置如下几步\n点选菜单栏`Run` > `Debug Configurations` > `New launch configuration`，在`C/C++ Application`里填入`/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug/gamma`，Project选择当前项目。\n- 在`Argument tab`页里`Program arguments`填入`-version`\n- 在`Environment tab`页里`Environment variables to set`填入`JAVA_HOME | /usr/java/jdk1.7.0.67`\n- 在`Common tab`页里勾选`Debug`\n![debug-openjdk7](/images/post/2014/11/19/debug-jvm-on-linux-4.jpg)\n\n# 进入调试模式\n配置完毕后，点击Debug即可进入调试模式，Hotspot内部一览无余，\n![debug-openjdk7](/images/post/2014/11/19/debug-jvm-on-linux-5.jpg)\n","source":"_posts/2014/11/19/build-hotspot-jvm-debug-environment-on-linux.md","raw":"---\ntitle: 在Linux下搭建OpenJDK7源码调试环境\ndate: 2014-11-19 17:17:53\ncategories: OpenJDK\ntags:\n    - OpenJDK\n    - JVM\n    - Linux\n    - CentOS\n---\n\n在前面的文章中博主已经介绍过如何在Linux下编译OpenJDK7源码，现继续介绍如何在Linux下搭建基于eclipse IDE的Hotspot源码调试环境。鉴于网上关于JVM源码调试方面的文章寥寥无几并且内容参差不全，本文将把博主摸索数天的经验及成果以图文形式详细介绍Hotspot的debug过程。\n\n# 软件环境\n- OS：CentOS 6.5\n- OpenJDK: OpenJDK-7u40\n- JDK Version：openjdk-7u40-fcs-src-b43-26_aug_2013\n- IDE：eclipse-cpp-luna-SR1-linux-gtk-x86_64\n\n# 导入源码\n首先解压JDK源码包至`/usr/local`目录，然后启动eclipse，依次选择`File` > `New` > `Makefile Project with Existing Code`(如果没有则在Other里找)\n\n![debug-openjdk7](/images/post/2014/11/19/debug-jvm-on-linux-1.jpg)\n\n# 配置环境变量\n定位到项目名右键 > `Properties >C/C++ Build`需要修改两个地方：\n- 将Builder里`Use default build command`的对勾去掉，填入参数`ARCH_DATA_MODEL=64`\n- 将`Build location`的`Build directory`追加上`/make`，最终是`${workspace_lc:/hotspot}/make`，目的是告诉make编译器到该目录下寻找编译文件Makefile。\n\n<!-- more -->\n\n\n![debug-openjdk7](/images/post/2014/11/19/debug-jvm-on-linux-2.jpg)\n\n# 开始编译\n选择菜单栏`Project` > `Build Project`，如果运气不差的话会看到已经开始build了，沏杯咖啡慢慢等吧（首次build大概需要10-20m）。\n\n![debug-openjdk7](/images/post/2014/11/19/debug-jvm-on-linux-3.jpg)\n\n部分LOG信息：\n\n```bash\nmake[4]: Entering directory `/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug'\necho \"**NOTICE** Dtrace support disabled: \"/usr/include/sys/sdt.h not found\"\"\n**NOTICE** Dtrace support disabled: /usr/include/sys/sdt.h not found\nmake[4]: Leaving directory `/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug'\nAll done.\nmake[3]: Leaving directory `/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug'\ncd linux_amd64_compiler2/fastdebug && ./test_gamma\njava version \"1.7.0_67\"\nJava(TM) SE Runtime Environment (build 1.7.0_67-b01)\nOpenJDK 64-Bit Server VM (build 24.0-b56-internal-fastdebug, mixed mode)\n\n 1. A1 B5 C8 D6 E3 F7 G2 H4 \n 2. A1 B6 C8 D3 E7 F4 G2 H5 \n 3. A1 B7 C4 D6 E8 F2 G5 H3 \n 4. A1 B7 C5 D8 E2 F4 G6 H3 \n 5. A2 B4 C6 D8 E3 F1 G7 H5 \n 6. A2 B5 C7 D1 E3 F8 G6 H4\n\n -- 此处略去N行------\n\n\n Using java runtime at: /usr/java/jdk1.7.0_67/jre\nmake[2]: Leaving directory `/usr/local/openjdk/hotspot/build/linux'\nmake[1]: Leaving directory `/usr/local/openjdk/hotspot/make'\ncd /usr/local/openjdk/hotspot/make; \\\n    make BUILD_FLAVOR=fastdebug VM_TARGET=fastdebug1 generic_build1 \nINFO: ENABLE_FULL_DEBUG_SYMBOLS=1\nINFO: /usr/bin/objcopy cmd found so will create .debuginfo files.\nINFO: STRIP_POLICY=min_strip\nINFO: ZIP_DEBUGINFO_FILES=1\nmake[1]: Entering directory `/usr/local/openjdk/hotspot/make'\nmkdir -p /usr/local/openjdk/hotspot/build/linux\nNo compiler1 (fastdebug1) for ARCH_DATA_MODEL=64\nmake[1]: Leaving directory `/usr/local/openjdk/hotspot/make'\nmake BUILD_FLAVOR=fastdebug VM_SUBDIR=fastdebug \\\n      EXPORT_SUBDIR=/fastdebug \\\n      generic_export\nINFO: ENABLE_FULL_DEBUG_SYMBOLS=1\nINFO: /usr/bin/objcopy cmd found so will create .debuginfo files.\nINFO: STRIP_POLICY=min_strip\nINFO: ZIP_DEBUGINFO_FILES=1\nmake[1]: Entering directory `/usr/local/openjdk/hotspot/make'\nmake[1]: Nothing to be done for `generic_export'.\nmake[1]: Leaving directory `/usr/local/openjdk/hotspot/make'\n\n16:02:09 Build Finished (took 8s.216ms)\n```\n\n# 配置DEBUG环境\n- 编译成功之后就可以测试了，需配置如下几步\n点选菜单栏`Run` > `Debug Configurations` > `New launch configuration`，在`C/C++ Application`里填入`/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug/gamma`，Project选择当前项目。\n- 在`Argument tab`页里`Program arguments`填入`-version`\n- 在`Environment tab`页里`Environment variables to set`填入`JAVA_HOME | /usr/java/jdk1.7.0.67`\n- 在`Common tab`页里勾选`Debug`\n![debug-openjdk7](/images/post/2014/11/19/debug-jvm-on-linux-4.jpg)\n\n# 进入调试模式\n配置完毕后，点击Debug即可进入调试模式，Hotspot内部一览无余，\n![debug-openjdk7](/images/post/2014/11/19/debug-jvm-on-linux-5.jpg)\n","slug":"2014/11/19/build-hotspot-jvm-debug-environment-on-linux","published":1,"updated":"2018-03-27T19:04:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfb89nc300095ls6sv28k0rr","content":"<p>在前面的文章中博主已经介绍过如何在Linux下编译OpenJDK7源码，现继续介绍如何在Linux下搭建基于eclipse IDE的Hotspot源码调试环境。鉴于网上关于JVM源码调试方面的文章寥寥无几并且内容参差不全，本文将把博主摸索数天的经验及成果以图文形式详细介绍Hotspot的debug过程。</p>\n<h1 id=\"软件环境\"><a href=\"#软件环境\" class=\"headerlink\" title=\"软件环境\"></a>软件环境</h1><ul>\n<li>OS：CentOS 6.5</li>\n<li>OpenJDK: OpenJDK-7u40</li>\n<li>JDK Version：openjdk-7u40-fcs-src-b43-26_aug_2013</li>\n<li>IDE：eclipse-cpp-luna-SR1-linux-gtk-x86_64</li>\n</ul>\n<h1 id=\"导入源码\"><a href=\"#导入源码\" class=\"headerlink\" title=\"导入源码\"></a>导入源码</h1><p>首先解压JDK源码包至<code>/usr/local</code>目录，然后启动eclipse，依次选择<code>File</code> &gt; <code>New</code> &gt; <code>Makefile Project with Existing Code</code>(如果没有则在Other里找)</p>\n<p><img src=\"/images/post/2014/11/19/debug-jvm-on-linux-1.jpg\" alt=\"debug-openjdk7\"></p>\n<h1 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h1><p>定位到项目名右键 &gt; <code>Properties &gt;C/C++ Build</code>需要修改两个地方：</p>\n<ul>\n<li>将Builder里<code>Use default build command</code>的对勾去掉，填入参数<code>ARCH_DATA_MODEL=64</code></li>\n<li>将<code>Build location</code>的<code>Build directory</code>追加上<code>/make</code>，最终是<code>${workspace_lc:/hotspot}/make</code>，目的是告诉make编译器到该目录下寻找编译文件Makefile。</li>\n</ul>\n<a id=\"more\"></a>\n<p><img src=\"/images/post/2014/11/19/debug-jvm-on-linux-2.jpg\" alt=\"debug-openjdk7\"></p>\n<h1 id=\"开始编译\"><a href=\"#开始编译\" class=\"headerlink\" title=\"开始编译\"></a>开始编译</h1><p>选择菜单栏<code>Project</code> &gt; <code>Build Project</code>，如果运气不差的话会看到已经开始build了，沏杯咖啡慢慢等吧（首次build大概需要10-20m）。</p>\n<p><img src=\"/images/post/2014/11/19/debug-jvm-on-linux-3.jpg\" alt=\"debug-openjdk7\"></p>\n<p>部分LOG信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make[4]: Entering directory `/usr/<span class=\"built_in\">local</span>/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">echo \"**NOTICE** Dtrace support disabled: \"/usr/include/sys/sdt.h not found\"\"</span></span><br><span class=\"line\"><span class=\"string\">**NOTICE** Dtrace support disabled: /usr/include/sys/sdt.h not found</span></span><br><span class=\"line\"><span class=\"string\">make[4]: Leaving directory `/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug'</span></span><br><span class=\"line\">All <span class=\"keyword\">done</span>.</span><br><span class=\"line\">make[3]: Leaving directory `/usr/<span class=\"built_in\">local</span>/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">cd linux_amd64_compiler2/fastdebug &amp;&amp; ./test_gamma</span></span><br><span class=\"line\"><span class=\"string\">java version \"1.7.0_67\"</span></span><br><span class=\"line\"><span class=\"string\">Java(TM) SE Runtime Environment (build 1.7.0_67-b01)</span></span><br><span class=\"line\"><span class=\"string\">OpenJDK 64-Bit Server VM (build 24.0-b56-internal-fastdebug, mixed mode)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> 1. A1 B5 C8 D6 E3 F7 G2 H4 </span></span><br><span class=\"line\"><span class=\"string\"> 2. A1 B6 C8 D3 E7 F4 G2 H5 </span></span><br><span class=\"line\"><span class=\"string\"> 3. A1 B7 C4 D6 E8 F2 G5 H3 </span></span><br><span class=\"line\"><span class=\"string\"> 4. A1 B7 C5 D8 E2 F4 G6 H3 </span></span><br><span class=\"line\"><span class=\"string\"> 5. A2 B4 C6 D8 E3 F1 G7 H5 </span></span><br><span class=\"line\"><span class=\"string\"> 6. A2 B5 C7 D1 E3 F8 G6 H4</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> -- 此处略去N行------</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> Using java runtime at: /usr/java/jdk1.7.0_67/jre</span></span><br><span class=\"line\"><span class=\"string\">make[2]: Leaving directory `/usr/local/openjdk/hotspot/build/linux'</span></span><br><span class=\"line\">make[1]: Leaving directory `/usr/<span class=\"built_in\">local</span>/openjdk/hotspot/make<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">cd /usr/local/openjdk/hotspot/make; \\</span></span><br><span class=\"line\"><span class=\"string\">    make BUILD_FLAVOR=fastdebug VM_TARGET=fastdebug1 generic_build1 </span></span><br><span class=\"line\"><span class=\"string\">INFO: ENABLE_FULL_DEBUG_SYMBOLS=1</span></span><br><span class=\"line\"><span class=\"string\">INFO: /usr/bin/objcopy cmd found so will create .debuginfo files.</span></span><br><span class=\"line\"><span class=\"string\">INFO: STRIP_POLICY=min_strip</span></span><br><span class=\"line\"><span class=\"string\">INFO: ZIP_DEBUGINFO_FILES=1</span></span><br><span class=\"line\"><span class=\"string\">make[1]: Entering directory `/usr/local/openjdk/hotspot/make'</span></span><br><span class=\"line\">mkdir -p /usr/<span class=\"built_in\">local</span>/openjdk/hotspot/build/linux</span><br><span class=\"line\">No compiler1 (fastdebug1) <span class=\"keyword\">for</span> ARCH_DATA_MODEL=64</span><br><span class=\"line\">make[1]: Leaving directory `/usr/<span class=\"built_in\">local</span>/openjdk/hotspot/make<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">make BUILD_FLAVOR=fastdebug VM_SUBDIR=fastdebug \\</span></span><br><span class=\"line\"><span class=\"string\">      EXPORT_SUBDIR=/fastdebug \\</span></span><br><span class=\"line\"><span class=\"string\">      generic_export</span></span><br><span class=\"line\"><span class=\"string\">INFO: ENABLE_FULL_DEBUG_SYMBOLS=1</span></span><br><span class=\"line\"><span class=\"string\">INFO: /usr/bin/objcopy cmd found so will create .debuginfo files.</span></span><br><span class=\"line\"><span class=\"string\">INFO: STRIP_POLICY=min_strip</span></span><br><span class=\"line\"><span class=\"string\">INFO: ZIP_DEBUGINFO_FILES=1</span></span><br><span class=\"line\"><span class=\"string\">make[1]: Entering directory `/usr/local/openjdk/hotspot/make'</span></span><br><span class=\"line\">make[1]: Nothing to be <span class=\"keyword\">done</span> <span class=\"keyword\">for</span> `generic_export<span class=\"string\">'.</span></span><br><span class=\"line\"><span class=\"string\">make[1]: Leaving directory `/usr/local/openjdk/hotspot/make'</span></span><br><span class=\"line\"></span><br><span class=\"line\">16:02:09 Build Finished (took 8s.216ms)</span><br></pre></td></tr></table></figure>\n<h1 id=\"配置DEBUG环境\"><a href=\"#配置DEBUG环境\" class=\"headerlink\" title=\"配置DEBUG环境\"></a>配置DEBUG环境</h1><ul>\n<li>编译成功之后就可以测试了，需配置如下几步<br>点选菜单栏<code>Run</code> &gt; <code>Debug Configurations</code> &gt; <code>New launch configuration</code>，在<code>C/C++ Application</code>里填入<code>/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug/gamma</code>，Project选择当前项目。</li>\n<li>在<code>Argument tab</code>页里<code>Program arguments</code>填入<code>-version</code></li>\n<li>在<code>Environment tab</code>页里<code>Environment variables to set</code>填入<code>JAVA_HOME | /usr/java/jdk1.7.0.67</code></li>\n<li>在<code>Common tab</code>页里勾选<code>Debug</code><br><img src=\"/images/post/2014/11/19/debug-jvm-on-linux-4.jpg\" alt=\"debug-openjdk7\"></li>\n</ul>\n<h1 id=\"进入调试模式\"><a href=\"#进入调试模式\" class=\"headerlink\" title=\"进入调试模式\"></a>进入调试模式</h1><p>配置完毕后，点击Debug即可进入调试模式，Hotspot内部一览无余，<br><img src=\"/images/post/2014/11/19/debug-jvm-on-linux-5.jpg\" alt=\"debug-openjdk7\"></p>\n","site":{"data":{}},"excerpt":"<p>在前面的文章中博主已经介绍过如何在Linux下编译OpenJDK7源码，现继续介绍如何在Linux下搭建基于eclipse IDE的Hotspot源码调试环境。鉴于网上关于JVM源码调试方面的文章寥寥无几并且内容参差不全，本文将把博主摸索数天的经验及成果以图文形式详细介绍Hotspot的debug过程。</p>\n<h1 id=\"软件环境\"><a href=\"#软件环境\" class=\"headerlink\" title=\"软件环境\"></a>软件环境</h1><ul>\n<li>OS：CentOS 6.5</li>\n<li>OpenJDK: OpenJDK-7u40</li>\n<li>JDK Version：openjdk-7u40-fcs-src-b43-26_aug_2013</li>\n<li>IDE：eclipse-cpp-luna-SR1-linux-gtk-x86_64</li>\n</ul>\n<h1 id=\"导入源码\"><a href=\"#导入源码\" class=\"headerlink\" title=\"导入源码\"></a>导入源码</h1><p>首先解压JDK源码包至<code>/usr/local</code>目录，然后启动eclipse，依次选择<code>File</code> &gt; <code>New</code> &gt; <code>Makefile Project with Existing Code</code>(如果没有则在Other里找)</p>\n<p><img src=\"/images/post/2014/11/19/debug-jvm-on-linux-1.jpg\" alt=\"debug-openjdk7\"></p>\n<h1 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h1><p>定位到项目名右键 &gt; <code>Properties &gt;C/C++ Build</code>需要修改两个地方：</p>\n<ul>\n<li>将Builder里<code>Use default build command</code>的对勾去掉，填入参数<code>ARCH_DATA_MODEL=64</code></li>\n<li>将<code>Build location</code>的<code>Build directory</code>追加上<code>/make</code>，最终是<code>${workspace_lc:/hotspot}/make</code>，目的是告诉make编译器到该目录下寻找编译文件Makefile。</li>\n</ul>","more":"<p><img src=\"/images/post/2014/11/19/debug-jvm-on-linux-2.jpg\" alt=\"debug-openjdk7\"></p>\n<h1 id=\"开始编译\"><a href=\"#开始编译\" class=\"headerlink\" title=\"开始编译\"></a>开始编译</h1><p>选择菜单栏<code>Project</code> &gt; <code>Build Project</code>，如果运气不差的话会看到已经开始build了，沏杯咖啡慢慢等吧（首次build大概需要10-20m）。</p>\n<p><img src=\"/images/post/2014/11/19/debug-jvm-on-linux-3.jpg\" alt=\"debug-openjdk7\"></p>\n<p>部分LOG信息：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make[4]: Entering directory `/usr/<span class=\"built_in\">local</span>/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">echo \"**NOTICE** Dtrace support disabled: \"/usr/include/sys/sdt.h not found\"\"</span></span><br><span class=\"line\"><span class=\"string\">**NOTICE** Dtrace support disabled: /usr/include/sys/sdt.h not found</span></span><br><span class=\"line\"><span class=\"string\">make[4]: Leaving directory `/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug'</span></span><br><span class=\"line\">All <span class=\"keyword\">done</span>.</span><br><span class=\"line\">make[3]: Leaving directory `/usr/<span class=\"built_in\">local</span>/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">cd linux_amd64_compiler2/fastdebug &amp;&amp; ./test_gamma</span></span><br><span class=\"line\"><span class=\"string\">java version \"1.7.0_67\"</span></span><br><span class=\"line\"><span class=\"string\">Java(TM) SE Runtime Environment (build 1.7.0_67-b01)</span></span><br><span class=\"line\"><span class=\"string\">OpenJDK 64-Bit Server VM (build 24.0-b56-internal-fastdebug, mixed mode)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> 1. A1 B5 C8 D6 E3 F7 G2 H4 </span></span><br><span class=\"line\"><span class=\"string\"> 2. A1 B6 C8 D3 E7 F4 G2 H5 </span></span><br><span class=\"line\"><span class=\"string\"> 3. A1 B7 C4 D6 E8 F2 G5 H3 </span></span><br><span class=\"line\"><span class=\"string\"> 4. A1 B7 C5 D8 E2 F4 G6 H3 </span></span><br><span class=\"line\"><span class=\"string\"> 5. A2 B4 C6 D8 E3 F1 G7 H5 </span></span><br><span class=\"line\"><span class=\"string\"> 6. A2 B5 C7 D1 E3 F8 G6 H4</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> -- 此处略去N行------</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"> Using java runtime at: /usr/java/jdk1.7.0_67/jre</span></span><br><span class=\"line\"><span class=\"string\">make[2]: Leaving directory `/usr/local/openjdk/hotspot/build/linux'</span></span><br><span class=\"line\">make[1]: Leaving directory `/usr/<span class=\"built_in\">local</span>/openjdk/hotspot/make<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">cd /usr/local/openjdk/hotspot/make; \\</span></span><br><span class=\"line\"><span class=\"string\">    make BUILD_FLAVOR=fastdebug VM_TARGET=fastdebug1 generic_build1 </span></span><br><span class=\"line\"><span class=\"string\">INFO: ENABLE_FULL_DEBUG_SYMBOLS=1</span></span><br><span class=\"line\"><span class=\"string\">INFO: /usr/bin/objcopy cmd found so will create .debuginfo files.</span></span><br><span class=\"line\"><span class=\"string\">INFO: STRIP_POLICY=min_strip</span></span><br><span class=\"line\"><span class=\"string\">INFO: ZIP_DEBUGINFO_FILES=1</span></span><br><span class=\"line\"><span class=\"string\">make[1]: Entering directory `/usr/local/openjdk/hotspot/make'</span></span><br><span class=\"line\">mkdir -p /usr/<span class=\"built_in\">local</span>/openjdk/hotspot/build/linux</span><br><span class=\"line\">No compiler1 (fastdebug1) <span class=\"keyword\">for</span> ARCH_DATA_MODEL=64</span><br><span class=\"line\">make[1]: Leaving directory `/usr/<span class=\"built_in\">local</span>/openjdk/hotspot/make<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">make BUILD_FLAVOR=fastdebug VM_SUBDIR=fastdebug \\</span></span><br><span class=\"line\"><span class=\"string\">      EXPORT_SUBDIR=/fastdebug \\</span></span><br><span class=\"line\"><span class=\"string\">      generic_export</span></span><br><span class=\"line\"><span class=\"string\">INFO: ENABLE_FULL_DEBUG_SYMBOLS=1</span></span><br><span class=\"line\"><span class=\"string\">INFO: /usr/bin/objcopy cmd found so will create .debuginfo files.</span></span><br><span class=\"line\"><span class=\"string\">INFO: STRIP_POLICY=min_strip</span></span><br><span class=\"line\"><span class=\"string\">INFO: ZIP_DEBUGINFO_FILES=1</span></span><br><span class=\"line\"><span class=\"string\">make[1]: Entering directory `/usr/local/openjdk/hotspot/make'</span></span><br><span class=\"line\">make[1]: Nothing to be <span class=\"keyword\">done</span> <span class=\"keyword\">for</span> `generic_export<span class=\"string\">'.</span></span><br><span class=\"line\"><span class=\"string\">make[1]: Leaving directory `/usr/local/openjdk/hotspot/make'</span></span><br><span class=\"line\"></span><br><span class=\"line\">16:02:09 Build Finished (took 8s.216ms)</span><br></pre></td></tr></table></figure>\n<h1 id=\"配置DEBUG环境\"><a href=\"#配置DEBUG环境\" class=\"headerlink\" title=\"配置DEBUG环境\"></a>配置DEBUG环境</h1><ul>\n<li>编译成功之后就可以测试了，需配置如下几步<br>点选菜单栏<code>Run</code> &gt; <code>Debug Configurations</code> &gt; <code>New launch configuration</code>，在<code>C/C++ Application</code>里填入<code>/usr/local/openjdk/hotspot/build/linux/linux_amd64_compiler2/fastdebug/gamma</code>，Project选择当前项目。</li>\n<li>在<code>Argument tab</code>页里<code>Program arguments</code>填入<code>-version</code></li>\n<li>在<code>Environment tab</code>页里<code>Environment variables to set</code>填入<code>JAVA_HOME | /usr/java/jdk1.7.0.67</code></li>\n<li>在<code>Common tab</code>页里勾选<code>Debug</code><br><img src=\"/images/post/2014/11/19/debug-jvm-on-linux-4.jpg\" alt=\"debug-openjdk7\"></li>\n</ul>\n<h1 id=\"进入调试模式\"><a href=\"#进入调试模式\" class=\"headerlink\" title=\"进入调试模式\"></a>进入调试模式</h1><p>配置完毕后，点击Debug即可进入调试模式，Hotspot内部一览无余，<br><img src=\"/images/post/2014/11/19/debug-jvm-on-linux-5.jpg\" alt=\"debug-openjdk7\"></p>"},{"title":"【Hotspot源码分析】从Hotpost源码角度深入分析Java程序启动过程-创建","date":"2014-11-30T19:43:40.000Z","_content":"\n博主在11年到12年的时候曾连续研究过十个月的JVM，读过的相关书籍包括：\n\n- [深入Java虚拟机](https://book.douban.com/subject/1138768/)\n这本书可以说是介绍JVM内部原理的鼻祖了，于2003年出版现已绝版，不过可以再某宝买到影印版。虽然当时JDK最高仅为1.4但JVM内部的构造已大体形成，所以博主强烈推荐此书。p.s 我肯定不会告诉你这书博主看了3遍：D\n\n- [深入理解Java虚拟机](https://book.douban.com/subject/6522893/)\n国内周某人写的，鉴于博主对于国人写的书向来不怎么感兴趣还是不提了。\n\n\n说起JVM它可以是以下三种：\n1. 一个正在运行的Java实例\n2. Java虚拟机规范\n3. 一种JVM虚拟机实现\n\n之前的研究基本上都是虚拟机规范和JVM参数调优层面的内容，但是总觉得有些意犹未尽所以决定深入研究一下Hotspot实现，由大部分C/C++和少量汇编代码构成，但清晰的结构和优雅的编码使其并不难读，不得不赞叹一句SUN的大师们的智慧。至于如何编译、调试OpenJDK&Hotspot博主在前面的文章已经介绍过，这里便不再赘述，所以直入主题。\n\n<!-- more -->\n让我们从Java程序主入口开始逐步分析，主入口文件位于 `hotspot/src/share/tools/launcher/java.c`\n\nmain方法内容如下：\n\n\n```c\n/*\n * Entry point.\n * JAVA程序主入口\n */\nint\nmain(int argc, char ** argv)\n{\n    char *jarfile = 0;\n    char *classname = 0;\n    char *s = 0;\n    char *main_class = NULL;\n    int ret;\n    InvocationFunctions ifn;\n    jlong start, end;\n    char jrepath[MAXPATHLEN], jvmpath[MAXPATHLEN];\n    char ** original_argv = argv;\n\n    if (getenv(\"_JAVA_LAUNCHER_DEBUG\") != 0) {\n        _launcher_debug = JNI_TRUE;\n        printf(\"----_JAVA_LAUNCHER_DEBUG----\\n\");\n    }\n\n#ifndef GAMMA\n    // 确保指定的版本正在运行\n    SelectVersion(argc, argv, &main_class);\n#endif /* ifndef GAMMA */\n\n    /* copy original argv */\n    {\n      int i;\n      original_argv = (char**)JLI_MemAlloc(sizeof(char*)*(argc+1));\n      for(i = 0; i < argc+1; i++)\n        original_argv[i] = argv[i];\n    }\n\n    // 创建运行环境，如检查系统使用的数据模型（32bit、64bit），获取使用的JRE路径，找到jvm.cfg解析已知的vm类型\n    // 设置新的LD_LIBRARY_PATH变量\n    CreateExecutionEnvironment(&argc, &argv,\n                               jrepath, sizeof(jrepath),\n                               jvmpath, sizeof(jvmpath),\n                               original_argv);\n\n    printf(\"Using java runtime at: %s\\n\", jrepath);\n\n    ifn.CreateJavaVM = 0;\n    ifn.GetDefaultJavaVMInitArgs = 0;\n\n    if (_launcher_debug)\n      start = CounterGet();\n    // 通过jvmpath找到libjvm.so 并将其JNI_CreateJavaVM和JNI_GetDefaultJavaVMInitArgs方法的\n    // 符号地址返回，挂载到InvocationFunctions的CreateJavaVM和GetDefaultJavaVMInitArgs以便初始化调用\n    if (!LoadJavaVM(jvmpath, &ifn)) {\n      exit(6);\n    }\n    if (_launcher_debug) {\n      end   = CounterGet();\n      printf(\"%ld micro seconds to LoadJavaVM\\n\",\n             (long)(jint)Counter2Micros(end-start));\n    }\n\n#ifdef JAVA_ARGS  /* javac, jar and friends. */\n    progname = \"java\";\n#else             /* java, oldjava, javaw and friends */\n#ifdef PROGNAME\n    progname = PROGNAME;\n#else\n    progname = *argv;\n    if ((s = strrchr(progname, FILE_SEPARATOR)) != 0) {\n        progname = s + 1;\n    }\n#endif /* PROGNAME */\n#endif /* JAVA_ARGS */\n    ++argv;\n    --argc;\n\n#ifdef JAVA_ARGS\n    // 转换命令行参数 如：javac -cp foo:foo/\"*\" -J-ms32m\n    /* Preprocess wrapper arguments */\n    TranslateApplicationArgs(&argc, &argv);\n    /**\n     * 添加了三个VM选项\n     * -Denv.class.patp 用户设置的CLASSPATH变量，如果CLASSPATH显式设置了tools.jar\n     *                  则可以反编译VM的工具类sun.tools.*\n     * -Dapplication.home 应用程序目录\n     * -Djava.class.path 应用程序的类文件目录\n     */\n    if (!AddApplicationOptions()) {\n        exit(1);\n    }\n#endif\n\n    /* Set default CLASSPATH */\n    if ((s = getenv(\"CLASSPATH\")) == 0) {\n        s = \".\";\n    }\n#ifndef JAVA_ARGS\n    SetClassPath(s);\n#endif\n\n    /*\n     *  解析命令行参数-cp、-version、-*path、-X*等参数\n     *  Parse command line options; if the return value of\n     *  ParseArguments is false, the program should exit.\n     */\n    if (!ParseArguments(&argc, &argv, &jarfile, &classname, &ret, jvmpath)) {\n      exit(ret);\n    }\n\n    /* Override class path if -jar flag was specified */\n    if (jarfile != 0) {\n        SetClassPath(jarfile);\n    }\n\n    /* set the -Dsun.java.command pseudo property */\n    SetJavaCommandLineProp(classname, jarfile, argc, argv);\n\n    /* Set the -Dsun.java.launcher pseudo property */\n    SetJavaLauncherProp();\n\n    /* set the -Dsun.java.launcher.* platform properties */\n    SetJavaLauncherPlatformProps();\n\n#ifndef GAMMA\n    /* Show the splash screen if needed */\n    ShowSplashScreen();\n#endif\n\n    /*\n     * 移除环境变量防止重复执行\n     * Done with all command line processing and potential re-execs so\n     * clean up the environment.\n     */\n    (void)UnsetEnv(ENV_ENTRY);\n#ifndef GAMMA\n    (void)UnsetEnv(SPLASH_FILE_ENV_ENTRY);\n    (void)UnsetEnv(SPLASH_JAR_ENV_ENTRY);\n\n    JLI_MemFree(splash_jar_entry);\n    JLI_MemFree(splash_file_entry);\n#endif\n\n    /*\n     * 指定线程大小\n     * If user doesn't specify stack size, check if VM has a preference.\n     * Note that HotSpot no longer supports JNI_VERSION_1_1 but it will\n     * return its default stack size through the init args structure.\n     */\n    if (threadStackSize == 0) {\n      struct JDK1_1InitArgs args1_1;\n      memset((void*)&args1_1, 0, sizeof(args1_1));\n      args1_1.version = JNI_VERSION_1_1;\n      ifn.GetDefaultJavaVMInitArgs(&args1_1);  /* ignore return value */\n      if (args1_1.javaStackSize > 0) {\n         threadStackSize = args1_1.javaStackSize;\n      }\n    }\n\n    { /* Create a new thread to create JVM and invoke main method */\n      struct JavaMainArgs args;\n\n      args.argc = argc;\n      args.argv = argv;\n      args.jarfile = jarfile;\n      args.classname = classname;\n      args.ifn = ifn;\n      // block当前线程并且在新线程中继续执行\n      // 至于为什么在新线程中创建JVM见如下注释引用或原文https://bugs.openjdk.java.net/browse/JDK-6316197\n//      Primordial thread is created by the kernel before any program/library code\n//      has a chance to run. It's stack size and location can be very different\n//      from other threads created by the application. Creating JVM from primordial\n//      thread and later running Java code in the primordial thread introduced\n//      many problems:\n//\n//      1. On Windows primordial thread stack size is controlled by PE header in\n//         the executable. There is no way for user to change it dynamically, which\n//         means -Xss does not work for primordial thread.\n//\n//      2. On Solaris/Linux, primordial thread stack size is controlled by ulimit -s,\n//         which is usually very large (8M). To compensate for that we set guard\n//         page in the middle of stack to artificially reduce the stack size. However,\n//         this may interfere with native applications.\n//\n//      3. Setting guard page for primordial thread is dangerous. Unlike other\n//         threads, primordial thread stack can grow on demand. getrlimit()\n//         tells VM the ulimit value which is the upper limit but not necessarily\n//         the actual stack size. What could happen is that VM sets up the guard\n//         at the theoretical limit, but because the program doesn't really use\n//         that much stack, the unused space is reused for other purposes (e.g. malloc)\n//         by the OS (this reuse won't occur with other threads). We ended up having\n//         some C heap inserted between stack and its guard page.\n//\n//      4. On Linux VM bangs stack address below current SP to check for stack overflows.\n//         This will trigger SEGV's if it happens in primordial thread due to a security\n//         feature built into the kernel. Linux VM gets around the problem by manually\n//         expanding the stack. However when VM is expanding the stack, for a very short\n//         period the available stack space will be reduced to just 1 page. If a signal\n//         is delivered in that window, VM could end up without space to handle the signal.\n//\n//      5. Some Linux kernel randomizes the starting stack address for primordial thread\n//         both for stack coloring and exec-shield, but it won't tell the application.\n//         This makes it impossible to reliably detect stack location and size in primordial\n//         thread. VM needs the information to correctly handle stack overflows. We do\n//         have some cushion which is enough most of the time, but as shown in bug reports\n//         people do hit crashes because of this.\n//\n//      6. On Linux there is no thr_main() equivalent that can tell if current thread\n//         is primordial thread, makes it even harder to have special code to handle\n//         primordial thread.\n//\n//      I'm sure there are other issues that I didn't cover in the list. Basically\n//      primordial thread has been a constant source of runtime bugs.\n//\n//      This proposal calls for java launcher to stop calling JNI_CreateJavaVM from\n//      primordial thread. Instead, it can create a new thread and move all invocation\n//      code to the new thread. Primordial thread simply waits for the new thread\n//      to return and then it can terminate the process with the same exit value returned\n//      by the new thread. With this change we won't see any of the above problems\n//      as long as the application is started by a standard Sun launcher.\n//\n//      The above mentioned will still exist if VM is invoked from natvie application.\n//      Which means we have to keep all current VM workarounds for primordial thread,\n//      and probably need to add more. But reliability wise this is still significantly\n//      better as most people are using standard launcher. Also, unlike standard java\n//      launcher, customers have full control of native launcher. For example, if they\n//      wish to use larger stack on Windows, they could simply rebuild their launcher\n//      with larger stack size.\n      return ContinueInNewThread(JavaMain, threadStackSize, (void*)&args);\n    }\n}\n\nint JNICALL\nJavaMain(void * _args)\n{\n    struct JavaMainArgs *args = (struct JavaMainArgs *)_args;\n    int argc = args->argc;\n    char **argv = args->argv;\n    char *jarfile = args->jarfile;\n    char *classname = args->classname;\n    InvocationFunctions ifn = args->ifn;\n\n    JavaVM *vm = 0;\n    JNIEnv *env = 0;\n    jstring mainClassName;\n    jclass mainClass;\n    jmethodID mainID;\n    jobjectArray mainArgs;\n    int ret = 0;\n    jlong start, end;\n\n    /*\n     * Error message to print or display; by default the message will\n     * only be displayed in a window.\n     */\n    char * message = \"Fatal exception occurred.  Program will exit.\";\n    jboolean messageDest = JNI_FALSE;\n\n    /* Initialize the virtual machine */\n\n    if (_launcher_debug)\n        start = CounterGet();\n    // ================================\n    // 开始进行虚拟机初始化，此方法内部调用了JNI_CreateJavaVM，\n    // 这里做的事情非常之多，也是JVM启动的精华部分\n    // 由于这部分内容甚多，所以在下篇文章中介绍\n    // ================================\n    if (!InitializeJVM(&vm, &env, &ifn)) {\n        ReportErrorMessage(\"Could not create the Java virtual machine.\",\n                           JNI_TRUE);\n        exit(1);\n    }\n    // 如果输入了-version或-showversion参数\n    if (printVersion || showVersion) {\n        PrintJavaVersion(env);\n        if ((*env)->ExceptionOccurred(env)) {\n            ReportExceptionDescription(env);\n            goto leave;\n        }\n        if (printVersion) {\n            ret = 0;\n            message = NULL;\n            goto leave;\n        }\n        if (showVersion) {\n            fprintf(stderr, \"\\n\");\n        }\n    }\n\n    // 如果jar文件和类名均未指定则输出默认usage信息\n    /* If the user specified neither a class name nor a JAR file */\n    if (jarfile == 0 && classname == 0) {\n        PrintUsage();\n        message = NULL;\n        goto leave;\n    }\n\n#ifndef GAMMA\n    FreeKnownVMs();  /* after last possible PrintUsage() */\n#endif\n\n    if (_launcher_debug) {\n        end   = CounterGet();\n        printf(\"%ld micro seconds to InitializeJVM\\n\",\n               (long)(jint)Counter2Micros(end-start));\n    }\n\n    /* At this stage, argc/argv have the applications' arguments */\n    if (_launcher_debug) {\n        int i = 0;\n        printf(\"Main-Class is '%s'\\n\", classname ? classname : \"\");\n        printf(\"Apps' argc is %d\\n\", argc);\n        for (; i < argc; i++) {\n            printf(\"    argv[%2d] = '%s'\\n\", i, argv[i]);\n        }\n    }\n\n    ret = 1;\n\n    /*\n     * 获取应用程序的主类文件\n     */\n    // 解析jar包并加载主类文件\n    if (jarfile != 0) {\n        // 如果传入的是jar文件名称则通过调用java.util.jar.JarFile加载jar包并获取主类\n        mainClassName = GetMainClassName(env, jarfile);\n        if ((*env)->ExceptionOccurred(env)) {\n            ReportExceptionDescription(env);\n            goto leave;\n        }\n        if (mainClassName == NULL) {\n          const char * format = \"Failed to load Main-Class manifest \"\n                                \"attribute from\\n%s\";\n          message = (char*)JLI_MemAlloc((strlen(format) + strlen(jarfile)) *\n                                    sizeof(char));\n          sprintf(message, format, jarfile);\n          messageDest = JNI_TRUE;\n          goto leave;\n        }\n        classname = (char *)(*env)->GetStringUTFChars(env, mainClassName, 0);\n        if (classname == NULL) {\n            ReportExceptionDescription(env);\n            goto leave;\n        }\n        // 加载mainClass\n        mainClass = LoadClass(env, classname);\n        if(mainClass == NULL) { /* exception occured */\n            const char * format = \"Could not find the main class: %s. Program will exit.\";\n            ReportExceptionDescription(env);\n            message = (char *)JLI_MemAlloc((strlen(format) +\n                                            strlen(classname)) * sizeof(char) );\n            messageDest = JNI_TRUE;\n            sprintf(message, format, classname);\n            goto leave;\n        }\n        (*env)->ReleaseStringUTFChars(env, mainClassName, classname);\n    } else {\n      // 加载主类文件\n      mainClassName = NewPlatformString(env, classname);\n      if (mainClassName == NULL) {\n        const char * format = \"Failed to load Main Class: %s\";\n        message = (char *)JLI_MemAlloc((strlen(format) + strlen(classname)) *\n                                   sizeof(char) );\n        sprintf(message, format, classname);\n        messageDest = JNI_TRUE;\n        goto leave;\n      }\n      classname = (char *)(*env)->GetStringUTFChars(env, mainClassName, 0);\n      if (classname == NULL) {\n        ReportExceptionDescription(env);\n        goto leave;\n      }\n      mainClass = LoadClass(env, classname);\n      if(mainClass == NULL) { /* exception occured */\n        const char * format = \"Could not find the main class: %s.  Program will exit.\";\n        ReportExceptionDescription(env);\n        message = (char *)JLI_MemAlloc((strlen(format) +\n                                        strlen(classname)) * sizeof(char) );\n        messageDest = JNI_TRUE;\n        sprintf(message, format, classname);\n        goto leave;\n      }\n      (*env)->ReleaseStringUTFChars(env, mainClassName, classname);\n    }\n\n    // 获得主方法的ID\n    mainID = (*env)->GetStaticMethodID(env, mainClass, \"main\",\n                                       \"([Ljava/lang/String;)V\");\n    if (mainID == NULL) {\n        if ((*env)->ExceptionOccurred(env)) {\n            ReportExceptionDescription(env);\n        } else {\n          message = \"No main method found in specified class.\";\n          messageDest = JNI_TRUE;\n        }\n        goto leave;\n    }\n\n    {    /* Make sure the main method is public */\n        jint mods;\n        jmethodID mid;\n        // 通过反射获得main方法修饰符\n        jobject obj = (*env)->ToReflectedMethod(env, mainClass,\n                                                mainID, JNI_TRUE);\n\n        if( obj == NULL) { /* exception occurred */\n            ReportExceptionDescription(env);\n            goto leave;\n        }\n\n        mid =\n          (*env)->GetMethodID(env,\n                              (*env)->GetObjectClass(env, obj),\n                              \"getModifiers\", \"()I\");\n        if ((*env)->ExceptionOccurred(env)) {\n            ReportExceptionDescription(env);\n            goto leave;\n        }\n        // 确保是public类型\n        mods = (*env)->CallIntMethod(env, obj, mid);\n        if ((mods & 1) == 0) { /* if (!Modifier.isPublic(mods)) ... */\n            message = \"Main method not public.\";\n            messageDest = JNI_TRUE;\n            goto leave;\n        }\n    }\n\n    // 构建参数数组\n    mainArgs = NewPlatformStringArray(env, argv, argc);\n    if (mainArgs == NULL) {\n        ReportExceptionDescription(env);\n        goto leave;\n    }\n\n    // 调用main方法\n    /* Invoke main method. */\n    (*env)->CallStaticVoidMethod(env, mainClass, mainID, mainArgs);\n\n    /*\n     * The launcher's exit code (in the absence of calls to\n     * System.exit) will be non-zero if main threw an exception.\n     */\n    ret = (*env)->ExceptionOccurred(env) == NULL ? 0 : 1;\n\n    /*\n     * Detach the main thread so that it appears to have ended when\n     * the application's main method exits.  This will invoke the\n     * uncaught exception handler machinery if main threw an\n     * exception.  An uncaught exception handler cannot change the\n     * launcher's return code except by calling System.exit.\n     */\n    if ((*vm)->DetachCurrentThread(vm) != 0) {\n        message = \"Could not detach main thread.\";\n        messageDest = JNI_TRUE;\n        ret = 1;\n        goto leave;\n    }\n\n    message = NULL;\n\n leave:\n    /*\n     * Wait for all non-daemon threads to end, then destroy the VM.\n     * This will actually create a trivial new Java waiter thread\n     * named \"DestroyJavaVM\", but this will be seen as a different\n     * thread from the one that executed main, even though they are\n     * the same C thread.  This allows mainThread.join() and\n     * mainThread.isAlive() to work as expected.\n     */\n    (*vm)->DestroyJavaVM(vm);\n\n    if(message != NULL && !noExitErrorMessage)\n      ReportErrorMessage(message, messageDest);\n    return ret;\n}\n```\n\n\n\n下篇文章将介绍JVM初始化部分。","source":"_posts/2014/12/01/analyse-jvm-startup-flow-through-source-code-create.md","raw":"---\ntitle: 【Hotspot源码分析】从Hotpost源码角度深入分析Java程序启动过程-创建\ndate: 2014-12-01 03:43:40\ncategories: OpenJDK\ntags:\n    - OpenJDK\n    - JVM\n---\n\n博主在11年到12年的时候曾连续研究过十个月的JVM，读过的相关书籍包括：\n\n- [深入Java虚拟机](https://book.douban.com/subject/1138768/)\n这本书可以说是介绍JVM内部原理的鼻祖了，于2003年出版现已绝版，不过可以再某宝买到影印版。虽然当时JDK最高仅为1.4但JVM内部的构造已大体形成，所以博主强烈推荐此书。p.s 我肯定不会告诉你这书博主看了3遍：D\n\n- [深入理解Java虚拟机](https://book.douban.com/subject/6522893/)\n国内周某人写的，鉴于博主对于国人写的书向来不怎么感兴趣还是不提了。\n\n\n说起JVM它可以是以下三种：\n1. 一个正在运行的Java实例\n2. Java虚拟机规范\n3. 一种JVM虚拟机实现\n\n之前的研究基本上都是虚拟机规范和JVM参数调优层面的内容，但是总觉得有些意犹未尽所以决定深入研究一下Hotspot实现，由大部分C/C++和少量汇编代码构成，但清晰的结构和优雅的编码使其并不难读，不得不赞叹一句SUN的大师们的智慧。至于如何编译、调试OpenJDK&Hotspot博主在前面的文章已经介绍过，这里便不再赘述，所以直入主题。\n\n<!-- more -->\n让我们从Java程序主入口开始逐步分析，主入口文件位于 `hotspot/src/share/tools/launcher/java.c`\n\nmain方法内容如下：\n\n\n```c\n/*\n * Entry point.\n * JAVA程序主入口\n */\nint\nmain(int argc, char ** argv)\n{\n    char *jarfile = 0;\n    char *classname = 0;\n    char *s = 0;\n    char *main_class = NULL;\n    int ret;\n    InvocationFunctions ifn;\n    jlong start, end;\n    char jrepath[MAXPATHLEN], jvmpath[MAXPATHLEN];\n    char ** original_argv = argv;\n\n    if (getenv(\"_JAVA_LAUNCHER_DEBUG\") != 0) {\n        _launcher_debug = JNI_TRUE;\n        printf(\"----_JAVA_LAUNCHER_DEBUG----\\n\");\n    }\n\n#ifndef GAMMA\n    // 确保指定的版本正在运行\n    SelectVersion(argc, argv, &main_class);\n#endif /* ifndef GAMMA */\n\n    /* copy original argv */\n    {\n      int i;\n      original_argv = (char**)JLI_MemAlloc(sizeof(char*)*(argc+1));\n      for(i = 0; i < argc+1; i++)\n        original_argv[i] = argv[i];\n    }\n\n    // 创建运行环境，如检查系统使用的数据模型（32bit、64bit），获取使用的JRE路径，找到jvm.cfg解析已知的vm类型\n    // 设置新的LD_LIBRARY_PATH变量\n    CreateExecutionEnvironment(&argc, &argv,\n                               jrepath, sizeof(jrepath),\n                               jvmpath, sizeof(jvmpath),\n                               original_argv);\n\n    printf(\"Using java runtime at: %s\\n\", jrepath);\n\n    ifn.CreateJavaVM = 0;\n    ifn.GetDefaultJavaVMInitArgs = 0;\n\n    if (_launcher_debug)\n      start = CounterGet();\n    // 通过jvmpath找到libjvm.so 并将其JNI_CreateJavaVM和JNI_GetDefaultJavaVMInitArgs方法的\n    // 符号地址返回，挂载到InvocationFunctions的CreateJavaVM和GetDefaultJavaVMInitArgs以便初始化调用\n    if (!LoadJavaVM(jvmpath, &ifn)) {\n      exit(6);\n    }\n    if (_launcher_debug) {\n      end   = CounterGet();\n      printf(\"%ld micro seconds to LoadJavaVM\\n\",\n             (long)(jint)Counter2Micros(end-start));\n    }\n\n#ifdef JAVA_ARGS  /* javac, jar and friends. */\n    progname = \"java\";\n#else             /* java, oldjava, javaw and friends */\n#ifdef PROGNAME\n    progname = PROGNAME;\n#else\n    progname = *argv;\n    if ((s = strrchr(progname, FILE_SEPARATOR)) != 0) {\n        progname = s + 1;\n    }\n#endif /* PROGNAME */\n#endif /* JAVA_ARGS */\n    ++argv;\n    --argc;\n\n#ifdef JAVA_ARGS\n    // 转换命令行参数 如：javac -cp foo:foo/\"*\" -J-ms32m\n    /* Preprocess wrapper arguments */\n    TranslateApplicationArgs(&argc, &argv);\n    /**\n     * 添加了三个VM选项\n     * -Denv.class.patp 用户设置的CLASSPATH变量，如果CLASSPATH显式设置了tools.jar\n     *                  则可以反编译VM的工具类sun.tools.*\n     * -Dapplication.home 应用程序目录\n     * -Djava.class.path 应用程序的类文件目录\n     */\n    if (!AddApplicationOptions()) {\n        exit(1);\n    }\n#endif\n\n    /* Set default CLASSPATH */\n    if ((s = getenv(\"CLASSPATH\")) == 0) {\n        s = \".\";\n    }\n#ifndef JAVA_ARGS\n    SetClassPath(s);\n#endif\n\n    /*\n     *  解析命令行参数-cp、-version、-*path、-X*等参数\n     *  Parse command line options; if the return value of\n     *  ParseArguments is false, the program should exit.\n     */\n    if (!ParseArguments(&argc, &argv, &jarfile, &classname, &ret, jvmpath)) {\n      exit(ret);\n    }\n\n    /* Override class path if -jar flag was specified */\n    if (jarfile != 0) {\n        SetClassPath(jarfile);\n    }\n\n    /* set the -Dsun.java.command pseudo property */\n    SetJavaCommandLineProp(classname, jarfile, argc, argv);\n\n    /* Set the -Dsun.java.launcher pseudo property */\n    SetJavaLauncherProp();\n\n    /* set the -Dsun.java.launcher.* platform properties */\n    SetJavaLauncherPlatformProps();\n\n#ifndef GAMMA\n    /* Show the splash screen if needed */\n    ShowSplashScreen();\n#endif\n\n    /*\n     * 移除环境变量防止重复执行\n     * Done with all command line processing and potential re-execs so\n     * clean up the environment.\n     */\n    (void)UnsetEnv(ENV_ENTRY);\n#ifndef GAMMA\n    (void)UnsetEnv(SPLASH_FILE_ENV_ENTRY);\n    (void)UnsetEnv(SPLASH_JAR_ENV_ENTRY);\n\n    JLI_MemFree(splash_jar_entry);\n    JLI_MemFree(splash_file_entry);\n#endif\n\n    /*\n     * 指定线程大小\n     * If user doesn't specify stack size, check if VM has a preference.\n     * Note that HotSpot no longer supports JNI_VERSION_1_1 but it will\n     * return its default stack size through the init args structure.\n     */\n    if (threadStackSize == 0) {\n      struct JDK1_1InitArgs args1_1;\n      memset((void*)&args1_1, 0, sizeof(args1_1));\n      args1_1.version = JNI_VERSION_1_1;\n      ifn.GetDefaultJavaVMInitArgs(&args1_1);  /* ignore return value */\n      if (args1_1.javaStackSize > 0) {\n         threadStackSize = args1_1.javaStackSize;\n      }\n    }\n\n    { /* Create a new thread to create JVM and invoke main method */\n      struct JavaMainArgs args;\n\n      args.argc = argc;\n      args.argv = argv;\n      args.jarfile = jarfile;\n      args.classname = classname;\n      args.ifn = ifn;\n      // block当前线程并且在新线程中继续执行\n      // 至于为什么在新线程中创建JVM见如下注释引用或原文https://bugs.openjdk.java.net/browse/JDK-6316197\n//      Primordial thread is created by the kernel before any program/library code\n//      has a chance to run. It's stack size and location can be very different\n//      from other threads created by the application. Creating JVM from primordial\n//      thread and later running Java code in the primordial thread introduced\n//      many problems:\n//\n//      1. On Windows primordial thread stack size is controlled by PE header in\n//         the executable. There is no way for user to change it dynamically, which\n//         means -Xss does not work for primordial thread.\n//\n//      2. On Solaris/Linux, primordial thread stack size is controlled by ulimit -s,\n//         which is usually very large (8M). To compensate for that we set guard\n//         page in the middle of stack to artificially reduce the stack size. However,\n//         this may interfere with native applications.\n//\n//      3. Setting guard page for primordial thread is dangerous. Unlike other\n//         threads, primordial thread stack can grow on demand. getrlimit()\n//         tells VM the ulimit value which is the upper limit but not necessarily\n//         the actual stack size. What could happen is that VM sets up the guard\n//         at the theoretical limit, but because the program doesn't really use\n//         that much stack, the unused space is reused for other purposes (e.g. malloc)\n//         by the OS (this reuse won't occur with other threads). We ended up having\n//         some C heap inserted between stack and its guard page.\n//\n//      4. On Linux VM bangs stack address below current SP to check for stack overflows.\n//         This will trigger SEGV's if it happens in primordial thread due to a security\n//         feature built into the kernel. Linux VM gets around the problem by manually\n//         expanding the stack. However when VM is expanding the stack, for a very short\n//         period the available stack space will be reduced to just 1 page. If a signal\n//         is delivered in that window, VM could end up without space to handle the signal.\n//\n//      5. Some Linux kernel randomizes the starting stack address for primordial thread\n//         both for stack coloring and exec-shield, but it won't tell the application.\n//         This makes it impossible to reliably detect stack location and size in primordial\n//         thread. VM needs the information to correctly handle stack overflows. We do\n//         have some cushion which is enough most of the time, but as shown in bug reports\n//         people do hit crashes because of this.\n//\n//      6. On Linux there is no thr_main() equivalent that can tell if current thread\n//         is primordial thread, makes it even harder to have special code to handle\n//         primordial thread.\n//\n//      I'm sure there are other issues that I didn't cover in the list. Basically\n//      primordial thread has been a constant source of runtime bugs.\n//\n//      This proposal calls for java launcher to stop calling JNI_CreateJavaVM from\n//      primordial thread. Instead, it can create a new thread and move all invocation\n//      code to the new thread. Primordial thread simply waits for the new thread\n//      to return and then it can terminate the process with the same exit value returned\n//      by the new thread. With this change we won't see any of the above problems\n//      as long as the application is started by a standard Sun launcher.\n//\n//      The above mentioned will still exist if VM is invoked from natvie application.\n//      Which means we have to keep all current VM workarounds for primordial thread,\n//      and probably need to add more. But reliability wise this is still significantly\n//      better as most people are using standard launcher. Also, unlike standard java\n//      launcher, customers have full control of native launcher. For example, if they\n//      wish to use larger stack on Windows, they could simply rebuild their launcher\n//      with larger stack size.\n      return ContinueInNewThread(JavaMain, threadStackSize, (void*)&args);\n    }\n}\n\nint JNICALL\nJavaMain(void * _args)\n{\n    struct JavaMainArgs *args = (struct JavaMainArgs *)_args;\n    int argc = args->argc;\n    char **argv = args->argv;\n    char *jarfile = args->jarfile;\n    char *classname = args->classname;\n    InvocationFunctions ifn = args->ifn;\n\n    JavaVM *vm = 0;\n    JNIEnv *env = 0;\n    jstring mainClassName;\n    jclass mainClass;\n    jmethodID mainID;\n    jobjectArray mainArgs;\n    int ret = 0;\n    jlong start, end;\n\n    /*\n     * Error message to print or display; by default the message will\n     * only be displayed in a window.\n     */\n    char * message = \"Fatal exception occurred.  Program will exit.\";\n    jboolean messageDest = JNI_FALSE;\n\n    /* Initialize the virtual machine */\n\n    if (_launcher_debug)\n        start = CounterGet();\n    // ================================\n    // 开始进行虚拟机初始化，此方法内部调用了JNI_CreateJavaVM，\n    // 这里做的事情非常之多，也是JVM启动的精华部分\n    // 由于这部分内容甚多，所以在下篇文章中介绍\n    // ================================\n    if (!InitializeJVM(&vm, &env, &ifn)) {\n        ReportErrorMessage(\"Could not create the Java virtual machine.\",\n                           JNI_TRUE);\n        exit(1);\n    }\n    // 如果输入了-version或-showversion参数\n    if (printVersion || showVersion) {\n        PrintJavaVersion(env);\n        if ((*env)->ExceptionOccurred(env)) {\n            ReportExceptionDescription(env);\n            goto leave;\n        }\n        if (printVersion) {\n            ret = 0;\n            message = NULL;\n            goto leave;\n        }\n        if (showVersion) {\n            fprintf(stderr, \"\\n\");\n        }\n    }\n\n    // 如果jar文件和类名均未指定则输出默认usage信息\n    /* If the user specified neither a class name nor a JAR file */\n    if (jarfile == 0 && classname == 0) {\n        PrintUsage();\n        message = NULL;\n        goto leave;\n    }\n\n#ifndef GAMMA\n    FreeKnownVMs();  /* after last possible PrintUsage() */\n#endif\n\n    if (_launcher_debug) {\n        end   = CounterGet();\n        printf(\"%ld micro seconds to InitializeJVM\\n\",\n               (long)(jint)Counter2Micros(end-start));\n    }\n\n    /* At this stage, argc/argv have the applications' arguments */\n    if (_launcher_debug) {\n        int i = 0;\n        printf(\"Main-Class is '%s'\\n\", classname ? classname : \"\");\n        printf(\"Apps' argc is %d\\n\", argc);\n        for (; i < argc; i++) {\n            printf(\"    argv[%2d] = '%s'\\n\", i, argv[i]);\n        }\n    }\n\n    ret = 1;\n\n    /*\n     * 获取应用程序的主类文件\n     */\n    // 解析jar包并加载主类文件\n    if (jarfile != 0) {\n        // 如果传入的是jar文件名称则通过调用java.util.jar.JarFile加载jar包并获取主类\n        mainClassName = GetMainClassName(env, jarfile);\n        if ((*env)->ExceptionOccurred(env)) {\n            ReportExceptionDescription(env);\n            goto leave;\n        }\n        if (mainClassName == NULL) {\n          const char * format = \"Failed to load Main-Class manifest \"\n                                \"attribute from\\n%s\";\n          message = (char*)JLI_MemAlloc((strlen(format) + strlen(jarfile)) *\n                                    sizeof(char));\n          sprintf(message, format, jarfile);\n          messageDest = JNI_TRUE;\n          goto leave;\n        }\n        classname = (char *)(*env)->GetStringUTFChars(env, mainClassName, 0);\n        if (classname == NULL) {\n            ReportExceptionDescription(env);\n            goto leave;\n        }\n        // 加载mainClass\n        mainClass = LoadClass(env, classname);\n        if(mainClass == NULL) { /* exception occured */\n            const char * format = \"Could not find the main class: %s. Program will exit.\";\n            ReportExceptionDescription(env);\n            message = (char *)JLI_MemAlloc((strlen(format) +\n                                            strlen(classname)) * sizeof(char) );\n            messageDest = JNI_TRUE;\n            sprintf(message, format, classname);\n            goto leave;\n        }\n        (*env)->ReleaseStringUTFChars(env, mainClassName, classname);\n    } else {\n      // 加载主类文件\n      mainClassName = NewPlatformString(env, classname);\n      if (mainClassName == NULL) {\n        const char * format = \"Failed to load Main Class: %s\";\n        message = (char *)JLI_MemAlloc((strlen(format) + strlen(classname)) *\n                                   sizeof(char) );\n        sprintf(message, format, classname);\n        messageDest = JNI_TRUE;\n        goto leave;\n      }\n      classname = (char *)(*env)->GetStringUTFChars(env, mainClassName, 0);\n      if (classname == NULL) {\n        ReportExceptionDescription(env);\n        goto leave;\n      }\n      mainClass = LoadClass(env, classname);\n      if(mainClass == NULL) { /* exception occured */\n        const char * format = \"Could not find the main class: %s.  Program will exit.\";\n        ReportExceptionDescription(env);\n        message = (char *)JLI_MemAlloc((strlen(format) +\n                                        strlen(classname)) * sizeof(char) );\n        messageDest = JNI_TRUE;\n        sprintf(message, format, classname);\n        goto leave;\n      }\n      (*env)->ReleaseStringUTFChars(env, mainClassName, classname);\n    }\n\n    // 获得主方法的ID\n    mainID = (*env)->GetStaticMethodID(env, mainClass, \"main\",\n                                       \"([Ljava/lang/String;)V\");\n    if (mainID == NULL) {\n        if ((*env)->ExceptionOccurred(env)) {\n            ReportExceptionDescription(env);\n        } else {\n          message = \"No main method found in specified class.\";\n          messageDest = JNI_TRUE;\n        }\n        goto leave;\n    }\n\n    {    /* Make sure the main method is public */\n        jint mods;\n        jmethodID mid;\n        // 通过反射获得main方法修饰符\n        jobject obj = (*env)->ToReflectedMethod(env, mainClass,\n                                                mainID, JNI_TRUE);\n\n        if( obj == NULL) { /* exception occurred */\n            ReportExceptionDescription(env);\n            goto leave;\n        }\n\n        mid =\n          (*env)->GetMethodID(env,\n                              (*env)->GetObjectClass(env, obj),\n                              \"getModifiers\", \"()I\");\n        if ((*env)->ExceptionOccurred(env)) {\n            ReportExceptionDescription(env);\n            goto leave;\n        }\n        // 确保是public类型\n        mods = (*env)->CallIntMethod(env, obj, mid);\n        if ((mods & 1) == 0) { /* if (!Modifier.isPublic(mods)) ... */\n            message = \"Main method not public.\";\n            messageDest = JNI_TRUE;\n            goto leave;\n        }\n    }\n\n    // 构建参数数组\n    mainArgs = NewPlatformStringArray(env, argv, argc);\n    if (mainArgs == NULL) {\n        ReportExceptionDescription(env);\n        goto leave;\n    }\n\n    // 调用main方法\n    /* Invoke main method. */\n    (*env)->CallStaticVoidMethod(env, mainClass, mainID, mainArgs);\n\n    /*\n     * The launcher's exit code (in the absence of calls to\n     * System.exit) will be non-zero if main threw an exception.\n     */\n    ret = (*env)->ExceptionOccurred(env) == NULL ? 0 : 1;\n\n    /*\n     * Detach the main thread so that it appears to have ended when\n     * the application's main method exits.  This will invoke the\n     * uncaught exception handler machinery if main threw an\n     * exception.  An uncaught exception handler cannot change the\n     * launcher's return code except by calling System.exit.\n     */\n    if ((*vm)->DetachCurrentThread(vm) != 0) {\n        message = \"Could not detach main thread.\";\n        messageDest = JNI_TRUE;\n        ret = 1;\n        goto leave;\n    }\n\n    message = NULL;\n\n leave:\n    /*\n     * Wait for all non-daemon threads to end, then destroy the VM.\n     * This will actually create a trivial new Java waiter thread\n     * named \"DestroyJavaVM\", but this will be seen as a different\n     * thread from the one that executed main, even though they are\n     * the same C thread.  This allows mainThread.join() and\n     * mainThread.isAlive() to work as expected.\n     */\n    (*vm)->DestroyJavaVM(vm);\n\n    if(message != NULL && !noExitErrorMessage)\n      ReportErrorMessage(message, messageDest);\n    return ret;\n}\n```\n\n\n\n下篇文章将介绍JVM初始化部分。","slug":"2014/12/01/analyse-jvm-startup-flow-through-source-code-create","published":1,"updated":"2018-03-27T19:04:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfb89nc5000b5ls6wft67yef","content":"<p>博主在11年到12年的时候曾连续研究过十个月的JVM，读过的相关书籍包括：</p>\n<ul>\n<li><p><a href=\"https://book.douban.com/subject/1138768/\" target=\"_blank\" rel=\"noopener\">深入Java虚拟机</a><br>这本书可以说是介绍JVM内部原理的鼻祖了，于2003年出版现已绝版，不过可以再某宝买到影印版。虽然当时JDK最高仅为1.4但JVM内部的构造已大体形成，所以博主强烈推荐此书。p.s 我肯定不会告诉你这书博主看了3遍：D</p>\n</li>\n<li><p><a href=\"https://book.douban.com/subject/6522893/\" target=\"_blank\" rel=\"noopener\">深入理解Java虚拟机</a><br>国内周某人写的，鉴于博主对于国人写的书向来不怎么感兴趣还是不提了。</p>\n</li>\n</ul>\n<p>说起JVM它可以是以下三种：</p>\n<ol>\n<li>一个正在运行的Java实例</li>\n<li>Java虚拟机规范</li>\n<li>一种JVM虚拟机实现</li>\n</ol>\n<p>之前的研究基本上都是虚拟机规范和JVM参数调优层面的内容，但是总觉得有些意犹未尽所以决定深入研究一下Hotspot实现，由大部分C/C++和少量汇编代码构成，但清晰的结构和优雅的编码使其并不难读，不得不赞叹一句SUN的大师们的智慧。至于如何编译、调试OpenJDK&amp;Hotspot博主在前面的文章已经介绍过，这里便不再赘述，所以直入主题。</p>\n<a id=\"more\"></a>\n<p>让我们从Java程序主入口开始逐步分析，主入口文件位于 <code>hotspot/src/share/tools/launcher/java.c</code></p>\n<p>main方法内容如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Entry point.</span></span><br><span class=\"line\"><span class=\"comment\"> * JAVA程序主入口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">int</span></span><br><span class=\"line\">main(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> ** argv)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *jarfile = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *classname = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *s = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *main_class = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret;</span><br><span class=\"line\">    InvocationFunctions ifn;</span><br><span class=\"line\">    jlong start, end;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> jrepath[MAXPATHLEN], jvmpath[MAXPATHLEN];</span><br><span class=\"line\">    <span class=\"keyword\">char</span> ** original_argv = argv;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getenv(<span class=\"string\">\"_JAVA_LAUNCHER_DEBUG\"</span>) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        _launcher_debug = JNI_TRUE;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"----_JAVA_LAUNCHER_DEBUG----\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> GAMMA</span></span><br><span class=\"line\">    <span class=\"comment\">// 确保指定的版本正在运行</span></span><br><span class=\"line\">    SelectVersion(argc, argv, &amp;main_class);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* ifndef GAMMA */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* copy original argv */</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">      original_argv = (<span class=\"keyword\">char</span>**)JLI_MemAlloc(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>*)*(argc+<span class=\"number\">1</span>));</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; argc+<span class=\"number\">1</span>; i++)</span><br><span class=\"line\">        original_argv[i] = argv[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建运行环境，如检查系统使用的数据模型（32bit、64bit），获取使用的JRE路径，找到jvm.cfg解析已知的vm类型</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置新的LD_LIBRARY_PATH变量</span></span><br><span class=\"line\">    CreateExecutionEnvironment(&amp;argc, &amp;argv,</span><br><span class=\"line\">                               jrepath, <span class=\"keyword\">sizeof</span>(jrepath),</span><br><span class=\"line\">                               jvmpath, <span class=\"keyword\">sizeof</span>(jvmpath),</span><br><span class=\"line\">                               original_argv);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"Using java runtime at: %s\\n\"</span>, jrepath);</span><br><span class=\"line\"></span><br><span class=\"line\">    ifn.CreateJavaVM = <span class=\"number\">0</span>;</span><br><span class=\"line\">    ifn.GetDefaultJavaVMInitArgs = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_launcher_debug)</span><br><span class=\"line\">      start = CounterGet();</span><br><span class=\"line\">    <span class=\"comment\">// 通过jvmpath找到libjvm.so 并将其JNI_CreateJavaVM和JNI_GetDefaultJavaVMInitArgs方法的</span></span><br><span class=\"line\">    <span class=\"comment\">// 符号地址返回，挂载到InvocationFunctions的CreateJavaVM和GetDefaultJavaVMInitArgs以便初始化调用</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!LoadJavaVM(jvmpath, &amp;ifn)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">exit</span>(<span class=\"number\">6</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_launcher_debug) &#123;</span><br><span class=\"line\">      end   = CounterGet();</span><br><span class=\"line\">      <span class=\"built_in\">printf</span>(<span class=\"string\">\"%ld micro seconds to LoadJavaVM\\n\"</span>,</span><br><span class=\"line\">             (<span class=\"keyword\">long</span>)(jint)Counter2Micros(end-start));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> JAVA_ARGS  <span class=\"comment\">/* javac, jar and friends. */</span></span></span><br><span class=\"line\">    progname = <span class=\"string\">\"java\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span>             <span class=\"comment\">/* java, oldjava, javaw and friends */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> PROGNAME</span></span><br><span class=\"line\">    progname = PROGNAME;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">    progname = *argv;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((s = <span class=\"built_in\">strrchr</span>(progname, FILE_SEPARATOR)) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        progname = s + <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* PROGNAME */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* JAVA_ARGS */</span></span></span><br><span class=\"line\">    ++argv;</span><br><span class=\"line\">    --argc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> JAVA_ARGS</span></span><br><span class=\"line\">    <span class=\"comment\">// 转换命令行参数 如：javac -cp foo:foo/\"*\" -J-ms32m</span></span><br><span class=\"line\">    <span class=\"comment\">/* Preprocess wrapper arguments */</span></span><br><span class=\"line\">    TranslateApplicationArgs(&amp;argc, &amp;argv);</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加了三个VM选项</span></span><br><span class=\"line\"><span class=\"comment\">     * -Denv.class.patp 用户设置的CLASSPATH变量，如果CLASSPATH显式设置了tools.jar</span></span><br><span class=\"line\"><span class=\"comment\">     *                  则可以反编译VM的工具类sun.tools.*</span></span><br><span class=\"line\"><span class=\"comment\">     * -Dapplication.home 应用程序目录</span></span><br><span class=\"line\"><span class=\"comment\">     * -Djava.class.path 应用程序的类文件目录</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!AddApplicationOptions()) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Set default CLASSPATH */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((s = getenv(<span class=\"string\">\"CLASSPATH\"</span>)) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        s = <span class=\"string\">\".\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> JAVA_ARGS</span></span><br><span class=\"line\">    SetClassPath(s);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     *  解析命令行参数-cp、-version、-*path、-X*等参数</span></span><br><span class=\"line\"><span class=\"comment\">     *  Parse command line options; if the return value of</span></span><br><span class=\"line\"><span class=\"comment\">     *  ParseArguments is false, the program should exit.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!ParseArguments(&amp;argc, &amp;argv, &amp;jarfile, &amp;classname, &amp;ret, jvmpath)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">exit</span>(ret);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Override class path if -jar flag was specified */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (jarfile != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        SetClassPath(jarfile);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* set the -Dsun.java.command pseudo property */</span></span><br><span class=\"line\">    SetJavaCommandLineProp(classname, jarfile, argc, argv);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Set the -Dsun.java.launcher pseudo property */</span></span><br><span class=\"line\">    SetJavaLauncherProp();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* set the -Dsun.java.launcher.* platform properties */</span></span><br><span class=\"line\">    SetJavaLauncherPlatformProps();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> GAMMA</span></span><br><span class=\"line\">    <span class=\"comment\">/* Show the splash screen if needed */</span></span><br><span class=\"line\">    ShowSplashScreen();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * 移除环境变量防止重复执行</span></span><br><span class=\"line\"><span class=\"comment\">     * Done with all command line processing and potential re-execs so</span></span><br><span class=\"line\"><span class=\"comment\">     * clean up the environment.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    (<span class=\"keyword\">void</span>)UnsetEnv(ENV_ENTRY);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> GAMMA</span></span><br><span class=\"line\">    (<span class=\"keyword\">void</span>)UnsetEnv(SPLASH_FILE_ENV_ENTRY);</span><br><span class=\"line\">    (<span class=\"keyword\">void</span>)UnsetEnv(SPLASH_JAR_ENV_ENTRY);</span><br><span class=\"line\"></span><br><span class=\"line\">    JLI_MemFree(splash_jar_entry);</span><br><span class=\"line\">    JLI_MemFree(splash_file_entry);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * 指定线程大小</span></span><br><span class=\"line\"><span class=\"comment\">     * If user doesn't specify stack size, check if VM has a preference.</span></span><br><span class=\"line\"><span class=\"comment\">     * Note that HotSpot no longer supports JNI_VERSION_1_1 but it will</span></span><br><span class=\"line\"><span class=\"comment\">     * return its default stack size through the init args structure.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (threadStackSize == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">JDK1_1InitArgs</span> <span class=\"title\">args1_1</span>;</span></span><br><span class=\"line\">      <span class=\"built_in\">memset</span>((<span class=\"keyword\">void</span>*)&amp;args1_1, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(args1_1));</span><br><span class=\"line\">      args1_1.version = JNI_VERSION_1_1;</span><br><span class=\"line\">      ifn.GetDefaultJavaVMInitArgs(&amp;args1_1);  <span class=\"comment\">/* ignore return value */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (args1_1.javaStackSize &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">         threadStackSize = args1_1.javaStackSize;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; <span class=\"comment\">/* Create a new thread to create JVM and invoke main method */</span></span><br><span class=\"line\">      <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">JavaMainArgs</span> <span class=\"title\">args</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      args.argc = argc;</span><br><span class=\"line\">      args.argv = argv;</span><br><span class=\"line\">      args.jarfile = jarfile;</span><br><span class=\"line\">      args.classname = classname;</span><br><span class=\"line\">      args.ifn = ifn;</span><br><span class=\"line\">      <span class=\"comment\">// block当前线程并且在新线程中继续执行</span></span><br><span class=\"line\">      <span class=\"comment\">// 至于为什么在新线程中创建JVM见如下注释引用或原文https://bugs.openjdk.java.net/browse/JDK-6316197</span></span><br><span class=\"line\"><span class=\"comment\">//      Primordial thread is created by the kernel before any program/library code</span></span><br><span class=\"line\"><span class=\"comment\">//      has a chance to run. It's stack size and location can be very different</span></span><br><span class=\"line\"><span class=\"comment\">//      from other threads created by the application. Creating JVM from primordial</span></span><br><span class=\"line\"><span class=\"comment\">//      thread and later running Java code in the primordial thread introduced</span></span><br><span class=\"line\"><span class=\"comment\">//      many problems:</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      1. On Windows primordial thread stack size is controlled by PE header in</span></span><br><span class=\"line\"><span class=\"comment\">//         the executable. There is no way for user to change it dynamically, which</span></span><br><span class=\"line\"><span class=\"comment\">//         means -Xss does not work for primordial thread.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      2. On Solaris/Linux, primordial thread stack size is controlled by ulimit -s,</span></span><br><span class=\"line\"><span class=\"comment\">//         which is usually very large (8M). To compensate for that we set guard</span></span><br><span class=\"line\"><span class=\"comment\">//         page in the middle of stack to artificially reduce the stack size. However,</span></span><br><span class=\"line\"><span class=\"comment\">//         this may interfere with native applications.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      3. Setting guard page for primordial thread is dangerous. Unlike other</span></span><br><span class=\"line\"><span class=\"comment\">//         threads, primordial thread stack can grow on demand. getrlimit()</span></span><br><span class=\"line\"><span class=\"comment\">//         tells VM the ulimit value which is the upper limit but not necessarily</span></span><br><span class=\"line\"><span class=\"comment\">//         the actual stack size. What could happen is that VM sets up the guard</span></span><br><span class=\"line\"><span class=\"comment\">//         at the theoretical limit, but because the program doesn't really use</span></span><br><span class=\"line\"><span class=\"comment\">//         that much stack, the unused space is reused for other purposes (e.g. malloc)</span></span><br><span class=\"line\"><span class=\"comment\">//         by the OS (this reuse won't occur with other threads). We ended up having</span></span><br><span class=\"line\"><span class=\"comment\">//         some C heap inserted between stack and its guard page.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      4. On Linux VM bangs stack address below current SP to check for stack overflows.</span></span><br><span class=\"line\"><span class=\"comment\">//         This will trigger SEGV's if it happens in primordial thread due to a security</span></span><br><span class=\"line\"><span class=\"comment\">//         feature built into the kernel. Linux VM gets around the problem by manually</span></span><br><span class=\"line\"><span class=\"comment\">//         expanding the stack. However when VM is expanding the stack, for a very short</span></span><br><span class=\"line\"><span class=\"comment\">//         period the available stack space will be reduced to just 1 page. If a signal</span></span><br><span class=\"line\"><span class=\"comment\">//         is delivered in that window, VM could end up without space to handle the signal.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      5. Some Linux kernel randomizes the starting stack address for primordial thread</span></span><br><span class=\"line\"><span class=\"comment\">//         both for stack coloring and exec-shield, but it won't tell the application.</span></span><br><span class=\"line\"><span class=\"comment\">//         This makes it impossible to reliably detect stack location and size in primordial</span></span><br><span class=\"line\"><span class=\"comment\">//         thread. VM needs the information to correctly handle stack overflows. We do</span></span><br><span class=\"line\"><span class=\"comment\">//         have some cushion which is enough most of the time, but as shown in bug reports</span></span><br><span class=\"line\"><span class=\"comment\">//         people do hit crashes because of this.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      6. On Linux there is no thr_main() equivalent that can tell if current thread</span></span><br><span class=\"line\"><span class=\"comment\">//         is primordial thread, makes it even harder to have special code to handle</span></span><br><span class=\"line\"><span class=\"comment\">//         primordial thread.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      I'm sure there are other issues that I didn't cover in the list. Basically</span></span><br><span class=\"line\"><span class=\"comment\">//      primordial thread has been a constant source of runtime bugs.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      This proposal calls for java launcher to stop calling JNI_CreateJavaVM from</span></span><br><span class=\"line\"><span class=\"comment\">//      primordial thread. Instead, it can create a new thread and move all invocation</span></span><br><span class=\"line\"><span class=\"comment\">//      code to the new thread. Primordial thread simply waits for the new thread</span></span><br><span class=\"line\"><span class=\"comment\">//      to return and then it can terminate the process with the same exit value returned</span></span><br><span class=\"line\"><span class=\"comment\">//      by the new thread. With this change we won't see any of the above problems</span></span><br><span class=\"line\"><span class=\"comment\">//      as long as the application is started by a standard Sun launcher.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      The above mentioned will still exist if VM is invoked from natvie application.</span></span><br><span class=\"line\"><span class=\"comment\">//      Which means we have to keep all current VM workarounds for primordial thread,</span></span><br><span class=\"line\"><span class=\"comment\">//      and probably need to add more. But reliability wise this is still significantly</span></span><br><span class=\"line\"><span class=\"comment\">//      better as most people are using standard launcher. Also, unlike standard java</span></span><br><span class=\"line\"><span class=\"comment\">//      launcher, customers have full control of native launcher. For example, if they</span></span><br><span class=\"line\"><span class=\"comment\">//      wish to use larger stack on Windows, they could simply rebuild their launcher</span></span><br><span class=\"line\"><span class=\"comment\">//      with larger stack size.</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> ContinueInNewThread(JavaMain, threadStackSize, (<span class=\"keyword\">void</span>*)&amp;args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> JNICALL</span><br><span class=\"line\">JavaMain(<span class=\"keyword\">void</span> * _args)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">JavaMainArgs</span> *<span class=\"title\">args</span> = (<span class=\"title\">struct</span> <span class=\"title\">JavaMainArgs</span> *)_<span class=\"title\">args</span>;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> argc = args-&gt;argc;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> **argv = args-&gt;argv;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *jarfile = args-&gt;jarfile;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *classname = args-&gt;classname;</span><br><span class=\"line\">    InvocationFunctions ifn = args-&gt;ifn;</span><br><span class=\"line\"></span><br><span class=\"line\">    JavaVM *vm = <span class=\"number\">0</span>;</span><br><span class=\"line\">    JNIEnv *env = <span class=\"number\">0</span>;</span><br><span class=\"line\">    jstring mainClassName;</span><br><span class=\"line\">    jclass mainClass;</span><br><span class=\"line\">    jmethodID mainID;</span><br><span class=\"line\">    jobjectArray mainArgs;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">    jlong start, end;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * Error message to print or display; by default the message will</span></span><br><span class=\"line\"><span class=\"comment\">     * only be displayed in a window.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> * message = <span class=\"string\">\"Fatal exception occurred.  Program will exit.\"</span>;</span><br><span class=\"line\">    jboolean messageDest = JNI_FALSE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Initialize the virtual machine */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_launcher_debug)</span><br><span class=\"line\">        start = CounterGet();</span><br><span class=\"line\">    <span class=\"comment\">// ================================</span></span><br><span class=\"line\">    <span class=\"comment\">// 开始进行虚拟机初始化，此方法内部调用了JNI_CreateJavaVM，</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里做的事情非常之多，也是JVM启动的精华部分</span></span><br><span class=\"line\">    <span class=\"comment\">// 由于这部分内容甚多，所以在下篇文章中介绍</span></span><br><span class=\"line\">    <span class=\"comment\">// ================================</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!InitializeJVM(&amp;vm, &amp;env, &amp;ifn)) &#123;</span><br><span class=\"line\">        ReportErrorMessage(<span class=\"string\">\"Could not create the Java virtual machine.\"</span>,</span><br><span class=\"line\">                           JNI_TRUE);</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 如果输入了-version或-showversion参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (printVersion || showVersion) &#123;</span><br><span class=\"line\">        PrintJavaVersion(env);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((*env)-&gt;ExceptionOccurred(env)) &#123;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (printVersion) &#123;</span><br><span class=\"line\">            ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">            message = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (showVersion) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 如果jar文件和类名均未指定则输出默认usage信息</span></span><br><span class=\"line\">    <span class=\"comment\">/* If the user specified neither a class name nor a JAR file */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (jarfile == <span class=\"number\">0</span> &amp;&amp; classname == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        PrintUsage();</span><br><span class=\"line\">        message = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> GAMMA</span></span><br><span class=\"line\">    FreeKnownVMs();  <span class=\"comment\">/* after last possible PrintUsage() */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_launcher_debug) &#123;</span><br><span class=\"line\">        end   = CounterGet();</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%ld micro seconds to InitializeJVM\\n\"</span>,</span><br><span class=\"line\">               (<span class=\"keyword\">long</span>)(jint)Counter2Micros(end-start));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* At this stage, argc/argv have the applications' arguments */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_launcher_debug) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Main-Class is '%s'\\n\"</span>, classname ? classname : <span class=\"string\">\"\"</span>);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Apps' argc is %d\\n\"</span>, argc);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; i &lt; argc; i++) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"    argv[%2d] = '%s'\\n\"</span>, i, argv[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ret = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取应用程序的主类文件</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"comment\">// 解析jar包并加载主类文件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (jarfile != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果传入的是jar文件名称则通过调用java.util.jar.JarFile加载jar包并获取主类</span></span><br><span class=\"line\">        mainClassName = GetMainClassName(env, jarfile);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((*env)-&gt;ExceptionOccurred(env)) &#123;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mainClassName == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * format = <span class=\"string\">\"Failed to load Main-Class manifest \"</span></span><br><span class=\"line\">                                <span class=\"string\">\"attribute from\\n%s\"</span>;</span><br><span class=\"line\">          message = (<span class=\"keyword\">char</span>*)JLI_MemAlloc((<span class=\"built_in\">strlen</span>(format) + <span class=\"built_in\">strlen</span>(jarfile)) *</span><br><span class=\"line\">                                    <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>));</span><br><span class=\"line\">          <span class=\"built_in\">sprintf</span>(message, format, jarfile);</span><br><span class=\"line\">          messageDest = JNI_TRUE;</span><br><span class=\"line\">          <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        classname = (<span class=\"keyword\">char</span> *)(*env)-&gt;GetStringUTFChars(env, mainClassName, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (classname == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 加载mainClass</span></span><br><span class=\"line\">        mainClass = LoadClass(env, classname);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(mainClass == <span class=\"literal\">NULL</span>) &#123; <span class=\"comment\">/* exception occured */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * format = <span class=\"string\">\"Could not find the main class: %s. Program will exit.\"</span>;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            message = (<span class=\"keyword\">char</span> *)JLI_MemAlloc((<span class=\"built_in\">strlen</span>(format) +</span><br><span class=\"line\">                                            <span class=\"built_in\">strlen</span>(classname)) * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) );</span><br><span class=\"line\">            messageDest = JNI_TRUE;</span><br><span class=\"line\">            <span class=\"built_in\">sprintf</span>(message, format, classname);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        (*env)-&gt;ReleaseStringUTFChars(env, mainClassName, classname);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 加载主类文件</span></span><br><span class=\"line\">      mainClassName = NewPlatformString(env, classname);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (mainClassName == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * format = <span class=\"string\">\"Failed to load Main Class: %s\"</span>;</span><br><span class=\"line\">        message = (<span class=\"keyword\">char</span> *)JLI_MemAlloc((<span class=\"built_in\">strlen</span>(format) + <span class=\"built_in\">strlen</span>(classname)) *</span><br><span class=\"line\">                                   <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) );</span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(message, format, classname);</span><br><span class=\"line\">        messageDest = JNI_TRUE;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      classname = (<span class=\"keyword\">char</span> *)(*env)-&gt;GetStringUTFChars(env, mainClassName, <span class=\"number\">0</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (classname == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        ReportExceptionDescription(env);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      mainClass = LoadClass(env, classname);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(mainClass == <span class=\"literal\">NULL</span>) &#123; <span class=\"comment\">/* exception occured */</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * format = <span class=\"string\">\"Could not find the main class: %s.  Program will exit.\"</span>;</span><br><span class=\"line\">        ReportExceptionDescription(env);</span><br><span class=\"line\">        message = (<span class=\"keyword\">char</span> *)JLI_MemAlloc((<span class=\"built_in\">strlen</span>(format) +</span><br><span class=\"line\">                                        <span class=\"built_in\">strlen</span>(classname)) * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) );</span><br><span class=\"line\">        messageDest = JNI_TRUE;</span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(message, format, classname);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      (*env)-&gt;ReleaseStringUTFChars(env, mainClassName, classname);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获得主方法的ID</span></span><br><span class=\"line\">    mainID = (*env)-&gt;GetStaticMethodID(env, mainClass, <span class=\"string\">\"main\"</span>,</span><br><span class=\"line\">                                       <span class=\"string\">\"([Ljava/lang/String;)V\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mainID == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((*env)-&gt;ExceptionOccurred(env)) &#123;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          message = <span class=\"string\">\"No main method found in specified class.\"</span>;</span><br><span class=\"line\">          messageDest = JNI_TRUE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;    <span class=\"comment\">/* Make sure the main method is public */</span></span><br><span class=\"line\">        jint mods;</span><br><span class=\"line\">        jmethodID mid;</span><br><span class=\"line\">        <span class=\"comment\">// 通过反射获得main方法修饰符</span></span><br><span class=\"line\">        jobject obj = (*env)-&gt;ToReflectedMethod(env, mainClass,</span><br><span class=\"line\">                                                mainID, JNI_TRUE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>( obj == <span class=\"literal\">NULL</span>) &#123; <span class=\"comment\">/* exception occurred */</span></span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        mid =</span><br><span class=\"line\">          (*env)-&gt;GetMethodID(env,</span><br><span class=\"line\">                              (*env)-&gt;GetObjectClass(env, obj),</span><br><span class=\"line\">                              <span class=\"string\">\"getModifiers\"</span>, <span class=\"string\">\"()I\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((*env)-&gt;ExceptionOccurred(env)) &#123;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 确保是public类型</span></span><br><span class=\"line\">        mods = (*env)-&gt;CallIntMethod(env, obj, mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((mods &amp; <span class=\"number\">1</span>) == <span class=\"number\">0</span>) &#123; <span class=\"comment\">/* if (!Modifier.isPublic(mods)) ... */</span></span><br><span class=\"line\">            message = <span class=\"string\">\"Main method not public.\"</span>;</span><br><span class=\"line\">            messageDest = JNI_TRUE;</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构建参数数组</span></span><br><span class=\"line\">    mainArgs = NewPlatformStringArray(env, argv, argc);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mainArgs == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        ReportExceptionDescription(env);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 调用main方法</span></span><br><span class=\"line\">    <span class=\"comment\">/* Invoke main method. */</span></span><br><span class=\"line\">    (*env)-&gt;CallStaticVoidMethod(env, mainClass, mainID, mainArgs);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * The launcher's exit code (in the absence of calls to</span></span><br><span class=\"line\"><span class=\"comment\">     * System.exit) will be non-zero if main threw an exception.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    ret = (*env)-&gt;ExceptionOccurred(env) == <span class=\"literal\">NULL</span> ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * Detach the main thread so that it appears to have ended when</span></span><br><span class=\"line\"><span class=\"comment\">     * the application's main method exits.  This will invoke the</span></span><br><span class=\"line\"><span class=\"comment\">     * uncaught exception handler machinery if main threw an</span></span><br><span class=\"line\"><span class=\"comment\">     * exception.  An uncaught exception handler cannot change the</span></span><br><span class=\"line\"><span class=\"comment\">     * launcher's return code except by calling System.exit.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((*vm)-&gt;DetachCurrentThread(vm) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        message = <span class=\"string\">\"Could not detach main thread.\"</span>;</span><br><span class=\"line\">        messageDest = JNI_TRUE;</span><br><span class=\"line\">        ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    message = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> leave:</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * Wait for all non-daemon threads to end, then destroy the VM.</span></span><br><span class=\"line\"><span class=\"comment\">     * This will actually create a trivial new Java waiter thread</span></span><br><span class=\"line\"><span class=\"comment\">     * named \"DestroyJavaVM\", but this will be seen as a different</span></span><br><span class=\"line\"><span class=\"comment\">     * thread from the one that executed main, even though they are</span></span><br><span class=\"line\"><span class=\"comment\">     * the same C thread.  This allows mainThread.join() and</span></span><br><span class=\"line\"><span class=\"comment\">     * mainThread.isAlive() to work as expected.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    (*vm)-&gt;DestroyJavaVM(vm);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(message != <span class=\"literal\">NULL</span> &amp;&amp; !noExitErrorMessage)</span><br><span class=\"line\">      ReportErrorMessage(message, messageDest);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下篇文章将介绍JVM初始化部分。</p>\n","site":{"data":{}},"excerpt":"<p>博主在11年到12年的时候曾连续研究过十个月的JVM，读过的相关书籍包括：</p>\n<ul>\n<li><p><a href=\"https://book.douban.com/subject/1138768/\" target=\"_blank\" rel=\"noopener\">深入Java虚拟机</a><br>这本书可以说是介绍JVM内部原理的鼻祖了，于2003年出版现已绝版，不过可以再某宝买到影印版。虽然当时JDK最高仅为1.4但JVM内部的构造已大体形成，所以博主强烈推荐此书。p.s 我肯定不会告诉你这书博主看了3遍：D</p>\n</li>\n<li><p><a href=\"https://book.douban.com/subject/6522893/\" target=\"_blank\" rel=\"noopener\">深入理解Java虚拟机</a><br>国内周某人写的，鉴于博主对于国人写的书向来不怎么感兴趣还是不提了。</p>\n</li>\n</ul>\n<p>说起JVM它可以是以下三种：</p>\n<ol>\n<li>一个正在运行的Java实例</li>\n<li>Java虚拟机规范</li>\n<li>一种JVM虚拟机实现</li>\n</ol>\n<p>之前的研究基本上都是虚拟机规范和JVM参数调优层面的内容，但是总觉得有些意犹未尽所以决定深入研究一下Hotspot实现，由大部分C/C++和少量汇编代码构成，但清晰的结构和优雅的编码使其并不难读，不得不赞叹一句SUN的大师们的智慧。至于如何编译、调试OpenJDK&amp;Hotspot博主在前面的文章已经介绍过，这里便不再赘述，所以直入主题。</p>","more":"<p>让我们从Java程序主入口开始逐步分析，主入口文件位于 <code>hotspot/src/share/tools/launcher/java.c</code></p>\n<p>main方法内容如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Entry point.</span></span><br><span class=\"line\"><span class=\"comment\"> * JAVA程序主入口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">int</span></span><br><span class=\"line\">main(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> ** argv)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *jarfile = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *classname = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *s = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *main_class = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret;</span><br><span class=\"line\">    InvocationFunctions ifn;</span><br><span class=\"line\">    jlong start, end;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> jrepath[MAXPATHLEN], jvmpath[MAXPATHLEN];</span><br><span class=\"line\">    <span class=\"keyword\">char</span> ** original_argv = argv;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getenv(<span class=\"string\">\"_JAVA_LAUNCHER_DEBUG\"</span>) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        _launcher_debug = JNI_TRUE;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"----_JAVA_LAUNCHER_DEBUG----\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> GAMMA</span></span><br><span class=\"line\">    <span class=\"comment\">// 确保指定的版本正在运行</span></span><br><span class=\"line\">    SelectVersion(argc, argv, &amp;main_class);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* ifndef GAMMA */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* copy original argv */</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">      original_argv = (<span class=\"keyword\">char</span>**)JLI_MemAlloc(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>*)*(argc+<span class=\"number\">1</span>));</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; argc+<span class=\"number\">1</span>; i++)</span><br><span class=\"line\">        original_argv[i] = argv[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 创建运行环境，如检查系统使用的数据模型（32bit、64bit），获取使用的JRE路径，找到jvm.cfg解析已知的vm类型</span></span><br><span class=\"line\">    <span class=\"comment\">// 设置新的LD_LIBRARY_PATH变量</span></span><br><span class=\"line\">    CreateExecutionEnvironment(&amp;argc, &amp;argv,</span><br><span class=\"line\">                               jrepath, <span class=\"keyword\">sizeof</span>(jrepath),</span><br><span class=\"line\">                               jvmpath, <span class=\"keyword\">sizeof</span>(jvmpath),</span><br><span class=\"line\">                               original_argv);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"Using java runtime at: %s\\n\"</span>, jrepath);</span><br><span class=\"line\"></span><br><span class=\"line\">    ifn.CreateJavaVM = <span class=\"number\">0</span>;</span><br><span class=\"line\">    ifn.GetDefaultJavaVMInitArgs = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_launcher_debug)</span><br><span class=\"line\">      start = CounterGet();</span><br><span class=\"line\">    <span class=\"comment\">// 通过jvmpath找到libjvm.so 并将其JNI_CreateJavaVM和JNI_GetDefaultJavaVMInitArgs方法的</span></span><br><span class=\"line\">    <span class=\"comment\">// 符号地址返回，挂载到InvocationFunctions的CreateJavaVM和GetDefaultJavaVMInitArgs以便初始化调用</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!LoadJavaVM(jvmpath, &amp;ifn)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">exit</span>(<span class=\"number\">6</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_launcher_debug) &#123;</span><br><span class=\"line\">      end   = CounterGet();</span><br><span class=\"line\">      <span class=\"built_in\">printf</span>(<span class=\"string\">\"%ld micro seconds to LoadJavaVM\\n\"</span>,</span><br><span class=\"line\">             (<span class=\"keyword\">long</span>)(jint)Counter2Micros(end-start));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> JAVA_ARGS  <span class=\"comment\">/* javac, jar and friends. */</span></span></span><br><span class=\"line\">    progname = <span class=\"string\">\"java\"</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span>             <span class=\"comment\">/* java, oldjava, javaw and friends */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> PROGNAME</span></span><br><span class=\"line\">    progname = PROGNAME;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">    progname = *argv;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((s = <span class=\"built_in\">strrchr</span>(progname, FILE_SEPARATOR)) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        progname = s + <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* PROGNAME */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* JAVA_ARGS */</span></span></span><br><span class=\"line\">    ++argv;</span><br><span class=\"line\">    --argc;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> JAVA_ARGS</span></span><br><span class=\"line\">    <span class=\"comment\">// 转换命令行参数 如：javac -cp foo:foo/\"*\" -J-ms32m</span></span><br><span class=\"line\">    <span class=\"comment\">/* Preprocess wrapper arguments */</span></span><br><span class=\"line\">    TranslateApplicationArgs(&amp;argc, &amp;argv);</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加了三个VM选项</span></span><br><span class=\"line\"><span class=\"comment\">     * -Denv.class.patp 用户设置的CLASSPATH变量，如果CLASSPATH显式设置了tools.jar</span></span><br><span class=\"line\"><span class=\"comment\">     *                  则可以反编译VM的工具类sun.tools.*</span></span><br><span class=\"line\"><span class=\"comment\">     * -Dapplication.home 应用程序目录</span></span><br><span class=\"line\"><span class=\"comment\">     * -Djava.class.path 应用程序的类文件目录</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!AddApplicationOptions()) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Set default CLASSPATH */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((s = getenv(<span class=\"string\">\"CLASSPATH\"</span>)) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        s = <span class=\"string\">\".\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> JAVA_ARGS</span></span><br><span class=\"line\">    SetClassPath(s);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     *  解析命令行参数-cp、-version、-*path、-X*等参数</span></span><br><span class=\"line\"><span class=\"comment\">     *  Parse command line options; if the return value of</span></span><br><span class=\"line\"><span class=\"comment\">     *  ParseArguments is false, the program should exit.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!ParseArguments(&amp;argc, &amp;argv, &amp;jarfile, &amp;classname, &amp;ret, jvmpath)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">exit</span>(ret);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Override class path if -jar flag was specified */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (jarfile != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        SetClassPath(jarfile);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* set the -Dsun.java.command pseudo property */</span></span><br><span class=\"line\">    SetJavaCommandLineProp(classname, jarfile, argc, argv);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Set the -Dsun.java.launcher pseudo property */</span></span><br><span class=\"line\">    SetJavaLauncherProp();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* set the -Dsun.java.launcher.* platform properties */</span></span><br><span class=\"line\">    SetJavaLauncherPlatformProps();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> GAMMA</span></span><br><span class=\"line\">    <span class=\"comment\">/* Show the splash screen if needed */</span></span><br><span class=\"line\">    ShowSplashScreen();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * 移除环境变量防止重复执行</span></span><br><span class=\"line\"><span class=\"comment\">     * Done with all command line processing and potential re-execs so</span></span><br><span class=\"line\"><span class=\"comment\">     * clean up the environment.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    (<span class=\"keyword\">void</span>)UnsetEnv(ENV_ENTRY);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> GAMMA</span></span><br><span class=\"line\">    (<span class=\"keyword\">void</span>)UnsetEnv(SPLASH_FILE_ENV_ENTRY);</span><br><span class=\"line\">    (<span class=\"keyword\">void</span>)UnsetEnv(SPLASH_JAR_ENV_ENTRY);</span><br><span class=\"line\"></span><br><span class=\"line\">    JLI_MemFree(splash_jar_entry);</span><br><span class=\"line\">    JLI_MemFree(splash_file_entry);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * 指定线程大小</span></span><br><span class=\"line\"><span class=\"comment\">     * If user doesn't specify stack size, check if VM has a preference.</span></span><br><span class=\"line\"><span class=\"comment\">     * Note that HotSpot no longer supports JNI_VERSION_1_1 but it will</span></span><br><span class=\"line\"><span class=\"comment\">     * return its default stack size through the init args structure.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (threadStackSize == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">JDK1_1InitArgs</span> <span class=\"title\">args1_1</span>;</span></span><br><span class=\"line\">      <span class=\"built_in\">memset</span>((<span class=\"keyword\">void</span>*)&amp;args1_1, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(args1_1));</span><br><span class=\"line\">      args1_1.version = JNI_VERSION_1_1;</span><br><span class=\"line\">      ifn.GetDefaultJavaVMInitArgs(&amp;args1_1);  <span class=\"comment\">/* ignore return value */</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (args1_1.javaStackSize &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">         threadStackSize = args1_1.javaStackSize;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123; <span class=\"comment\">/* Create a new thread to create JVM and invoke main method */</span></span><br><span class=\"line\">      <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">JavaMainArgs</span> <span class=\"title\">args</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      args.argc = argc;</span><br><span class=\"line\">      args.argv = argv;</span><br><span class=\"line\">      args.jarfile = jarfile;</span><br><span class=\"line\">      args.classname = classname;</span><br><span class=\"line\">      args.ifn = ifn;</span><br><span class=\"line\">      <span class=\"comment\">// block当前线程并且在新线程中继续执行</span></span><br><span class=\"line\">      <span class=\"comment\">// 至于为什么在新线程中创建JVM见如下注释引用或原文https://bugs.openjdk.java.net/browse/JDK-6316197</span></span><br><span class=\"line\"><span class=\"comment\">//      Primordial thread is created by the kernel before any program/library code</span></span><br><span class=\"line\"><span class=\"comment\">//      has a chance to run. It's stack size and location can be very different</span></span><br><span class=\"line\"><span class=\"comment\">//      from other threads created by the application. Creating JVM from primordial</span></span><br><span class=\"line\"><span class=\"comment\">//      thread and later running Java code in the primordial thread introduced</span></span><br><span class=\"line\"><span class=\"comment\">//      many problems:</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      1. On Windows primordial thread stack size is controlled by PE header in</span></span><br><span class=\"line\"><span class=\"comment\">//         the executable. There is no way for user to change it dynamically, which</span></span><br><span class=\"line\"><span class=\"comment\">//         means -Xss does not work for primordial thread.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      2. On Solaris/Linux, primordial thread stack size is controlled by ulimit -s,</span></span><br><span class=\"line\"><span class=\"comment\">//         which is usually very large (8M). To compensate for that we set guard</span></span><br><span class=\"line\"><span class=\"comment\">//         page in the middle of stack to artificially reduce the stack size. However,</span></span><br><span class=\"line\"><span class=\"comment\">//         this may interfere with native applications.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      3. Setting guard page for primordial thread is dangerous. Unlike other</span></span><br><span class=\"line\"><span class=\"comment\">//         threads, primordial thread stack can grow on demand. getrlimit()</span></span><br><span class=\"line\"><span class=\"comment\">//         tells VM the ulimit value which is the upper limit but not necessarily</span></span><br><span class=\"line\"><span class=\"comment\">//         the actual stack size. What could happen is that VM sets up the guard</span></span><br><span class=\"line\"><span class=\"comment\">//         at the theoretical limit, but because the program doesn't really use</span></span><br><span class=\"line\"><span class=\"comment\">//         that much stack, the unused space is reused for other purposes (e.g. malloc)</span></span><br><span class=\"line\"><span class=\"comment\">//         by the OS (this reuse won't occur with other threads). We ended up having</span></span><br><span class=\"line\"><span class=\"comment\">//         some C heap inserted between stack and its guard page.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      4. On Linux VM bangs stack address below current SP to check for stack overflows.</span></span><br><span class=\"line\"><span class=\"comment\">//         This will trigger SEGV's if it happens in primordial thread due to a security</span></span><br><span class=\"line\"><span class=\"comment\">//         feature built into the kernel. Linux VM gets around the problem by manually</span></span><br><span class=\"line\"><span class=\"comment\">//         expanding the stack. However when VM is expanding the stack, for a very short</span></span><br><span class=\"line\"><span class=\"comment\">//         period the available stack space will be reduced to just 1 page. If a signal</span></span><br><span class=\"line\"><span class=\"comment\">//         is delivered in that window, VM could end up without space to handle the signal.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      5. Some Linux kernel randomizes the starting stack address for primordial thread</span></span><br><span class=\"line\"><span class=\"comment\">//         both for stack coloring and exec-shield, but it won't tell the application.</span></span><br><span class=\"line\"><span class=\"comment\">//         This makes it impossible to reliably detect stack location and size in primordial</span></span><br><span class=\"line\"><span class=\"comment\">//         thread. VM needs the information to correctly handle stack overflows. We do</span></span><br><span class=\"line\"><span class=\"comment\">//         have some cushion which is enough most of the time, but as shown in bug reports</span></span><br><span class=\"line\"><span class=\"comment\">//         people do hit crashes because of this.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      6. On Linux there is no thr_main() equivalent that can tell if current thread</span></span><br><span class=\"line\"><span class=\"comment\">//         is primordial thread, makes it even harder to have special code to handle</span></span><br><span class=\"line\"><span class=\"comment\">//         primordial thread.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      I'm sure there are other issues that I didn't cover in the list. Basically</span></span><br><span class=\"line\"><span class=\"comment\">//      primordial thread has been a constant source of runtime bugs.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      This proposal calls for java launcher to stop calling JNI_CreateJavaVM from</span></span><br><span class=\"line\"><span class=\"comment\">//      primordial thread. Instead, it can create a new thread and move all invocation</span></span><br><span class=\"line\"><span class=\"comment\">//      code to the new thread. Primordial thread simply waits for the new thread</span></span><br><span class=\"line\"><span class=\"comment\">//      to return and then it can terminate the process with the same exit value returned</span></span><br><span class=\"line\"><span class=\"comment\">//      by the new thread. With this change we won't see any of the above problems</span></span><br><span class=\"line\"><span class=\"comment\">//      as long as the application is started by a standard Sun launcher.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//      The above mentioned will still exist if VM is invoked from natvie application.</span></span><br><span class=\"line\"><span class=\"comment\">//      Which means we have to keep all current VM workarounds for primordial thread,</span></span><br><span class=\"line\"><span class=\"comment\">//      and probably need to add more. But reliability wise this is still significantly</span></span><br><span class=\"line\"><span class=\"comment\">//      better as most people are using standard launcher. Also, unlike standard java</span></span><br><span class=\"line\"><span class=\"comment\">//      launcher, customers have full control of native launcher. For example, if they</span></span><br><span class=\"line\"><span class=\"comment\">//      wish to use larger stack on Windows, they could simply rebuild their launcher</span></span><br><span class=\"line\"><span class=\"comment\">//      with larger stack size.</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> ContinueInNewThread(JavaMain, threadStackSize, (<span class=\"keyword\">void</span>*)&amp;args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> JNICALL</span><br><span class=\"line\">JavaMain(<span class=\"keyword\">void</span> * _args)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">JavaMainArgs</span> *<span class=\"title\">args</span> = (<span class=\"title\">struct</span> <span class=\"title\">JavaMainArgs</span> *)_<span class=\"title\">args</span>;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> argc = args-&gt;argc;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> **argv = args-&gt;argv;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *jarfile = args-&gt;jarfile;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> *classname = args-&gt;classname;</span><br><span class=\"line\">    InvocationFunctions ifn = args-&gt;ifn;</span><br><span class=\"line\"></span><br><span class=\"line\">    JavaVM *vm = <span class=\"number\">0</span>;</span><br><span class=\"line\">    JNIEnv *env = <span class=\"number\">0</span>;</span><br><span class=\"line\">    jstring mainClassName;</span><br><span class=\"line\">    jclass mainClass;</span><br><span class=\"line\">    jmethodID mainID;</span><br><span class=\"line\">    jobjectArray mainArgs;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">    jlong start, end;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * Error message to print or display; by default the message will</span></span><br><span class=\"line\"><span class=\"comment\">     * only be displayed in a window.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">char</span> * message = <span class=\"string\">\"Fatal exception occurred.  Program will exit.\"</span>;</span><br><span class=\"line\">    jboolean messageDest = JNI_FALSE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Initialize the virtual machine */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_launcher_debug)</span><br><span class=\"line\">        start = CounterGet();</span><br><span class=\"line\">    <span class=\"comment\">// ================================</span></span><br><span class=\"line\">    <span class=\"comment\">// 开始进行虚拟机初始化，此方法内部调用了JNI_CreateJavaVM，</span></span><br><span class=\"line\">    <span class=\"comment\">// 这里做的事情非常之多，也是JVM启动的精华部分</span></span><br><span class=\"line\">    <span class=\"comment\">// 由于这部分内容甚多，所以在下篇文章中介绍</span></span><br><span class=\"line\">    <span class=\"comment\">// ================================</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!InitializeJVM(&amp;vm, &amp;env, &amp;ifn)) &#123;</span><br><span class=\"line\">        ReportErrorMessage(<span class=\"string\">\"Could not create the Java virtual machine.\"</span>,</span><br><span class=\"line\">                           JNI_TRUE);</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 如果输入了-version或-showversion参数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (printVersion || showVersion) &#123;</span><br><span class=\"line\">        PrintJavaVersion(env);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((*env)-&gt;ExceptionOccurred(env)) &#123;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (printVersion) &#123;</span><br><span class=\"line\">            ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">            message = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (showVersion) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">fprintf</span>(<span class=\"built_in\">stderr</span>, <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 如果jar文件和类名均未指定则输出默认usage信息</span></span><br><span class=\"line\">    <span class=\"comment\">/* If the user specified neither a class name nor a JAR file */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (jarfile == <span class=\"number\">0</span> &amp;&amp; classname == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        PrintUsage();</span><br><span class=\"line\">        message = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> GAMMA</span></span><br><span class=\"line\">    FreeKnownVMs();  <span class=\"comment\">/* after last possible PrintUsage() */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_launcher_debug) &#123;</span><br><span class=\"line\">        end   = CounterGet();</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%ld micro seconds to InitializeJVM\\n\"</span>,</span><br><span class=\"line\">               (<span class=\"keyword\">long</span>)(jint)Counter2Micros(end-start));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* At this stage, argc/argv have the applications' arguments */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (_launcher_debug) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Main-Class is '%s'\\n\"</span>, classname ? classname : <span class=\"string\">\"\"</span>);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Apps' argc is %d\\n\"</span>, argc);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; i &lt; argc; i++) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"    argv[%2d] = '%s'\\n\"</span>, i, argv[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ret = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取应用程序的主类文件</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"comment\">// 解析jar包并加载主类文件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (jarfile != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果传入的是jar文件名称则通过调用java.util.jar.JarFile加载jar包并获取主类</span></span><br><span class=\"line\">        mainClassName = GetMainClassName(env, jarfile);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((*env)-&gt;ExceptionOccurred(env)) &#123;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mainClassName == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * format = <span class=\"string\">\"Failed to load Main-Class manifest \"</span></span><br><span class=\"line\">                                <span class=\"string\">\"attribute from\\n%s\"</span>;</span><br><span class=\"line\">          message = (<span class=\"keyword\">char</span>*)JLI_MemAlloc((<span class=\"built_in\">strlen</span>(format) + <span class=\"built_in\">strlen</span>(jarfile)) *</span><br><span class=\"line\">                                    <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>));</span><br><span class=\"line\">          <span class=\"built_in\">sprintf</span>(message, format, jarfile);</span><br><span class=\"line\">          messageDest = JNI_TRUE;</span><br><span class=\"line\">          <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        classname = (<span class=\"keyword\">char</span> *)(*env)-&gt;GetStringUTFChars(env, mainClassName, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (classname == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 加载mainClass</span></span><br><span class=\"line\">        mainClass = LoadClass(env, classname);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(mainClass == <span class=\"literal\">NULL</span>) &#123; <span class=\"comment\">/* exception occured */</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * format = <span class=\"string\">\"Could not find the main class: %s. Program will exit.\"</span>;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            message = (<span class=\"keyword\">char</span> *)JLI_MemAlloc((<span class=\"built_in\">strlen</span>(format) +</span><br><span class=\"line\">                                            <span class=\"built_in\">strlen</span>(classname)) * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) );</span><br><span class=\"line\">            messageDest = JNI_TRUE;</span><br><span class=\"line\">            <span class=\"built_in\">sprintf</span>(message, format, classname);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        (*env)-&gt;ReleaseStringUTFChars(env, mainClassName, classname);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 加载主类文件</span></span><br><span class=\"line\">      mainClassName = NewPlatformString(env, classname);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (mainClassName == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * format = <span class=\"string\">\"Failed to load Main Class: %s\"</span>;</span><br><span class=\"line\">        message = (<span class=\"keyword\">char</span> *)JLI_MemAlloc((<span class=\"built_in\">strlen</span>(format) + <span class=\"built_in\">strlen</span>(classname)) *</span><br><span class=\"line\">                                   <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) );</span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(message, format, classname);</span><br><span class=\"line\">        messageDest = JNI_TRUE;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      classname = (<span class=\"keyword\">char</span> *)(*env)-&gt;GetStringUTFChars(env, mainClassName, <span class=\"number\">0</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (classname == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        ReportExceptionDescription(env);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      mainClass = LoadClass(env, classname);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(mainClass == <span class=\"literal\">NULL</span>) &#123; <span class=\"comment\">/* exception occured */</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * format = <span class=\"string\">\"Could not find the main class: %s.  Program will exit.\"</span>;</span><br><span class=\"line\">        ReportExceptionDescription(env);</span><br><span class=\"line\">        message = (<span class=\"keyword\">char</span> *)JLI_MemAlloc((<span class=\"built_in\">strlen</span>(format) +</span><br><span class=\"line\">                                        <span class=\"built_in\">strlen</span>(classname)) * <span class=\"keyword\">sizeof</span>(<span class=\"keyword\">char</span>) );</span><br><span class=\"line\">        messageDest = JNI_TRUE;</span><br><span class=\"line\">        <span class=\"built_in\">sprintf</span>(message, format, classname);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      (*env)-&gt;ReleaseStringUTFChars(env, mainClassName, classname);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 获得主方法的ID</span></span><br><span class=\"line\">    mainID = (*env)-&gt;GetStaticMethodID(env, mainClass, <span class=\"string\">\"main\"</span>,</span><br><span class=\"line\">                                       <span class=\"string\">\"([Ljava/lang/String;)V\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mainID == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((*env)-&gt;ExceptionOccurred(env)) &#123;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          message = <span class=\"string\">\"No main method found in specified class.\"</span>;</span><br><span class=\"line\">          messageDest = JNI_TRUE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;    <span class=\"comment\">/* Make sure the main method is public */</span></span><br><span class=\"line\">        jint mods;</span><br><span class=\"line\">        jmethodID mid;</span><br><span class=\"line\">        <span class=\"comment\">// 通过反射获得main方法修饰符</span></span><br><span class=\"line\">        jobject obj = (*env)-&gt;ToReflectedMethod(env, mainClass,</span><br><span class=\"line\">                                                mainID, JNI_TRUE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>( obj == <span class=\"literal\">NULL</span>) &#123; <span class=\"comment\">/* exception occurred */</span></span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        mid =</span><br><span class=\"line\">          (*env)-&gt;GetMethodID(env,</span><br><span class=\"line\">                              (*env)-&gt;GetObjectClass(env, obj),</span><br><span class=\"line\">                              <span class=\"string\">\"getModifiers\"</span>, <span class=\"string\">\"()I\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((*env)-&gt;ExceptionOccurred(env)) &#123;</span><br><span class=\"line\">            ReportExceptionDescription(env);</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 确保是public类型</span></span><br><span class=\"line\">        mods = (*env)-&gt;CallIntMethod(env, obj, mid);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((mods &amp; <span class=\"number\">1</span>) == <span class=\"number\">0</span>) &#123; <span class=\"comment\">/* if (!Modifier.isPublic(mods)) ... */</span></span><br><span class=\"line\">            message = <span class=\"string\">\"Main method not public.\"</span>;</span><br><span class=\"line\">            messageDest = JNI_TRUE;</span><br><span class=\"line\">            <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构建参数数组</span></span><br><span class=\"line\">    mainArgs = NewPlatformStringArray(env, argv, argc);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mainArgs == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        ReportExceptionDescription(env);</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 调用main方法</span></span><br><span class=\"line\">    <span class=\"comment\">/* Invoke main method. */</span></span><br><span class=\"line\">    (*env)-&gt;CallStaticVoidMethod(env, mainClass, mainID, mainArgs);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * The launcher's exit code (in the absence of calls to</span></span><br><span class=\"line\"><span class=\"comment\">     * System.exit) will be non-zero if main threw an exception.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    ret = (*env)-&gt;ExceptionOccurred(env) == <span class=\"literal\">NULL</span> ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * Detach the main thread so that it appears to have ended when</span></span><br><span class=\"line\"><span class=\"comment\">     * the application's main method exits.  This will invoke the</span></span><br><span class=\"line\"><span class=\"comment\">     * uncaught exception handler machinery if main threw an</span></span><br><span class=\"line\"><span class=\"comment\">     * exception.  An uncaught exception handler cannot change the</span></span><br><span class=\"line\"><span class=\"comment\">     * launcher's return code except by calling System.exit.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((*vm)-&gt;DetachCurrentThread(vm) != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        message = <span class=\"string\">\"Could not detach main thread.\"</span>;</span><br><span class=\"line\">        messageDest = JNI_TRUE;</span><br><span class=\"line\">        ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">goto</span> leave;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    message = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> leave:</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * Wait for all non-daemon threads to end, then destroy the VM.</span></span><br><span class=\"line\"><span class=\"comment\">     * This will actually create a trivial new Java waiter thread</span></span><br><span class=\"line\"><span class=\"comment\">     * named \"DestroyJavaVM\", but this will be seen as a different</span></span><br><span class=\"line\"><span class=\"comment\">     * thread from the one that executed main, even though they are</span></span><br><span class=\"line\"><span class=\"comment\">     * the same C thread.  This allows mainThread.join() and</span></span><br><span class=\"line\"><span class=\"comment\">     * mainThread.isAlive() to work as expected.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    (*vm)-&gt;DestroyJavaVM(vm);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(message != <span class=\"literal\">NULL</span> &amp;&amp; !noExitErrorMessage)</span><br><span class=\"line\">      ReportErrorMessage(message, messageDest);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下篇文章将介绍JVM初始化部分。</p>"},{"title":"【Hotspot源码分析】从Hotpost源码角度深入分析Java程序启动过程-初始化","date":"2014-11-30T20:20:08.000Z","_content":"\n接上篇文章从Hotpost源码角度深入分析Java程序启动过程-创建 ，本文将继续介绍JVM启动过程的初始化部分。\n\n在上篇文章中在执行LoadJavaVM方法的时候将libjvm.so内的方法`JNI_CreateJavaVM`和`JNI_GetDefaultJavaVMInitArgs`符号引用挂载到了结构体`InvocationFunctions`上，并且在执行InitializeJVM方法的时候进行了调用。\n\n这里执行了JNI调用`JNI_CreateJavaVM`，文件位于`hotspot/src/share/vm/prims/jni.cpp`。方法内容如下：\n\n```c\n_JNI_IMPORT_OR_EXPORT_ jint JNICALL JNI_CreateJavaVM(JavaVM **vm, void **penv, void *args) {\n\n   // 略去部分非重要内容\n\n  /**\n   * Certain errors during initialization are recoverable and do not\n   * prevent this method from being called again at a later time\n   * (perhaps with different arguments).  However, at a certain\n   * point during initialization if an error occurs we cannot allow\n   * this function to be called again (or it will crash).  In those\n   * situations, the 'canTryAgain' flag is set to false, which atomically\n   * sets safe_to_recreate_vm to 1, such that any new call to\n   * JNI_CreateJavaVM will immediately fail using the above logic.\n   */\n  bool can_try_again = true;\n  //========================================\n  // 通过Threads模块初始化VM并创建VM线程\n  //========================================\n  result = Threads::create_vm((JavaVMInitArgs*) args, &can_try_again);\n  if (result == JNI_OK) {\n    JavaThread *thread = JavaThread::current();\n    /* thread is thread_in_vm here */\n    *vm = (JavaVM *)(&main_vm);\n    *(JNIEnv**)penv = thread->jni_environment();\n\n    // Tracks the time application was running before GC\n    RuntimeService::record_application_start();\n\n    // Notify JVMTI\n    if (JvmtiExport::should_post_thread_life()) {\n       JvmtiExport::post_thread_start(thread);\n    }\n\n    EventThreadStart event;\n    if (event.should_commit()) {\n      event.set_javalangthread(java_lang_Thread::thread_id(thread->threadObj()));\n      event.commit();\n    }\n\n    // 略去部分内容\n\n  return result;\n}\n```\n\n<!-- more -->\n\n这里调用了`hotspot/src/share/vm/runtime/thread.cpp`的`create_vm`方法：\n\n```c\njint Threads::create_vm(JavaVMInitArgs* args, bool* canTryAgain) {\n\n  extern void JDK_Version_init();\n\n  // Check version\n  if (!is_supported_jni_version(args->version)) return JNI_EVERSION;\n\n  // Initialize the output stream module\n  // 初始化输出流\n  ostream_init();\n\n  // Process java launcher properties.\n  // 处理Java启动参数，如-Dsun.java.launcher*\n  Arguments::process_sun_java_launcher_properties(args);\n\n  // Initialize the os module before using TLS\n  // 初始化操作系统模块，如页大小，处理器数量，系统时钟等\n  os::init();\n\n  // Initialize system properties.\n  // 初始化系统属性，其中分为【可读属性】和【可读写属性】\n  // 可读属性：\n  // java.vm.specification.name\n  // java.vm.version\n  // java.vm.name\n  // java.vm.info\n  // 可读写属性：\n  // java.ext.dirs\n  // java.endorsed.dirs\n  // sun.boot.library.path\n  // java.library.path\n  // java.home\n  // sun.boot.class.path\n  // java.class.path\n  Arguments::init_system_properties();\n\n  // So that JDK version can be used as a discrimintor when parsing arguments\n  JDK_Version_init();\n\n  // Update/Initialize System properties after JDK version number is known\n  // 设置java.vm.specification.vendor属性（1.6之前是Sun Microsystems Inc. 1.7之后是Oracle Corporation）\n  // 设置java.vm.specification.version和java.vm.vendor属性\n  Arguments::init_version_specific_system_properties();\n\n  // Parse arguments\n  // 解析启动参数，如-XX:Flags=、-XX:+PrintVMOptions、-XX:+PrintFlagsInitial etc.\n  jint parse_result = Arguments::parse(args);\n  if (parse_result != JNI_OK) return parse_result;\n\n  if (PauseAtStartup) {\n    os::pause();\n  }\n\n#ifndef USDT2\n  HS_DTRACE_PROBE(hotspot, vm__init__begin);\n#else /* USDT2 */\n  HOTSPOT_VM_INIT_BEGIN();\n#endif /* USDT2 */\n\n  // Record VM creation timing statistics\n  TraceVmCreationTime create_vm_timer;\n  create_vm_timer.start();\n\n  // Timing (must come after argument parsing)\n  TraceTime timer(\"Create VM\", TraceStartupTime);\n\n  // Initialize the os module after parsing the args\n  jint os_init_2_result = os::init_2();\n  if (os_init_2_result != JNI_OK) return os_init_2_result;\n\n  // intialize TLS\n  ThreadLocalStorage::init();\n\n  // Bootstrap native memory tracking, so it can start recording memory\n  // activities before worker thread is started. This is the first phase\n  // of bootstrapping, VM is currently running in single-thread mode.\n  MemTracker::bootstrap_single_thread();\n\n  // Initialize output stream logging\n  // 初始化GC日志输出流，用来处理-Xloggc参数\n  ostream_init_log();\n\n  // Convert -Xrun to -agentlib: if there is no JVM_OnLoad\n  // Must be before create_vm_init_agents()\n  if (Arguments::init_libraries_at_startup()) {\n    convert_vm_init_libraries_to_agents();\n  }\n\n  // Launch -agentlib/-agentpath and converted -Xrun agents\n  // 加载agent库\n  if (Arguments::init_agents_at_startup()) {\n    create_vm_init_agents();\n  }\n\n  // Initialize Threads state\n  _thread_list = NULL;\n  _number_of_threads = 0;\n  _number_of_non_daemon_threads = 0;\n\n  // Initialize global data structures and create system classes in heap\n  // 初始化全局数据数据结构及系统类，包括：\n  // 初始化Java基础类型\n  // 初始化时间队列\n  // 初始化锁\n  // 初始化chunkpool\n  // 初始化性能数据统计模块\n  vm_init_globals();\n\n  // Attach the main thread to this os thread\n  JavaThread* main_thread = new JavaThread();\n  main_thread->set_thread_state(_thread_in_vm);\n  main_thread->record_stack_base_and_size();\n  main_thread->initialize_thread_local_storage();\n\n  main_thread->set_active_handles(JNIHandleBlock::allocate_block());\n\n  if (!main_thread->set_as_starting_thread()) {\n    vm_shutdown_during_initialization(\n      \"Failed necessary internal allocation. Out of swap space\");\n    delete main_thread;\n    *canTryAgain = false; // don't let caller call JNI_CreateJavaVM again\n    return JNI_ENOMEM;\n  }\n\n  // Enable guard page *after* os::create_main_thread(), otherwise it would\n  // crash Linux VM, see notes in os_linux.cpp.\n  main_thread->create_stack_guard_pages();\n\n  // Initialize Java-Level synchronization subsystem\n  ObjectMonitor::Initialize() ;\n\n  // Second phase of bootstrapping, VM is about entering multi-thread mode\n  MemTracker::bootstrap_multi_thread();\n\n  // Initialize global modules\n  // ========================================\n  // IMPORTANT!!! 初始化全局模块\n  // ========================================\n  jint status = init_globals();\n  if (status != JNI_OK) {\n    delete main_thread;\n    *canTryAgain = false; // don't let caller call JNI_CreateJavaVM again\n    return status;\n  }\n\n  // Should be done after the heap is fully created\n  main_thread->cache_global_variables();\n\n  HandleMark hm;\n\n  { MutexLocker mu(Threads_lock);\n    Threads::add(main_thread);\n  }\n\n  // Any JVMTI raw monitors entered in onload will transition into\n  // real raw monitor. VM is setup enough here for raw monitor enter.\n  JvmtiExport::transition_pending_onload_raw_monitors();\n\n  // Fully start NMT\n  MemTracker::start();\n\n  // Create the VMThread\n  { TraceTime timer(\"Start VMThread\", TraceStartupTime);\n    VMThread::create();\n    Thread* vmthread = VMThread::vm_thread();\n\n    if (!os::create_thread(vmthread, os::vm_thread))\n      vm_exit_during_initialization(\"Cannot create VM thread. Out of system resources.\");\n\n    // Wait for the VM thread to become ready, and VMThread::run to initialize\n    // Monitors can have spurious returns, must always check another state flag\n    {\n      MutexLocker ml(Notify_lock);\n      os::start_thread(vmthread);\n      while (vmthread->active_handles() == NULL) {\n        Notify_lock->wait();\n      }\n    }\n  }\n\n  assert (Universe::is_fully_initialized(), \"not initialized\");\n  if (VerifyBeforeGC && VerifyGCStartAt == 0) {\n    Universe::heap()->prepare_for_verify();\n    Universe::verify();   // make sure we're starting with a clean slate\n  }\n\n  EXCEPTION_MARK;\n\n  // At this point, the Universe is initialized, but we have not executed\n  // any byte code.  Now is a good time (the only time) to dump out the\n  // internal state of the JVM for sharing.\n\n  if (DumpSharedSpaces) {\n    Universe::heap()->preload_and_dump(CHECK_0);\n    ShouldNotReachHere();\n  }\n\n  // Always call even when there are not JVMTI environments yet, since environments\n  // may be attached late and JVMTI must track phases of VM execution\n  JvmtiExport::enter_start_phase();\n\n  // Notify JVMTI agents that VM has started (JNI is up) - nop if no agents.\n  JvmtiExport::post_vm_start();\n\n  {\n    TraceTime timer(\"Initialize java.lang classes\", TraceStartupTime);\n\n    if (EagerXrunInit && Arguments::init_libraries_at_startup()) {\n      create_vm_init_libraries();\n    }\n\n    if (InitializeJavaLangString) {\n      initialize_class(vmSymbols::java_lang_String(), CHECK_0);\n    } else {\n      warning(\"java.lang.String not initialized\");\n    }\n\n    // Initialize java_lang.System (needed before creating the thread)\n    if (InitializeJavaLangSystem) {\n      initialize_class(vmSymbols::java_lang_System(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_ThreadGroup(), CHECK_0);\n      Handle thread_group = create_initial_thread_group(CHECK_0);\n      Universe::set_main_thread_group(thread_group());\n      initialize_class(vmSymbols::java_lang_Thread(), CHECK_0);\n      oop thread_object = create_initial_thread(thread_group, main_thread, CHECK_0);\n      main_thread->set_threadObj(thread_object);\n      // Set thread status to running since main thread has\n      // been started and running.\n      java_lang_Thread::set_thread_status(thread_object,\n                                          java_lang_Thread::RUNNABLE);\n\n      // The VM preresolve methods to these classes. Make sure that get initialized\n      initialize_class(vmSymbols::java_lang_reflect_Method(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_ref_Finalizer(),  CHECK_0);\n      // The VM creates & returns objects of this class. Make sure it's initialized.\n      initialize_class(vmSymbols::java_lang_Class(), CHECK_0);\n      call_initializeSystemClass(CHECK_0);\n\n      // get the Java runtime name after java.lang.System is initialized\n      JDK_Version::set_runtime_name(get_java_runtime_name(THREAD));\n      JDK_Version::set_runtime_version(get_java_runtime_version(THREAD));\n    } else {\n      warning(\"java.lang.System not initialized\");\n    }\n\n    // an instance of OutOfMemory exception has been allocated earlier\n    if (InitializeJavaLangExceptionsErrors) {\n      initialize_class(vmSymbols::java_lang_OutOfMemoryError(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_NullPointerException(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_ClassCastException(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_ArrayStoreException(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_ArithmeticException(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_StackOverflowError(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_IllegalMonitorStateException(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_IllegalArgumentException(), CHECK_0);\n    } else {\n      warning(\"java.lang.OutOfMemoryError has not been initialized\");\n      warning(\"java.lang.NullPointerException has not been initialized\");\n      warning(\"java.lang.ClassCastException has not been initialized\");\n      warning(\"java.lang.ArrayStoreException has not been initialized\");\n      warning(\"java.lang.ArithmeticException has not been initialized\");\n      warning(\"java.lang.StackOverflowError has not been initialized\");\n      warning(\"java.lang.IllegalArgumentException has not been initialized\");\n    }\n  }\n\n\n  initialize_class(vmSymbols::java_lang_Compiler(), CHECK_0);\n\n  reset_vm_info_property(CHECK_0);\n\n  quicken_jni_functions();\n\n  // Must be run after init_ft which initializes ft_enabled\n  if (TRACE_INITIALIZE() != JNI_OK) {\n    vm_exit_during_initialization(\"Failed to initialize tracing backend\");\n  }\n\n  // Set flag that basic initialization has completed. Used by exceptions and various\n  // debug stuff, that does not work until all basic classes have been initialized.\n  set_init_completed();\n\n#ifndef USDT2\n  HS_DTRACE_PROBE(hotspot, vm__init__end);\n#else /* USDT2 */\n  HOTSPOT_VM_INIT_END();\n#endif /* USDT2 */\n\n  // record VM initialization completion time\n  // 向VM管理模块发送初始化完成信号\n  Management::record_vm_init_completed();\n\n  // Compute system loader. Note that this has to occur after set_init_completed, since\n  // valid exceptions may be thrown in the process.\n  // Note that we do not use CHECK_0 here since we are inside an EXCEPTION_MARK and\n  // set_init_completed has just been called, causing exceptions not to be shortcut\n  // anymore. We call vm_exit_during_initialization directly instead.\n  // 载入classloader\n  SystemDictionary::compute_java_system_loader(THREAD);\n  if (HAS_PENDING_EXCEPTION) {\n    vm_exit_during_initialization(Handle(THREAD, PENDING_EXCEPTION));\n  }\n\n#ifndef SERIALGC\n  // Support for ConcurrentMarkSweep. This should be cleaned up\n  // and better encapsulated. The ugly nested if test would go away\n  // once things are properly refactored. XXX YSR\n  if (UseConcMarkSweepGC || UseG1GC) {\n    if (UseConcMarkSweepGC) {\n      ConcurrentMarkSweepThread::makeSurrogateLockerThread(THREAD);\n    } else {\n      ConcurrentMarkThread::makeSurrogateLockerThread(THREAD);\n    }\n    if (HAS_PENDING_EXCEPTION) {\n      vm_exit_during_initialization(Handle(THREAD, PENDING_EXCEPTION));\n    }\n  }\n#endif // SERIALGC\n\n  // Always call even when there are not JVMTI environments yet, since environments\n  // may be attached late and JVMTI must track phases of VM execution\n  JvmtiExport::enter_live_phase();\n\n  // Signal Dispatcher needs to be started before VMInit event is posted\n  // 启动一个叫做“信号分发器”的线程用来处理进程间的信号\n  // 比如通过jstack获取一个jvm实例的栈信息\n  os::signal_init();\n\n  // Start Attach Listener if +StartAttachListener or it can't be started lazily\n  if (!DisableAttachMechanism) {\n    AttachListener::vm_start();\n    if (StartAttachListener || AttachListener::init_at_startup()) {\n      AttachListener::init();\n    }\n  }\n\n  // Launch -Xrun agents\n  // Must be done in the JVMTI live phase so that for backward compatibility the JDWP\n  // back-end can launch with -Xdebug -Xrunjdwp.\n  if (!EagerXrunInit && Arguments::init_libraries_at_startup()) {\n    create_vm_init_libraries();\n  }\n\n  // Notify JVMTI agents that VM initialization is complete - nop if no agents.\n  JvmtiExport::post_vm_initialized();\n\n  if (TRACE_START() != JNI_OK) {\n    vm_exit_during_initialization(\"Failed to start tracing backend.\");\n  }\n\n  if (CleanChunkPoolAsync) {\n    Chunk::start_chunk_pool_cleaner_task();\n  }\n\n  // initialize compiler(s)\n  CompileBroker::compilation_init();\n  // 加载sun.management.Agent类并调用startAgent方法开启管理服务\n  Management::initialize(THREAD);\n  if (HAS_PENDING_EXCEPTION) {\n    // management agent fails to start possibly due to\n    // configuration problem and is responsible for printing\n    // stack trace if appropriate. Simply exit VM.\n    vm_exit(1);\n  }\n\n  if (Arguments::has_profile())       FlatProfiler::engage(main_thread, true);\n  if (Arguments::has_alloc_profile()) AllocationProfiler::engage();\n  if (MemProfiling)                   MemProfiler::engage();\n  StatSampler::engage();\n  if (CheckJNICalls)                  JniPeriodicChecker::engage();\n\n  BiasedLocking::init();\n\n  if (JDK_Version::current().post_vm_init_hook_enabled()) {\n    call_postVMInitHook(THREAD);\n    // The Java side of PostVMInitHook.run must deal with all\n    // exceptions and provide means of diagnosis.\n    if (HAS_PENDING_EXCEPTION) {\n      CLEAR_PENDING_EXCEPTION;\n    }\n  }\n\n  {\n      MutexLockerEx ml(PeriodicTask_lock, Mutex::_no_safepoint_check_flag);\n      // Make sure the watcher thread can be started by WatcherThread::start()\n      // or by dynamic enrollment.\n      WatcherThread::make_startable();\n      // Start up the WatcherThread if there are any periodic tasks\n      // NOTE:  All PeriodicTasks should be registered by now. If they\n      //   aren't, late joiners might appear to start slowly (we might\n      //   take a while to process their first tick).\n      if (PeriodicTask::num_tasks() > 0) {\n          WatcherThread::start();\n      }\n  }\n\n  // Give os specific code one last chance to start\n  os::init_3();\n\n  create_vm_timer.end();\n  return JNI_OK;\n}\n```\n\n\n其中`init_globals()`方法位于`hotspot/src/share/vm/runtime/init.cpp`用来初始化全局模块:\n```c\njint init_globals() {\n\n  HandleMark hm;\n  // 初始化各子系统的监控及管理服务\n  // JMX、线程和同步子系统、类加载子系统的监控和管理\n  management_init();\n  // 初始化字节码表，如istore、iload、iadd\n  bytecodes_init();\n  // 类加载器初始化\n  classLoader_init();\n  // 代码缓存池初始化\n  codeCache_init();\n  // VM版本初始化\n  VM_Version_init();\n  // 系统初始化\n  os_init_globals();\n  stubRoutines_init1();\n  // ============================\n  // 初始化堆以及决定所使用GC策略\n  // ============================\n  jint status = universe_init();  // dependent on codeCache_init and\n                                  // stubRoutines_init1\n  if (status != JNI_OK)\n    return status;\n  // 初始化解析器\n  interpreter_init();  // before any methods loaded\n  invocationCounter_init();  // before any methods loaded\n  // 初始化MarkSweep\n  marksweep_init();\n  accessFlags_init();\n  // 初始化操作码模板表\n  templateTable_init();\n  InterfaceSupport_init();\n  SharedRuntime::generate_stubs();\n  // 初始化语法表及系统字典等\n  universe2_init();  // dependent on codeCache_init and stubRoutines_init1\n  // 初始化软引用时间戳表并设定软引用清除策略\n  referenceProcessor_init();\n  jni_handles_init();\n  // 代码数据结构的必要性检查（仅限debug版本）\n  vmStructs_init();\n  vtableStubs_init();\n  InlineCacheBuffer_init();\n  // oracle编译器初始化（oracle编译器是一个编译器开关接口）\n  compilerOracle_init();\n  // 初始化编译策略（根据启动参数决定编译策略）\n  compilationPolicy_init();\n  compileBroker_init();\n  VMRegImpl::set_regName();\n\n  if (!universe_post_init()) {\n    return JNI_ERR;\n  }\n  javaClasses_init();   // must happen after vtable initialization\n  stubRoutines_init2(); // note: StubRoutines need 2-phase init\n\n  // All the flags that get adjusted by VM_Version_init and os::init_2\n  // have been set so dump the flags now.\n  if (PrintFlagsFinal) {\n    CommandLineFlags::printFlags(tty, false);\n  }\n\n  return JNI_OK;\n}\n```\n\n其中`universe_init()`方法位于`hotspot/src/share/vm/memory/universe.cpp`\n\n```c\njint universe_init() {\n  assert(!Universe::_fully_initialized, \"called after initialize_vtables\");\n  guarantee(1 << LogHeapWordSize == sizeof(HeapWord),\n         \"LogHeapWordSize is incorrect.\");\n  guarantee(sizeof(oop) >= sizeof(HeapWord), \"HeapWord larger than oop?\");\n  guarantee(sizeof(oop) % sizeof(HeapWord) == 0,\n            \"oop size is not not a multiple of HeapWord size\");\n  TraceTime timer(\"Genesis\", TraceStartupTime);\n  GC_locker::lock();  // do not allow gc during bootstrapping\n  JavaClasses::compute_hard_coded_offsets();\n\n  // Get map info from shared archive file.\n  if (DumpSharedSpaces)\n    UseSharedSpaces = false;\n\n  FileMapInfo* mapinfo = NULL;\n  if (UseSharedSpaces) {\n    mapinfo = NEW_C_HEAP_OBJ(FileMapInfo, mtInternal);\n    memset(mapinfo, 0, sizeof(FileMapInfo));\n\n    // Open the shared archive file, read and validate the header. If\n    // initialization files, shared spaces [UseSharedSpaces] are\n    // disabled and the file is closed.\n\n    if (mapinfo->initialize()) {\n      FileMapInfo::set_current_info(mapinfo);\n    } else {\n      assert(!mapinfo->is_open() && !UseSharedSpaces,\n             \"archive file not closed or shared spaces not disabled.\");\n    }\n  }\n\n  //===================================\n  // 初始化堆\n  // 包括创建及初始化各分区代，设定空间比例大小，回收策略等\n  // 流程：根据启动参数决定使用的回收策略，初始化回收策略时会指定所使用的代规范，\n  //       最后根据规范创建对应类型的回收堆。i.e.\n  //      arguments -> policy -> spec -> heap\n  //===================================\n  jint status = Universe::initialize_heap();\n  if (status != JNI_OK) {\n    return status;\n  }\n\n  // We have a heap so create the methodOop caches before\n  // CompactingPermGenGen::initialize_oops() tries to populate them.\n  Universe::_finalizer_register_cache = new LatestMethodOopCache();\n  Universe::_loader_addClass_cache    = new LatestMethodOopCache();\n  Universe::_pd_implies_cache         = new LatestMethodOopCache();\n  Universe::_reflect_invoke_cache     = new ActiveMethodOopsCache();\n\n  if (UseSharedSpaces) {\n\n    // Read the data structures supporting the shared spaces (shared\n    // system dictionary, symbol table, etc.).  After that, access to\n    // the file (other than the mapped regions) is no longer needed, and\n    // the file is closed. Closing the file does not affect the\n    // currently mapped regions.\n\n    CompactingPermGenGen::initialize_oops();\n    mapinfo->close();\n\n  } else {\n    SymbolTable::create_table();\n    StringTable::create_table();\n    ClassLoader::create_package_info_table();\n  }\n\n  return JNI_OK;\n}\n```\n\n\ninitialize_heap()方法如下：\n```c\njint Universe::initialize_heap() {\n  // 如果使用并行GC\n  if (UseParallelGC) {\n#ifndef SERIALGC\n    // 回收堆类型使用并行回收堆\n    Universe::_collectedHeap = new ParallelScavengeHeap();\n#else  // SERIALGC\n    fatal(\"UseParallelGC not supported in java kernel vm.\");\n#endif // SERIALGC\n\n  } else if (UseG1GC) {\n#ifndef SERIALGC\n    // 如果使用G1回收，设定回收器策略和回收堆类型为G1CollectorPolicy和G1CollectedHeap\n    G1CollectorPolicy* g1p = new G1CollectorPolicy();\n    G1CollectedHeap* g1h = new G1CollectedHeap(g1p);\n    Universe::_collectedHeap = g1h;\n#else  // SERIALGC\n    fatal(\"UseG1GC not supported in java kernel vm.\");\n#endif // SERIALGC\n\n  } else {\n    GenCollectorPolicy *gc_policy;\n    // 使用串行回收\n    if (UseSerialGC) {\n      gc_policy = new MarkSweepPolicy();\n    // 使用并发回收\n    } else if (UseConcMarkSweepGC) {\n#ifndef SERIALGC\n      // 是否使用自适应策略\n      // ASConcurrentMarkSweepPolicy继承自ConcurrentMarkSweepPolicy，\n      if (UseAdaptiveSizePolicy) {\n        gc_policy = new ASConcurrentMarkSweepPolicy();\n      } else {\n        gc_policy = new ConcurrentMarkSweepPolicy();\n      }\n#else   // SERIALGC\n    fatal(\"UseConcMarkSweepGC not supported in java kernel vm.\");\n#endif // SERIALGC\n    // 默认使用标记清除算法\n    } else { // default old generation\n      gc_policy = new MarkSweepPolicy();\n    }\n    // 回收策略类型体系图\n    // AllocatedObj\n    //    └── CHeapObj\n    //        └── CollectorPolicy\n    //            └── GenCollectorPolicy\n    //                └── TwoGenerationCollectorPolicy\n    //                    └── ConcurrentMarkSweepPolicy\n    //                        └── ASConcurrentMarkSweepPolicy\n    Universe::_collectedHeap = new GenCollectedHeap(gc_policy);\n  }\n  //===================================\n  // 初始化堆空间\n  // 这里调用GenCollectedHeap::initialize()方法， 真正向操作系统申请内存\n  //===================================\n  jint status = Universe::heap()->initialize();\n  if (status != JNI_OK) {\n    return status;\n  }\n\n#ifdef _LP64\n  // 在LP64数据模型下是否开启对象指针压缩\n  if (UseCompressedOops) {\n    // Subtract a page because something can get allocated at heap base.\n    // This also makes implicit null checking work, because the\n    // memory+1 page below heap_base needs to cause a signal.\n    // See needs_explicit_null_check.\n    // Only set the heap base for compressed oops because it indicates\n    // compressed oops for pstack code.\n    bool verbose = PrintCompressedOopsMode || (PrintMiscellaneous && Verbose);\n    if (verbose) {\n      tty->cr();\n      tty->print(\"heap address: \" PTR_FORMAT \", size: \" SIZE_FORMAT \" MB\",\n                 Universe::heap()->base(), Universe::heap()->reserved_region().byte_size()/M);\n    }\n    if ((uint64_t)Universe::heap()->reserved_region().end() > OopEncodingHeapMax) {\n      // Can't reserve heap below 32Gb.\n      Universe::set_narrow_oop_base(Universe::heap()->base() - os::vm_page_size());\n      Universe::set_narrow_oop_shift(LogMinObjAlignmentInBytes);\n      if (verbose) {\n        tty->print(\", %s: \"PTR_FORMAT,\n            narrow_oop_mode_to_string(HeapBasedNarrowOop),\n            Universe::narrow_oop_base());\n      }\n    } else {\n      Universe::set_narrow_oop_base(0);\n      if (verbose) {\n        tty->print(\", %s\", narrow_oop_mode_to_string(ZeroBasedNarrowOop));\n      }\n#ifdef _WIN64\n      if (!Universe::narrow_oop_use_implicit_null_checks()) {\n        // Don't need guard page for implicit checks in indexed addressing\n        // mode with zero based Compressed Oops.\n        Universe::set_narrow_oop_use_implicit_null_checks(true);\n      }\n#endif //  _WIN64\n      if((uint64_t)Universe::heap()->reserved_region().end() > NarrowOopHeapMax) {\n        // Can't reserve heap below 4Gb.\n        Universe::set_narrow_oop_shift(LogMinObjAlignmentInBytes);\n      } else {\n        Universe::set_narrow_oop_shift(0);\n        if (verbose) {\n          tty->print(\", %s\", narrow_oop_mode_to_string(UnscaledNarrowOop));\n        }\n      }\n    }\n    if (verbose) {\n      tty->cr();\n      tty->cr();\n    }\n  }\n  assert(Universe::narrow_oop_base() == (Universe::heap()->base() - os::vm_page_size()) ||\n         Universe::narrow_oop_base() == NULL, \"invalid value\");\n  assert(Universe::narrow_oop_shift() == LogMinObjAlignmentInBytes ||\n         Universe::narrow_oop_shift() == 0, \"invalid value\");\n#endif\n\n  // We will never reach the CATCH below since Exceptions::_throw will cause\n  // the VM to exit if an exception is thrown during initialization\n  // 如果使用TLAB则对其进行初始化\n  if (UseTLAB) {\n    assert(Universe::heap()->supports_tlab_allocation(),\n           \"Should support thread-local allocation buffers\");\n    ThreadLocalAllocBuffer::startup_initialization();\n  }\n  return JNI_OK;\n}\n```\n\n在上面的代码中`Universe::heap()->initialize()`会调用GenCollectedHeap的`initialize()`方法：\n```c\njint GenCollectedHeap::initialize() {\n  CollectedHeap::pre_initialize();\n\n  int i;\n  _n_gens = gen_policy()->number_of_generations();\n\n  // While there are no constraints in the GC code that HeapWordSize\n  // be any particular value, there are multiple other areas in the\n  // system which believe this to be true (e.g. oop->object_size in some\n  // cases incorrectly returns the size in wordSize units rather than\n  // HeapWordSize).\n  guarantee(HeapWordSize == wordSize, \"HeapWordSize must equal wordSize\");\n\n  // The heap must be at least as aligned as generations.\n  size_t alignment = Generation::GenGrain;\n\n  _gen_specs = gen_policy()->generations();\n  PermanentGenerationSpec *perm_gen_spec =\n                                collector_policy()->permanent_generation();\n\n  // Make sure the sizes are all aligned.\n  for (i = 0; i < _n_gens; i++) {\n    _gen_specs[i]->align(alignment);\n  }\n  perm_gen_spec->align(alignment);\n\n  // If we are dumping the heap, then allocate a wasted block of address\n  // space in order to push the heap to a lower address.  This extra\n  // address range allows for other (or larger) libraries to be loaded\n  // without them occupying the space required for the shared spaces.\n\n  if (DumpSharedSpaces) {\n    uintx reserved = 0;\n    uintx block_size = 64*1024*1024;\n    while (reserved < SharedDummyBlockSize) {\n      char* dummy = os::reserve_memory(block_size);\n      reserved += block_size;\n    }\n  }\n\n  // Allocate space for the heap.\n\n  char* heap_address;\n  size_t total_reserved = 0;\n  int n_covered_regions = 0;\n  ReservedSpace heap_rs(0);\n  //分配区域，三个区域:YoungGen,OldGen,PermGen\n  heap_address = allocate(alignment, perm_gen_spec, &total_reserved,\n                          &n_covered_regions, &heap_rs);\n\n  if (UseSharedSpaces) {\n    if (!heap_rs.is_reserved() || heap_address != heap_rs.base()) {\n      if (heap_rs.is_reserved()) {\n        heap_rs.release();\n      }\n      FileMapInfo* mapinfo = FileMapInfo::current_info();\n      mapinfo->fail_continue(\"Unable to reserve shared region.\");\n      allocate(alignment, perm_gen_spec, &total_reserved, &n_covered_regions,\n               &heap_rs);\n    }\n  }\n\n  if (!heap_rs.is_reserved()) {\n    vm_shutdown_during_initialization(\n      \"Could not reserve enough space for object heap\");\n    return JNI_ENOMEM;\n  }\n  //_reserved区域包括Y,O,P三个区域\n  _reserved = MemRegion((HeapWord*)heap_rs.base(),\n                        (HeapWord*)(heap_rs.base() + heap_rs.size()));\n\n  // It is important to do this in a way such that concurrent readers can't\n  // temporarily think somethings in the heap.  (Seen this happen in asserts.)\n  _reserved.set_word_size(0);\n  _reserved.set_start((HeapWord*)heap_rs.base());\n  size_t actual_heap_size = heap_rs.size() - perm_gen_spec->misc_data_size()\n                                           - perm_gen_spec->misc_code_size();\n  _reserved.set_end((HeapWord*)(heap_rs.base() + actual_heap_size));\n\n  _rem_set = collector_policy()->create_rem_set(_reserved, n_covered_regions);\n  set_barrier_set(rem_set()->bs());\n\n  _gch = this;\n\n  for (i = 0; i < _n_gens; i++) {\n    ReservedSpace this_rs = heap_rs.first_part(_gen_specs[i]->max_size(),\n                                              UseSharedSpaces, UseSharedSpaces);\n    _gens[i] = _gen_specs[i]->init(this_rs, i, rem_set());\n    // tag generations in JavaHeap\n    MemTracker::record_virtual_memory_type((address)this_rs.base(), mtJavaHeap);\n    heap_rs = heap_rs.last_part(_gen_specs[i]->max_size());\n  }\n  _perm_gen = perm_gen_spec->init(heap_rs, PermSize, rem_set());\n  // tag PermGen\n  MemTracker::record_virtual_memory_type((address)heap_rs.base(), mtJavaHeap);\n\n  clear_incremental_collection_failed();\n\n#ifndef SERIALGC\n  // If we are running CMS, create the collector responsible\n  // for collecting the CMS generations.\n  if (collector_policy()->is_concurrent_mark_sweep_policy()) {\n    bool success = create_cms_collector();\n    if (!success) return JNI_ENOMEM;\n  }\n#endif // SERIALGC\n\n  return JNI_OK;\n}\n```\n\n\n至此JVM的初始化全部完成，至于内存策略的计算部分详细内容请阅读Hotspot源码，这里只作抛砖引玉。","source":"_posts/2014/12/01/analyse-jvm-startup-flow-through-source-code-initialize.md","raw":"---\ntitle: 【Hotspot源码分析】从Hotpost源码角度深入分析Java程序启动过程-初始化  \ndate: 2014-12-01 04:20:08\ncategories: OpenJDK\ntags:\n    - OpenJDK\n    - JVM\n---\n\n接上篇文章从Hotpost源码角度深入分析Java程序启动过程-创建 ，本文将继续介绍JVM启动过程的初始化部分。\n\n在上篇文章中在执行LoadJavaVM方法的时候将libjvm.so内的方法`JNI_CreateJavaVM`和`JNI_GetDefaultJavaVMInitArgs`符号引用挂载到了结构体`InvocationFunctions`上，并且在执行InitializeJVM方法的时候进行了调用。\n\n这里执行了JNI调用`JNI_CreateJavaVM`，文件位于`hotspot/src/share/vm/prims/jni.cpp`。方法内容如下：\n\n```c\n_JNI_IMPORT_OR_EXPORT_ jint JNICALL JNI_CreateJavaVM(JavaVM **vm, void **penv, void *args) {\n\n   // 略去部分非重要内容\n\n  /**\n   * Certain errors during initialization are recoverable and do not\n   * prevent this method from being called again at a later time\n   * (perhaps with different arguments).  However, at a certain\n   * point during initialization if an error occurs we cannot allow\n   * this function to be called again (or it will crash).  In those\n   * situations, the 'canTryAgain' flag is set to false, which atomically\n   * sets safe_to_recreate_vm to 1, such that any new call to\n   * JNI_CreateJavaVM will immediately fail using the above logic.\n   */\n  bool can_try_again = true;\n  //========================================\n  // 通过Threads模块初始化VM并创建VM线程\n  //========================================\n  result = Threads::create_vm((JavaVMInitArgs*) args, &can_try_again);\n  if (result == JNI_OK) {\n    JavaThread *thread = JavaThread::current();\n    /* thread is thread_in_vm here */\n    *vm = (JavaVM *)(&main_vm);\n    *(JNIEnv**)penv = thread->jni_environment();\n\n    // Tracks the time application was running before GC\n    RuntimeService::record_application_start();\n\n    // Notify JVMTI\n    if (JvmtiExport::should_post_thread_life()) {\n       JvmtiExport::post_thread_start(thread);\n    }\n\n    EventThreadStart event;\n    if (event.should_commit()) {\n      event.set_javalangthread(java_lang_Thread::thread_id(thread->threadObj()));\n      event.commit();\n    }\n\n    // 略去部分内容\n\n  return result;\n}\n```\n\n<!-- more -->\n\n这里调用了`hotspot/src/share/vm/runtime/thread.cpp`的`create_vm`方法：\n\n```c\njint Threads::create_vm(JavaVMInitArgs* args, bool* canTryAgain) {\n\n  extern void JDK_Version_init();\n\n  // Check version\n  if (!is_supported_jni_version(args->version)) return JNI_EVERSION;\n\n  // Initialize the output stream module\n  // 初始化输出流\n  ostream_init();\n\n  // Process java launcher properties.\n  // 处理Java启动参数，如-Dsun.java.launcher*\n  Arguments::process_sun_java_launcher_properties(args);\n\n  // Initialize the os module before using TLS\n  // 初始化操作系统模块，如页大小，处理器数量，系统时钟等\n  os::init();\n\n  // Initialize system properties.\n  // 初始化系统属性，其中分为【可读属性】和【可读写属性】\n  // 可读属性：\n  // java.vm.specification.name\n  // java.vm.version\n  // java.vm.name\n  // java.vm.info\n  // 可读写属性：\n  // java.ext.dirs\n  // java.endorsed.dirs\n  // sun.boot.library.path\n  // java.library.path\n  // java.home\n  // sun.boot.class.path\n  // java.class.path\n  Arguments::init_system_properties();\n\n  // So that JDK version can be used as a discrimintor when parsing arguments\n  JDK_Version_init();\n\n  // Update/Initialize System properties after JDK version number is known\n  // 设置java.vm.specification.vendor属性（1.6之前是Sun Microsystems Inc. 1.7之后是Oracle Corporation）\n  // 设置java.vm.specification.version和java.vm.vendor属性\n  Arguments::init_version_specific_system_properties();\n\n  // Parse arguments\n  // 解析启动参数，如-XX:Flags=、-XX:+PrintVMOptions、-XX:+PrintFlagsInitial etc.\n  jint parse_result = Arguments::parse(args);\n  if (parse_result != JNI_OK) return parse_result;\n\n  if (PauseAtStartup) {\n    os::pause();\n  }\n\n#ifndef USDT2\n  HS_DTRACE_PROBE(hotspot, vm__init__begin);\n#else /* USDT2 */\n  HOTSPOT_VM_INIT_BEGIN();\n#endif /* USDT2 */\n\n  // Record VM creation timing statistics\n  TraceVmCreationTime create_vm_timer;\n  create_vm_timer.start();\n\n  // Timing (must come after argument parsing)\n  TraceTime timer(\"Create VM\", TraceStartupTime);\n\n  // Initialize the os module after parsing the args\n  jint os_init_2_result = os::init_2();\n  if (os_init_2_result != JNI_OK) return os_init_2_result;\n\n  // intialize TLS\n  ThreadLocalStorage::init();\n\n  // Bootstrap native memory tracking, so it can start recording memory\n  // activities before worker thread is started. This is the first phase\n  // of bootstrapping, VM is currently running in single-thread mode.\n  MemTracker::bootstrap_single_thread();\n\n  // Initialize output stream logging\n  // 初始化GC日志输出流，用来处理-Xloggc参数\n  ostream_init_log();\n\n  // Convert -Xrun to -agentlib: if there is no JVM_OnLoad\n  // Must be before create_vm_init_agents()\n  if (Arguments::init_libraries_at_startup()) {\n    convert_vm_init_libraries_to_agents();\n  }\n\n  // Launch -agentlib/-agentpath and converted -Xrun agents\n  // 加载agent库\n  if (Arguments::init_agents_at_startup()) {\n    create_vm_init_agents();\n  }\n\n  // Initialize Threads state\n  _thread_list = NULL;\n  _number_of_threads = 0;\n  _number_of_non_daemon_threads = 0;\n\n  // Initialize global data structures and create system classes in heap\n  // 初始化全局数据数据结构及系统类，包括：\n  // 初始化Java基础类型\n  // 初始化时间队列\n  // 初始化锁\n  // 初始化chunkpool\n  // 初始化性能数据统计模块\n  vm_init_globals();\n\n  // Attach the main thread to this os thread\n  JavaThread* main_thread = new JavaThread();\n  main_thread->set_thread_state(_thread_in_vm);\n  main_thread->record_stack_base_and_size();\n  main_thread->initialize_thread_local_storage();\n\n  main_thread->set_active_handles(JNIHandleBlock::allocate_block());\n\n  if (!main_thread->set_as_starting_thread()) {\n    vm_shutdown_during_initialization(\n      \"Failed necessary internal allocation. Out of swap space\");\n    delete main_thread;\n    *canTryAgain = false; // don't let caller call JNI_CreateJavaVM again\n    return JNI_ENOMEM;\n  }\n\n  // Enable guard page *after* os::create_main_thread(), otherwise it would\n  // crash Linux VM, see notes in os_linux.cpp.\n  main_thread->create_stack_guard_pages();\n\n  // Initialize Java-Level synchronization subsystem\n  ObjectMonitor::Initialize() ;\n\n  // Second phase of bootstrapping, VM is about entering multi-thread mode\n  MemTracker::bootstrap_multi_thread();\n\n  // Initialize global modules\n  // ========================================\n  // IMPORTANT!!! 初始化全局模块\n  // ========================================\n  jint status = init_globals();\n  if (status != JNI_OK) {\n    delete main_thread;\n    *canTryAgain = false; // don't let caller call JNI_CreateJavaVM again\n    return status;\n  }\n\n  // Should be done after the heap is fully created\n  main_thread->cache_global_variables();\n\n  HandleMark hm;\n\n  { MutexLocker mu(Threads_lock);\n    Threads::add(main_thread);\n  }\n\n  // Any JVMTI raw monitors entered in onload will transition into\n  // real raw monitor. VM is setup enough here for raw monitor enter.\n  JvmtiExport::transition_pending_onload_raw_monitors();\n\n  // Fully start NMT\n  MemTracker::start();\n\n  // Create the VMThread\n  { TraceTime timer(\"Start VMThread\", TraceStartupTime);\n    VMThread::create();\n    Thread* vmthread = VMThread::vm_thread();\n\n    if (!os::create_thread(vmthread, os::vm_thread))\n      vm_exit_during_initialization(\"Cannot create VM thread. Out of system resources.\");\n\n    // Wait for the VM thread to become ready, and VMThread::run to initialize\n    // Monitors can have spurious returns, must always check another state flag\n    {\n      MutexLocker ml(Notify_lock);\n      os::start_thread(vmthread);\n      while (vmthread->active_handles() == NULL) {\n        Notify_lock->wait();\n      }\n    }\n  }\n\n  assert (Universe::is_fully_initialized(), \"not initialized\");\n  if (VerifyBeforeGC && VerifyGCStartAt == 0) {\n    Universe::heap()->prepare_for_verify();\n    Universe::verify();   // make sure we're starting with a clean slate\n  }\n\n  EXCEPTION_MARK;\n\n  // At this point, the Universe is initialized, but we have not executed\n  // any byte code.  Now is a good time (the only time) to dump out the\n  // internal state of the JVM for sharing.\n\n  if (DumpSharedSpaces) {\n    Universe::heap()->preload_and_dump(CHECK_0);\n    ShouldNotReachHere();\n  }\n\n  // Always call even when there are not JVMTI environments yet, since environments\n  // may be attached late and JVMTI must track phases of VM execution\n  JvmtiExport::enter_start_phase();\n\n  // Notify JVMTI agents that VM has started (JNI is up) - nop if no agents.\n  JvmtiExport::post_vm_start();\n\n  {\n    TraceTime timer(\"Initialize java.lang classes\", TraceStartupTime);\n\n    if (EagerXrunInit && Arguments::init_libraries_at_startup()) {\n      create_vm_init_libraries();\n    }\n\n    if (InitializeJavaLangString) {\n      initialize_class(vmSymbols::java_lang_String(), CHECK_0);\n    } else {\n      warning(\"java.lang.String not initialized\");\n    }\n\n    // Initialize java_lang.System (needed before creating the thread)\n    if (InitializeJavaLangSystem) {\n      initialize_class(vmSymbols::java_lang_System(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_ThreadGroup(), CHECK_0);\n      Handle thread_group = create_initial_thread_group(CHECK_0);\n      Universe::set_main_thread_group(thread_group());\n      initialize_class(vmSymbols::java_lang_Thread(), CHECK_0);\n      oop thread_object = create_initial_thread(thread_group, main_thread, CHECK_0);\n      main_thread->set_threadObj(thread_object);\n      // Set thread status to running since main thread has\n      // been started and running.\n      java_lang_Thread::set_thread_status(thread_object,\n                                          java_lang_Thread::RUNNABLE);\n\n      // The VM preresolve methods to these classes. Make sure that get initialized\n      initialize_class(vmSymbols::java_lang_reflect_Method(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_ref_Finalizer(),  CHECK_0);\n      // The VM creates & returns objects of this class. Make sure it's initialized.\n      initialize_class(vmSymbols::java_lang_Class(), CHECK_0);\n      call_initializeSystemClass(CHECK_0);\n\n      // get the Java runtime name after java.lang.System is initialized\n      JDK_Version::set_runtime_name(get_java_runtime_name(THREAD));\n      JDK_Version::set_runtime_version(get_java_runtime_version(THREAD));\n    } else {\n      warning(\"java.lang.System not initialized\");\n    }\n\n    // an instance of OutOfMemory exception has been allocated earlier\n    if (InitializeJavaLangExceptionsErrors) {\n      initialize_class(vmSymbols::java_lang_OutOfMemoryError(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_NullPointerException(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_ClassCastException(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_ArrayStoreException(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_ArithmeticException(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_StackOverflowError(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_IllegalMonitorStateException(), CHECK_0);\n      initialize_class(vmSymbols::java_lang_IllegalArgumentException(), CHECK_0);\n    } else {\n      warning(\"java.lang.OutOfMemoryError has not been initialized\");\n      warning(\"java.lang.NullPointerException has not been initialized\");\n      warning(\"java.lang.ClassCastException has not been initialized\");\n      warning(\"java.lang.ArrayStoreException has not been initialized\");\n      warning(\"java.lang.ArithmeticException has not been initialized\");\n      warning(\"java.lang.StackOverflowError has not been initialized\");\n      warning(\"java.lang.IllegalArgumentException has not been initialized\");\n    }\n  }\n\n\n  initialize_class(vmSymbols::java_lang_Compiler(), CHECK_0);\n\n  reset_vm_info_property(CHECK_0);\n\n  quicken_jni_functions();\n\n  // Must be run after init_ft which initializes ft_enabled\n  if (TRACE_INITIALIZE() != JNI_OK) {\n    vm_exit_during_initialization(\"Failed to initialize tracing backend\");\n  }\n\n  // Set flag that basic initialization has completed. Used by exceptions and various\n  // debug stuff, that does not work until all basic classes have been initialized.\n  set_init_completed();\n\n#ifndef USDT2\n  HS_DTRACE_PROBE(hotspot, vm__init__end);\n#else /* USDT2 */\n  HOTSPOT_VM_INIT_END();\n#endif /* USDT2 */\n\n  // record VM initialization completion time\n  // 向VM管理模块发送初始化完成信号\n  Management::record_vm_init_completed();\n\n  // Compute system loader. Note that this has to occur after set_init_completed, since\n  // valid exceptions may be thrown in the process.\n  // Note that we do not use CHECK_0 here since we are inside an EXCEPTION_MARK and\n  // set_init_completed has just been called, causing exceptions not to be shortcut\n  // anymore. We call vm_exit_during_initialization directly instead.\n  // 载入classloader\n  SystemDictionary::compute_java_system_loader(THREAD);\n  if (HAS_PENDING_EXCEPTION) {\n    vm_exit_during_initialization(Handle(THREAD, PENDING_EXCEPTION));\n  }\n\n#ifndef SERIALGC\n  // Support for ConcurrentMarkSweep. This should be cleaned up\n  // and better encapsulated. The ugly nested if test would go away\n  // once things are properly refactored. XXX YSR\n  if (UseConcMarkSweepGC || UseG1GC) {\n    if (UseConcMarkSweepGC) {\n      ConcurrentMarkSweepThread::makeSurrogateLockerThread(THREAD);\n    } else {\n      ConcurrentMarkThread::makeSurrogateLockerThread(THREAD);\n    }\n    if (HAS_PENDING_EXCEPTION) {\n      vm_exit_during_initialization(Handle(THREAD, PENDING_EXCEPTION));\n    }\n  }\n#endif // SERIALGC\n\n  // Always call even when there are not JVMTI environments yet, since environments\n  // may be attached late and JVMTI must track phases of VM execution\n  JvmtiExport::enter_live_phase();\n\n  // Signal Dispatcher needs to be started before VMInit event is posted\n  // 启动一个叫做“信号分发器”的线程用来处理进程间的信号\n  // 比如通过jstack获取一个jvm实例的栈信息\n  os::signal_init();\n\n  // Start Attach Listener if +StartAttachListener or it can't be started lazily\n  if (!DisableAttachMechanism) {\n    AttachListener::vm_start();\n    if (StartAttachListener || AttachListener::init_at_startup()) {\n      AttachListener::init();\n    }\n  }\n\n  // Launch -Xrun agents\n  // Must be done in the JVMTI live phase so that for backward compatibility the JDWP\n  // back-end can launch with -Xdebug -Xrunjdwp.\n  if (!EagerXrunInit && Arguments::init_libraries_at_startup()) {\n    create_vm_init_libraries();\n  }\n\n  // Notify JVMTI agents that VM initialization is complete - nop if no agents.\n  JvmtiExport::post_vm_initialized();\n\n  if (TRACE_START() != JNI_OK) {\n    vm_exit_during_initialization(\"Failed to start tracing backend.\");\n  }\n\n  if (CleanChunkPoolAsync) {\n    Chunk::start_chunk_pool_cleaner_task();\n  }\n\n  // initialize compiler(s)\n  CompileBroker::compilation_init();\n  // 加载sun.management.Agent类并调用startAgent方法开启管理服务\n  Management::initialize(THREAD);\n  if (HAS_PENDING_EXCEPTION) {\n    // management agent fails to start possibly due to\n    // configuration problem and is responsible for printing\n    // stack trace if appropriate. Simply exit VM.\n    vm_exit(1);\n  }\n\n  if (Arguments::has_profile())       FlatProfiler::engage(main_thread, true);\n  if (Arguments::has_alloc_profile()) AllocationProfiler::engage();\n  if (MemProfiling)                   MemProfiler::engage();\n  StatSampler::engage();\n  if (CheckJNICalls)                  JniPeriodicChecker::engage();\n\n  BiasedLocking::init();\n\n  if (JDK_Version::current().post_vm_init_hook_enabled()) {\n    call_postVMInitHook(THREAD);\n    // The Java side of PostVMInitHook.run must deal with all\n    // exceptions and provide means of diagnosis.\n    if (HAS_PENDING_EXCEPTION) {\n      CLEAR_PENDING_EXCEPTION;\n    }\n  }\n\n  {\n      MutexLockerEx ml(PeriodicTask_lock, Mutex::_no_safepoint_check_flag);\n      // Make sure the watcher thread can be started by WatcherThread::start()\n      // or by dynamic enrollment.\n      WatcherThread::make_startable();\n      // Start up the WatcherThread if there are any periodic tasks\n      // NOTE:  All PeriodicTasks should be registered by now. If they\n      //   aren't, late joiners might appear to start slowly (we might\n      //   take a while to process their first tick).\n      if (PeriodicTask::num_tasks() > 0) {\n          WatcherThread::start();\n      }\n  }\n\n  // Give os specific code one last chance to start\n  os::init_3();\n\n  create_vm_timer.end();\n  return JNI_OK;\n}\n```\n\n\n其中`init_globals()`方法位于`hotspot/src/share/vm/runtime/init.cpp`用来初始化全局模块:\n```c\njint init_globals() {\n\n  HandleMark hm;\n  // 初始化各子系统的监控及管理服务\n  // JMX、线程和同步子系统、类加载子系统的监控和管理\n  management_init();\n  // 初始化字节码表，如istore、iload、iadd\n  bytecodes_init();\n  // 类加载器初始化\n  classLoader_init();\n  // 代码缓存池初始化\n  codeCache_init();\n  // VM版本初始化\n  VM_Version_init();\n  // 系统初始化\n  os_init_globals();\n  stubRoutines_init1();\n  // ============================\n  // 初始化堆以及决定所使用GC策略\n  // ============================\n  jint status = universe_init();  // dependent on codeCache_init and\n                                  // stubRoutines_init1\n  if (status != JNI_OK)\n    return status;\n  // 初始化解析器\n  interpreter_init();  // before any methods loaded\n  invocationCounter_init();  // before any methods loaded\n  // 初始化MarkSweep\n  marksweep_init();\n  accessFlags_init();\n  // 初始化操作码模板表\n  templateTable_init();\n  InterfaceSupport_init();\n  SharedRuntime::generate_stubs();\n  // 初始化语法表及系统字典等\n  universe2_init();  // dependent on codeCache_init and stubRoutines_init1\n  // 初始化软引用时间戳表并设定软引用清除策略\n  referenceProcessor_init();\n  jni_handles_init();\n  // 代码数据结构的必要性检查（仅限debug版本）\n  vmStructs_init();\n  vtableStubs_init();\n  InlineCacheBuffer_init();\n  // oracle编译器初始化（oracle编译器是一个编译器开关接口）\n  compilerOracle_init();\n  // 初始化编译策略（根据启动参数决定编译策略）\n  compilationPolicy_init();\n  compileBroker_init();\n  VMRegImpl::set_regName();\n\n  if (!universe_post_init()) {\n    return JNI_ERR;\n  }\n  javaClasses_init();   // must happen after vtable initialization\n  stubRoutines_init2(); // note: StubRoutines need 2-phase init\n\n  // All the flags that get adjusted by VM_Version_init and os::init_2\n  // have been set so dump the flags now.\n  if (PrintFlagsFinal) {\n    CommandLineFlags::printFlags(tty, false);\n  }\n\n  return JNI_OK;\n}\n```\n\n其中`universe_init()`方法位于`hotspot/src/share/vm/memory/universe.cpp`\n\n```c\njint universe_init() {\n  assert(!Universe::_fully_initialized, \"called after initialize_vtables\");\n  guarantee(1 << LogHeapWordSize == sizeof(HeapWord),\n         \"LogHeapWordSize is incorrect.\");\n  guarantee(sizeof(oop) >= sizeof(HeapWord), \"HeapWord larger than oop?\");\n  guarantee(sizeof(oop) % sizeof(HeapWord) == 0,\n            \"oop size is not not a multiple of HeapWord size\");\n  TraceTime timer(\"Genesis\", TraceStartupTime);\n  GC_locker::lock();  // do not allow gc during bootstrapping\n  JavaClasses::compute_hard_coded_offsets();\n\n  // Get map info from shared archive file.\n  if (DumpSharedSpaces)\n    UseSharedSpaces = false;\n\n  FileMapInfo* mapinfo = NULL;\n  if (UseSharedSpaces) {\n    mapinfo = NEW_C_HEAP_OBJ(FileMapInfo, mtInternal);\n    memset(mapinfo, 0, sizeof(FileMapInfo));\n\n    // Open the shared archive file, read and validate the header. If\n    // initialization files, shared spaces [UseSharedSpaces] are\n    // disabled and the file is closed.\n\n    if (mapinfo->initialize()) {\n      FileMapInfo::set_current_info(mapinfo);\n    } else {\n      assert(!mapinfo->is_open() && !UseSharedSpaces,\n             \"archive file not closed or shared spaces not disabled.\");\n    }\n  }\n\n  //===================================\n  // 初始化堆\n  // 包括创建及初始化各分区代，设定空间比例大小，回收策略等\n  // 流程：根据启动参数决定使用的回收策略，初始化回收策略时会指定所使用的代规范，\n  //       最后根据规范创建对应类型的回收堆。i.e.\n  //      arguments -> policy -> spec -> heap\n  //===================================\n  jint status = Universe::initialize_heap();\n  if (status != JNI_OK) {\n    return status;\n  }\n\n  // We have a heap so create the methodOop caches before\n  // CompactingPermGenGen::initialize_oops() tries to populate them.\n  Universe::_finalizer_register_cache = new LatestMethodOopCache();\n  Universe::_loader_addClass_cache    = new LatestMethodOopCache();\n  Universe::_pd_implies_cache         = new LatestMethodOopCache();\n  Universe::_reflect_invoke_cache     = new ActiveMethodOopsCache();\n\n  if (UseSharedSpaces) {\n\n    // Read the data structures supporting the shared spaces (shared\n    // system dictionary, symbol table, etc.).  After that, access to\n    // the file (other than the mapped regions) is no longer needed, and\n    // the file is closed. Closing the file does not affect the\n    // currently mapped regions.\n\n    CompactingPermGenGen::initialize_oops();\n    mapinfo->close();\n\n  } else {\n    SymbolTable::create_table();\n    StringTable::create_table();\n    ClassLoader::create_package_info_table();\n  }\n\n  return JNI_OK;\n}\n```\n\n\ninitialize_heap()方法如下：\n```c\njint Universe::initialize_heap() {\n  // 如果使用并行GC\n  if (UseParallelGC) {\n#ifndef SERIALGC\n    // 回收堆类型使用并行回收堆\n    Universe::_collectedHeap = new ParallelScavengeHeap();\n#else  // SERIALGC\n    fatal(\"UseParallelGC not supported in java kernel vm.\");\n#endif // SERIALGC\n\n  } else if (UseG1GC) {\n#ifndef SERIALGC\n    // 如果使用G1回收，设定回收器策略和回收堆类型为G1CollectorPolicy和G1CollectedHeap\n    G1CollectorPolicy* g1p = new G1CollectorPolicy();\n    G1CollectedHeap* g1h = new G1CollectedHeap(g1p);\n    Universe::_collectedHeap = g1h;\n#else  // SERIALGC\n    fatal(\"UseG1GC not supported in java kernel vm.\");\n#endif // SERIALGC\n\n  } else {\n    GenCollectorPolicy *gc_policy;\n    // 使用串行回收\n    if (UseSerialGC) {\n      gc_policy = new MarkSweepPolicy();\n    // 使用并发回收\n    } else if (UseConcMarkSweepGC) {\n#ifndef SERIALGC\n      // 是否使用自适应策略\n      // ASConcurrentMarkSweepPolicy继承自ConcurrentMarkSweepPolicy，\n      if (UseAdaptiveSizePolicy) {\n        gc_policy = new ASConcurrentMarkSweepPolicy();\n      } else {\n        gc_policy = new ConcurrentMarkSweepPolicy();\n      }\n#else   // SERIALGC\n    fatal(\"UseConcMarkSweepGC not supported in java kernel vm.\");\n#endif // SERIALGC\n    // 默认使用标记清除算法\n    } else { // default old generation\n      gc_policy = new MarkSweepPolicy();\n    }\n    // 回收策略类型体系图\n    // AllocatedObj\n    //    └── CHeapObj\n    //        └── CollectorPolicy\n    //            └── GenCollectorPolicy\n    //                └── TwoGenerationCollectorPolicy\n    //                    └── ConcurrentMarkSweepPolicy\n    //                        └── ASConcurrentMarkSweepPolicy\n    Universe::_collectedHeap = new GenCollectedHeap(gc_policy);\n  }\n  //===================================\n  // 初始化堆空间\n  // 这里调用GenCollectedHeap::initialize()方法， 真正向操作系统申请内存\n  //===================================\n  jint status = Universe::heap()->initialize();\n  if (status != JNI_OK) {\n    return status;\n  }\n\n#ifdef _LP64\n  // 在LP64数据模型下是否开启对象指针压缩\n  if (UseCompressedOops) {\n    // Subtract a page because something can get allocated at heap base.\n    // This also makes implicit null checking work, because the\n    // memory+1 page below heap_base needs to cause a signal.\n    // See needs_explicit_null_check.\n    // Only set the heap base for compressed oops because it indicates\n    // compressed oops for pstack code.\n    bool verbose = PrintCompressedOopsMode || (PrintMiscellaneous && Verbose);\n    if (verbose) {\n      tty->cr();\n      tty->print(\"heap address: \" PTR_FORMAT \", size: \" SIZE_FORMAT \" MB\",\n                 Universe::heap()->base(), Universe::heap()->reserved_region().byte_size()/M);\n    }\n    if ((uint64_t)Universe::heap()->reserved_region().end() > OopEncodingHeapMax) {\n      // Can't reserve heap below 32Gb.\n      Universe::set_narrow_oop_base(Universe::heap()->base() - os::vm_page_size());\n      Universe::set_narrow_oop_shift(LogMinObjAlignmentInBytes);\n      if (verbose) {\n        tty->print(\", %s: \"PTR_FORMAT,\n            narrow_oop_mode_to_string(HeapBasedNarrowOop),\n            Universe::narrow_oop_base());\n      }\n    } else {\n      Universe::set_narrow_oop_base(0);\n      if (verbose) {\n        tty->print(\", %s\", narrow_oop_mode_to_string(ZeroBasedNarrowOop));\n      }\n#ifdef _WIN64\n      if (!Universe::narrow_oop_use_implicit_null_checks()) {\n        // Don't need guard page for implicit checks in indexed addressing\n        // mode with zero based Compressed Oops.\n        Universe::set_narrow_oop_use_implicit_null_checks(true);\n      }\n#endif //  _WIN64\n      if((uint64_t)Universe::heap()->reserved_region().end() > NarrowOopHeapMax) {\n        // Can't reserve heap below 4Gb.\n        Universe::set_narrow_oop_shift(LogMinObjAlignmentInBytes);\n      } else {\n        Universe::set_narrow_oop_shift(0);\n        if (verbose) {\n          tty->print(\", %s\", narrow_oop_mode_to_string(UnscaledNarrowOop));\n        }\n      }\n    }\n    if (verbose) {\n      tty->cr();\n      tty->cr();\n    }\n  }\n  assert(Universe::narrow_oop_base() == (Universe::heap()->base() - os::vm_page_size()) ||\n         Universe::narrow_oop_base() == NULL, \"invalid value\");\n  assert(Universe::narrow_oop_shift() == LogMinObjAlignmentInBytes ||\n         Universe::narrow_oop_shift() == 0, \"invalid value\");\n#endif\n\n  // We will never reach the CATCH below since Exceptions::_throw will cause\n  // the VM to exit if an exception is thrown during initialization\n  // 如果使用TLAB则对其进行初始化\n  if (UseTLAB) {\n    assert(Universe::heap()->supports_tlab_allocation(),\n           \"Should support thread-local allocation buffers\");\n    ThreadLocalAllocBuffer::startup_initialization();\n  }\n  return JNI_OK;\n}\n```\n\n在上面的代码中`Universe::heap()->initialize()`会调用GenCollectedHeap的`initialize()`方法：\n```c\njint GenCollectedHeap::initialize() {\n  CollectedHeap::pre_initialize();\n\n  int i;\n  _n_gens = gen_policy()->number_of_generations();\n\n  // While there are no constraints in the GC code that HeapWordSize\n  // be any particular value, there are multiple other areas in the\n  // system which believe this to be true (e.g. oop->object_size in some\n  // cases incorrectly returns the size in wordSize units rather than\n  // HeapWordSize).\n  guarantee(HeapWordSize == wordSize, \"HeapWordSize must equal wordSize\");\n\n  // The heap must be at least as aligned as generations.\n  size_t alignment = Generation::GenGrain;\n\n  _gen_specs = gen_policy()->generations();\n  PermanentGenerationSpec *perm_gen_spec =\n                                collector_policy()->permanent_generation();\n\n  // Make sure the sizes are all aligned.\n  for (i = 0; i < _n_gens; i++) {\n    _gen_specs[i]->align(alignment);\n  }\n  perm_gen_spec->align(alignment);\n\n  // If we are dumping the heap, then allocate a wasted block of address\n  // space in order to push the heap to a lower address.  This extra\n  // address range allows for other (or larger) libraries to be loaded\n  // without them occupying the space required for the shared spaces.\n\n  if (DumpSharedSpaces) {\n    uintx reserved = 0;\n    uintx block_size = 64*1024*1024;\n    while (reserved < SharedDummyBlockSize) {\n      char* dummy = os::reserve_memory(block_size);\n      reserved += block_size;\n    }\n  }\n\n  // Allocate space for the heap.\n\n  char* heap_address;\n  size_t total_reserved = 0;\n  int n_covered_regions = 0;\n  ReservedSpace heap_rs(0);\n  //分配区域，三个区域:YoungGen,OldGen,PermGen\n  heap_address = allocate(alignment, perm_gen_spec, &total_reserved,\n                          &n_covered_regions, &heap_rs);\n\n  if (UseSharedSpaces) {\n    if (!heap_rs.is_reserved() || heap_address != heap_rs.base()) {\n      if (heap_rs.is_reserved()) {\n        heap_rs.release();\n      }\n      FileMapInfo* mapinfo = FileMapInfo::current_info();\n      mapinfo->fail_continue(\"Unable to reserve shared region.\");\n      allocate(alignment, perm_gen_spec, &total_reserved, &n_covered_regions,\n               &heap_rs);\n    }\n  }\n\n  if (!heap_rs.is_reserved()) {\n    vm_shutdown_during_initialization(\n      \"Could not reserve enough space for object heap\");\n    return JNI_ENOMEM;\n  }\n  //_reserved区域包括Y,O,P三个区域\n  _reserved = MemRegion((HeapWord*)heap_rs.base(),\n                        (HeapWord*)(heap_rs.base() + heap_rs.size()));\n\n  // It is important to do this in a way such that concurrent readers can't\n  // temporarily think somethings in the heap.  (Seen this happen in asserts.)\n  _reserved.set_word_size(0);\n  _reserved.set_start((HeapWord*)heap_rs.base());\n  size_t actual_heap_size = heap_rs.size() - perm_gen_spec->misc_data_size()\n                                           - perm_gen_spec->misc_code_size();\n  _reserved.set_end((HeapWord*)(heap_rs.base() + actual_heap_size));\n\n  _rem_set = collector_policy()->create_rem_set(_reserved, n_covered_regions);\n  set_barrier_set(rem_set()->bs());\n\n  _gch = this;\n\n  for (i = 0; i < _n_gens; i++) {\n    ReservedSpace this_rs = heap_rs.first_part(_gen_specs[i]->max_size(),\n                                              UseSharedSpaces, UseSharedSpaces);\n    _gens[i] = _gen_specs[i]->init(this_rs, i, rem_set());\n    // tag generations in JavaHeap\n    MemTracker::record_virtual_memory_type((address)this_rs.base(), mtJavaHeap);\n    heap_rs = heap_rs.last_part(_gen_specs[i]->max_size());\n  }\n  _perm_gen = perm_gen_spec->init(heap_rs, PermSize, rem_set());\n  // tag PermGen\n  MemTracker::record_virtual_memory_type((address)heap_rs.base(), mtJavaHeap);\n\n  clear_incremental_collection_failed();\n\n#ifndef SERIALGC\n  // If we are running CMS, create the collector responsible\n  // for collecting the CMS generations.\n  if (collector_policy()->is_concurrent_mark_sweep_policy()) {\n    bool success = create_cms_collector();\n    if (!success) return JNI_ENOMEM;\n  }\n#endif // SERIALGC\n\n  return JNI_OK;\n}\n```\n\n\n至此JVM的初始化全部完成，至于内存策略的计算部分详细内容请阅读Hotspot源码，这里只作抛砖引玉。","slug":"2014/12/01/analyse-jvm-startup-flow-through-source-code-initialize","published":1,"updated":"2018-03-27T19:04:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjfb89nc6000d5ls6orzk35w7","content":"<p>接上篇文章从Hotpost源码角度深入分析Java程序启动过程-创建 ，本文将继续介绍JVM启动过程的初始化部分。</p>\n<p>在上篇文章中在执行LoadJavaVM方法的时候将libjvm.so内的方法<code>JNI_CreateJavaVM</code>和<code>JNI_GetDefaultJavaVMInitArgs</code>符号引用挂载到了结构体<code>InvocationFunctions</code>上，并且在执行InitializeJVM方法的时候进行了调用。</p>\n<p>这里执行了JNI调用<code>JNI_CreateJavaVM</code>，文件位于<code>hotspot/src/share/vm/prims/jni.cpp</code>。方法内容如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_<span class=\"function\">JNI_IMPORT_OR_EXPORT_ jint JNICALL <span class=\"title\">JNI_CreateJavaVM</span><span class=\"params\">(JavaVM **vm, <span class=\"keyword\">void</span> **penv, <span class=\"keyword\">void</span> *args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 略去部分非重要内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Certain errors during initialization are recoverable and do not</span></span><br><span class=\"line\"><span class=\"comment\">   * prevent this method from being called again at a later time</span></span><br><span class=\"line\"><span class=\"comment\">   * (perhaps with different arguments).  However, at a certain</span></span><br><span class=\"line\"><span class=\"comment\">   * point during initialization if an error occurs we cannot allow</span></span><br><span class=\"line\"><span class=\"comment\">   * this function to be called again (or it will crash).  In those</span></span><br><span class=\"line\"><span class=\"comment\">   * situations, the 'canTryAgain' flag is set to false, which atomically</span></span><br><span class=\"line\"><span class=\"comment\">   * sets safe_to_recreate_vm to 1, such that any new call to</span></span><br><span class=\"line\"><span class=\"comment\">   * JNI_CreateJavaVM will immediately fail using the above logic.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">bool</span> can_try_again = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"comment\">//========================================</span></span><br><span class=\"line\">  <span class=\"comment\">// 通过Threads模块初始化VM并创建VM线程</span></span><br><span class=\"line\">  <span class=\"comment\">//========================================</span></span><br><span class=\"line\">  result = Threads::create_vm((JavaVMInitArgs*) args, &amp;can_try_again);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (result == JNI_OK) &#123;</span><br><span class=\"line\">    JavaThread *thread = JavaThread::current();</span><br><span class=\"line\">    <span class=\"comment\">/* thread is thread_in_vm here */</span></span><br><span class=\"line\">    *vm = (JavaVM *)(&amp;main_vm);</span><br><span class=\"line\">    *(JNIEnv**)penv = thread-&gt;jni_environment();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Tracks the time application was running before GC</span></span><br><span class=\"line\">    RuntimeService::record_application_start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Notify JVMTI</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (JvmtiExport::should_post_thread_life()) &#123;</span><br><span class=\"line\">       JvmtiExport::post_thread_start(thread);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    EventThreadStart event;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (event.should_commit()) &#123;</span><br><span class=\"line\">      event.set_javalangthread(java_lang_Thread::thread_id(thread-&gt;threadObj()));</span><br><span class=\"line\">      event.commit();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 略去部分内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>这里调用了<code>hotspot/src/share/vm/runtime/thread.cpp</code>的<code>create_vm</code>方法：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jint Threads::create_vm(JavaVMInitArgs* args, <span class=\"keyword\">bool</span>* canTryAgain) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">extern</span> <span class=\"keyword\">void</span> <span class=\"title\">JDK_Version_init</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Check version</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!is_supported_jni_version(args-&gt;version)) <span class=\"keyword\">return</span> JNI_EVERSION;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize the output stream module</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化输出流</span></span><br><span class=\"line\">  ostream_init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Process java launcher properties.</span></span><br><span class=\"line\">  <span class=\"comment\">// 处理Java启动参数，如-Dsun.java.launcher*</span></span><br><span class=\"line\">  Arguments::process_sun_java_launcher_properties(args);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize the os module before using TLS</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化操作系统模块，如页大小，处理器数量，系统时钟等</span></span><br><span class=\"line\">  os::init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize system properties.</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化系统属性，其中分为【可读属性】和【可读写属性】</span></span><br><span class=\"line\">  <span class=\"comment\">// 可读属性：</span></span><br><span class=\"line\">  <span class=\"comment\">// java.vm.specification.name</span></span><br><span class=\"line\">  <span class=\"comment\">// java.vm.version</span></span><br><span class=\"line\">  <span class=\"comment\">// java.vm.name</span></span><br><span class=\"line\">  <span class=\"comment\">// java.vm.info</span></span><br><span class=\"line\">  <span class=\"comment\">// 可读写属性：</span></span><br><span class=\"line\">  <span class=\"comment\">// java.ext.dirs</span></span><br><span class=\"line\">  <span class=\"comment\">// java.endorsed.dirs</span></span><br><span class=\"line\">  <span class=\"comment\">// sun.boot.library.path</span></span><br><span class=\"line\">  <span class=\"comment\">// java.library.path</span></span><br><span class=\"line\">  <span class=\"comment\">// java.home</span></span><br><span class=\"line\">  <span class=\"comment\">// sun.boot.class.path</span></span><br><span class=\"line\">  <span class=\"comment\">// java.class.path</span></span><br><span class=\"line\">  Arguments::init_system_properties();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// So that JDK version can be used as a discrimintor when parsing arguments</span></span><br><span class=\"line\">  JDK_Version_init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Update/Initialize System properties after JDK version number is known</span></span><br><span class=\"line\">  <span class=\"comment\">// 设置java.vm.specification.vendor属性（1.6之前是Sun Microsystems Inc. 1.7之后是Oracle Corporation）</span></span><br><span class=\"line\">  <span class=\"comment\">// 设置java.vm.specification.version和java.vm.vendor属性</span></span><br><span class=\"line\">  Arguments::init_version_specific_system_properties();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Parse arguments</span></span><br><span class=\"line\">  <span class=\"comment\">// 解析启动参数，如-XX:Flags=、-XX:+PrintVMOptions、-XX:+PrintFlagsInitial etc.</span></span><br><span class=\"line\">  jint parse_result = Arguments::parse(args);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (parse_result != JNI_OK) <span class=\"keyword\">return</span> parse_result;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (PauseAtStartup) &#123;</span><br><span class=\"line\">    os::pause();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> USDT2</span></span><br><span class=\"line\">  HS_DTRACE_PROBE(hotspot, vm__init__begin);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span> <span class=\"comment\">/* USDT2 */</span></span></span><br><span class=\"line\">  HOTSPOT_VM_INIT_BEGIN();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* USDT2 */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Record VM creation timing statistics</span></span><br><span class=\"line\">  TraceVmCreationTime create_vm_timer;</span><br><span class=\"line\">  create_vm_timer.start();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Timing (must come after argument parsing)</span></span><br><span class=\"line\">  <span class=\"function\">TraceTime <span class=\"title\">timer</span><span class=\"params\">(<span class=\"string\">\"Create VM\"</span>, TraceStartupTime)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize the os module after parsing the args</span></span><br><span class=\"line\">  jint os_init_2_result = os::init_2();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (os_init_2_result != JNI_OK) <span class=\"keyword\">return</span> os_init_2_result;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// intialize TLS</span></span><br><span class=\"line\">  ThreadLocalStorage::init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Bootstrap native memory tracking, so it can start recording memory</span></span><br><span class=\"line\">  <span class=\"comment\">// activities before worker thread is started. This is the first phase</span></span><br><span class=\"line\">  <span class=\"comment\">// of bootstrapping, VM is currently running in single-thread mode.</span></span><br><span class=\"line\">  MemTracker::bootstrap_single_thread();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize output stream logging</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化GC日志输出流，用来处理-Xloggc参数</span></span><br><span class=\"line\">  ostream_init_log();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Convert -Xrun to -agentlib: if there is no JVM_OnLoad</span></span><br><span class=\"line\">  <span class=\"comment\">// Must be before create_vm_init_agents()</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (Arguments::init_libraries_at_startup()) &#123;</span><br><span class=\"line\">    convert_vm_init_libraries_to_agents();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Launch -agentlib/-agentpath and converted -Xrun agents</span></span><br><span class=\"line\">  <span class=\"comment\">// 加载agent库</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (Arguments::init_agents_at_startup()) &#123;</span><br><span class=\"line\">    create_vm_init_agents();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize Threads state</span></span><br><span class=\"line\">  _thread_list = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  _number_of_threads = <span class=\"number\">0</span>;</span><br><span class=\"line\">  _number_of_non_daemon_threads = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize global data structures and create system classes in heap</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化全局数据数据结构及系统类，包括：</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化Java基础类型</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化时间队列</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化锁</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化chunkpool</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化性能数据统计模块</span></span><br><span class=\"line\">  vm_init_globals();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Attach the main thread to this os thread</span></span><br><span class=\"line\">  JavaThread* main_thread = <span class=\"keyword\">new</span> JavaThread();</span><br><span class=\"line\">  main_thread-&gt;set_thread_state(_thread_in_vm);</span><br><span class=\"line\">  main_thread-&gt;record_stack_base_and_size();</span><br><span class=\"line\">  main_thread-&gt;initialize_thread_local_storage();</span><br><span class=\"line\"></span><br><span class=\"line\">  main_thread-&gt;set_active_handles(JNIHandleBlock::allocate_block());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!main_thread-&gt;set_as_starting_thread()) &#123;</span><br><span class=\"line\">    vm_shutdown_during_initialization(</span><br><span class=\"line\">      <span class=\"string\">\"Failed necessary internal allocation. Out of swap space\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> main_thread;</span><br><span class=\"line\">    *canTryAgain = <span class=\"literal\">false</span>; <span class=\"comment\">// don't let caller call JNI_CreateJavaVM again</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> JNI_ENOMEM;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Enable guard page *after* os::create_main_thread(), otherwise it would</span></span><br><span class=\"line\">  <span class=\"comment\">// crash Linux VM, see notes in os_linux.cpp.</span></span><br><span class=\"line\">  main_thread-&gt;create_stack_guard_pages();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize Java-Level synchronization subsystem</span></span><br><span class=\"line\">  ObjectMonitor::Initialize() ;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Second phase of bootstrapping, VM is about entering multi-thread mode</span></span><br><span class=\"line\">  MemTracker::bootstrap_multi_thread();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize global modules</span></span><br><span class=\"line\">  <span class=\"comment\">// ========================================</span></span><br><span class=\"line\">  <span class=\"comment\">// IMPORTANT!!! 初始化全局模块</span></span><br><span class=\"line\">  <span class=\"comment\">// ========================================</span></span><br><span class=\"line\">  jint status = init_globals();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status != JNI_OK) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> main_thread;</span><br><span class=\"line\">    *canTryAgain = <span class=\"literal\">false</span>; <span class=\"comment\">// don't let caller call JNI_CreateJavaVM again</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> status;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Should be done after the heap is fully created</span></span><br><span class=\"line\">  main_thread-&gt;cache_global_variables();</span><br><span class=\"line\"></span><br><span class=\"line\">  HandleMark hm;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123; <span class=\"function\">MutexLocker <span class=\"title\">mu</span><span class=\"params\">(Threads_lock)</span></span>;</span><br><span class=\"line\">    Threads::add(main_thread);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Any JVMTI raw monitors entered in onload will transition into</span></span><br><span class=\"line\">  <span class=\"comment\">// real raw monitor. VM is setup enough here for raw monitor enter.</span></span><br><span class=\"line\">  JvmtiExport::transition_pending_onload_raw_monitors();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Fully start NMT</span></span><br><span class=\"line\">  MemTracker::start();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Create the VMThread</span></span><br><span class=\"line\">  &#123; <span class=\"function\">TraceTime <span class=\"title\">timer</span><span class=\"params\">(<span class=\"string\">\"Start VMThread\"</span>, TraceStartupTime)</span></span>;</span><br><span class=\"line\">    VMThread::create();</span><br><span class=\"line\">    Thread* vmthread = VMThread::vm_thread();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!os::create_thread(vmthread, os::vm_thread))</span><br><span class=\"line\">      vm_exit_during_initialization(<span class=\"string\">\"Cannot create VM thread. Out of system resources.\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Wait for the VM thread to become ready, and VMThread::run to initialize</span></span><br><span class=\"line\">    <span class=\"comment\">// Monitors can have spurious returns, must always check another state flag</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"function\">MutexLocker <span class=\"title\">ml</span><span class=\"params\">(Notify_lock)</span></span>;</span><br><span class=\"line\">      os::start_thread(vmthread);</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (vmthread-&gt;active_handles() == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        Notify_lock-&gt;wait();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  assert (Universe::is_fully_initialized(), <span class=\"string\">\"not initialized\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (VerifyBeforeGC &amp;&amp; VerifyGCStartAt == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    Universe::heap()-&gt;prepare_for_verify();</span><br><span class=\"line\">    Universe::verify();   <span class=\"comment\">// make sure we're starting with a clean slate</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  EXCEPTION_MARK;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// At this point, the Universe is initialized, but we have not executed</span></span><br><span class=\"line\">  <span class=\"comment\">// any byte code.  Now is a good time (the only time) to dump out the</span></span><br><span class=\"line\">  <span class=\"comment\">// internal state of the JVM for sharing.</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (DumpSharedSpaces) &#123;</span><br><span class=\"line\">    Universe::heap()-&gt;preload_and_dump(CHECK_0);</span><br><span class=\"line\">    ShouldNotReachHere();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Always call even when there are not JVMTI environments yet, since environments</span></span><br><span class=\"line\">  <span class=\"comment\">// may be attached late and JVMTI must track phases of VM execution</span></span><br><span class=\"line\">  JvmtiExport::enter_start_phase();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Notify JVMTI agents that VM has started (JNI is up) - nop if no agents.</span></span><br><span class=\"line\">  JvmtiExport::post_vm_start();</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"function\">TraceTime <span class=\"title\">timer</span><span class=\"params\">(<span class=\"string\">\"Initialize java.lang classes\"</span>, TraceStartupTime)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (EagerXrunInit &amp;&amp; Arguments::init_libraries_at_startup()) &#123;</span><br><span class=\"line\">      create_vm_init_libraries();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (InitializeJavaLangString) &#123;</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_String(), CHECK_0);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.String not initialized\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Initialize java_lang.System (needed before creating the thread)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (InitializeJavaLangSystem) &#123;</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_System(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_ThreadGroup(), CHECK_0);</span><br><span class=\"line\">      Handle thread_group = create_initial_thread_group(CHECK_0);</span><br><span class=\"line\">      Universe::set_main_thread_group(thread_group());</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_Thread(), CHECK_0);</span><br><span class=\"line\">      oop thread_object = create_initial_thread(thread_group, main_thread, CHECK_0);</span><br><span class=\"line\">      main_thread-&gt;set_threadObj(thread_object);</span><br><span class=\"line\">      <span class=\"comment\">// Set thread status to running since main thread has</span></span><br><span class=\"line\">      <span class=\"comment\">// been started and running.</span></span><br><span class=\"line\">      java_lang_Thread::set_thread_status(thread_object,</span><br><span class=\"line\">                                          java_lang_Thread::RUNNABLE);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// The VM preresolve methods to these classes. Make sure that get initialized</span></span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_reflect_Method(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_ref_Finalizer(),  CHECK_0);</span><br><span class=\"line\">      <span class=\"comment\">// The VM creates &amp; returns objects of this class. Make sure it's initialized.</span></span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_Class(), CHECK_0);</span><br><span class=\"line\">      call_initializeSystemClass(CHECK_0);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// get the Java runtime name after java.lang.System is initialized</span></span><br><span class=\"line\">      JDK_Version::set_runtime_name(get_java_runtime_name(THREAD));</span><br><span class=\"line\">      JDK_Version::set_runtime_version(get_java_runtime_version(THREAD));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.System not initialized\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// an instance of OutOfMemory exception has been allocated earlier</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (InitializeJavaLangExceptionsErrors) &#123;</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_OutOfMemoryError(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_NullPointerException(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_ClassCastException(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_ArrayStoreException(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_ArithmeticException(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_StackOverflowError(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_IllegalMonitorStateException(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_IllegalArgumentException(), CHECK_0);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.OutOfMemoryError has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.NullPointerException has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.ClassCastException has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.ArrayStoreException has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.ArithmeticException has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.StackOverflowError has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.IllegalArgumentException has not been initialized\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  initialize_class(vmSymbols::java_lang_Compiler(), CHECK_0);</span><br><span class=\"line\"></span><br><span class=\"line\">  reset_vm_info_property(CHECK_0);</span><br><span class=\"line\"></span><br><span class=\"line\">  quicken_jni_functions();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Must be run after init_ft which initializes ft_enabled</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (TRACE_INITIALIZE() != JNI_OK) &#123;</span><br><span class=\"line\">    vm_exit_during_initialization(<span class=\"string\">\"Failed to initialize tracing backend\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Set flag that basic initialization has completed. Used by exceptions and various</span></span><br><span class=\"line\">  <span class=\"comment\">// debug stuff, that does not work until all basic classes have been initialized.</span></span><br><span class=\"line\">  set_init_completed();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> USDT2</span></span><br><span class=\"line\">  HS_DTRACE_PROBE(hotspot, vm__init__end);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span> <span class=\"comment\">/* USDT2 */</span></span></span><br><span class=\"line\">  HOTSPOT_VM_INIT_END();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* USDT2 */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// record VM initialization completion time</span></span><br><span class=\"line\">  <span class=\"comment\">// 向VM管理模块发送初始化完成信号</span></span><br><span class=\"line\">  Management::record_vm_init_completed();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Compute system loader. Note that this has to occur after set_init_completed, since</span></span><br><span class=\"line\">  <span class=\"comment\">// valid exceptions may be thrown in the process.</span></span><br><span class=\"line\">  <span class=\"comment\">// Note that we do not use CHECK_0 here since we are inside an EXCEPTION_MARK and</span></span><br><span class=\"line\">  <span class=\"comment\">// set_init_completed has just been called, causing exceptions not to be shortcut</span></span><br><span class=\"line\">  <span class=\"comment\">// anymore. We call vm_exit_during_initialization directly instead.</span></span><br><span class=\"line\">  <span class=\"comment\">// 载入classloader</span></span><br><span class=\"line\">  SystemDictionary::compute_java_system_loader(THREAD);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (HAS_PENDING_EXCEPTION) &#123;</span><br><span class=\"line\">    vm_exit_during_initialization(Handle(THREAD, PENDING_EXCEPTION));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> SERIALGC</span></span><br><span class=\"line\">  <span class=\"comment\">// Support for ConcurrentMarkSweep. This should be cleaned up</span></span><br><span class=\"line\">  <span class=\"comment\">// and better encapsulated. The ugly nested if test would go away</span></span><br><span class=\"line\">  <span class=\"comment\">// once things are properly refactored. XXX YSR</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseConcMarkSweepGC || UseG1GC) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (UseConcMarkSweepGC) &#123;</span><br><span class=\"line\">      ConcurrentMarkSweepThread::makeSurrogateLockerThread(THREAD);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      ConcurrentMarkThread::makeSurrogateLockerThread(THREAD);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (HAS_PENDING_EXCEPTION) &#123;</span><br><span class=\"line\">      vm_exit_during_initialization(Handle(THREAD, PENDING_EXCEPTION));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Always call even when there are not JVMTI environments yet, since environments</span></span><br><span class=\"line\">  <span class=\"comment\">// may be attached late and JVMTI must track phases of VM execution</span></span><br><span class=\"line\">  JvmtiExport::enter_live_phase();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Signal Dispatcher needs to be started before VMInit event is posted</span></span><br><span class=\"line\">  <span class=\"comment\">// 启动一个叫做“信号分发器”的线程用来处理进程间的信号</span></span><br><span class=\"line\">  <span class=\"comment\">// 比如通过jstack获取一个jvm实例的栈信息</span></span><br><span class=\"line\">  os::signal_init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Start Attach Listener if +StartAttachListener or it can't be started lazily</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!DisableAttachMechanism) &#123;</span><br><span class=\"line\">    AttachListener::vm_start();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (StartAttachListener || AttachListener::init_at_startup()) &#123;</span><br><span class=\"line\">      AttachListener::init();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Launch -Xrun agents</span></span><br><span class=\"line\">  <span class=\"comment\">// Must be done in the JVMTI live phase so that for backward compatibility the JDWP</span></span><br><span class=\"line\">  <span class=\"comment\">// back-end can launch with -Xdebug -Xrunjdwp.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!EagerXrunInit &amp;&amp; Arguments::init_libraries_at_startup()) &#123;</span><br><span class=\"line\">    create_vm_init_libraries();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Notify JVMTI agents that VM initialization is complete - nop if no agents.</span></span><br><span class=\"line\">  JvmtiExport::post_vm_initialized();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (TRACE_START() != JNI_OK) &#123;</span><br><span class=\"line\">    vm_exit_during_initialization(<span class=\"string\">\"Failed to start tracing backend.\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (CleanChunkPoolAsync) &#123;</span><br><span class=\"line\">    Chunk::start_chunk_pool_cleaner_task();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// initialize compiler(s)</span></span><br><span class=\"line\">  CompileBroker::compilation_init();</span><br><span class=\"line\">  <span class=\"comment\">// 加载sun.management.Agent类并调用startAgent方法开启管理服务</span></span><br><span class=\"line\">  Management::initialize(THREAD);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (HAS_PENDING_EXCEPTION) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// management agent fails to start possibly due to</span></span><br><span class=\"line\">    <span class=\"comment\">// configuration problem and is responsible for printing</span></span><br><span class=\"line\">    <span class=\"comment\">// stack trace if appropriate. Simply exit VM.</span></span><br><span class=\"line\">    vm_exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (Arguments::has_profile())       FlatProfiler::engage(main_thread, <span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (Arguments::has_alloc_profile()) AllocationProfiler::engage();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (MemProfiling)                   MemProfiler::engage();</span><br><span class=\"line\">  StatSampler::engage();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (CheckJNICalls)                  JniPeriodicChecker::engage();</span><br><span class=\"line\"></span><br><span class=\"line\">  BiasedLocking::init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (JDK_Version::current().post_vm_init_hook_enabled()) &#123;</span><br><span class=\"line\">    call_postVMInitHook(THREAD);</span><br><span class=\"line\">    <span class=\"comment\">// The Java side of PostVMInitHook.run must deal with all</span></span><br><span class=\"line\">    <span class=\"comment\">// exceptions and provide means of diagnosis.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (HAS_PENDING_EXCEPTION) &#123;</span><br><span class=\"line\">      CLEAR_PENDING_EXCEPTION;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"function\">MutexLockerEx <span class=\"title\">ml</span><span class=\"params\">(PeriodicTask_lock, Mutex::_no_safepoint_check_flag)</span></span>;</span><br><span class=\"line\">      <span class=\"comment\">// Make sure the watcher thread can be started by WatcherThread::start()</span></span><br><span class=\"line\">      <span class=\"comment\">// or by dynamic enrollment.</span></span><br><span class=\"line\">      WatcherThread::make_startable();</span><br><span class=\"line\">      <span class=\"comment\">// Start up the WatcherThread if there are any periodic tasks</span></span><br><span class=\"line\">      <span class=\"comment\">// <span class=\"doctag\">NOTE:</span>  All PeriodicTasks should be registered by now. If they</span></span><br><span class=\"line\">      <span class=\"comment\">//   aren't, late joiners might appear to start slowly (we might</span></span><br><span class=\"line\">      <span class=\"comment\">//   take a while to process their first tick).</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (PeriodicTask::num_tasks() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          WatcherThread::start();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Give os specific code one last chance to start</span></span><br><span class=\"line\">  os::init_3();</span><br><span class=\"line\"></span><br><span class=\"line\">  create_vm_timer.end();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> JNI_OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中<code>init_globals()</code>方法位于<code>hotspot/src/share/vm/runtime/init.cpp</code>用来初始化全局模块:<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">jint <span class=\"title\">init_globals</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  HandleMark hm;</span><br><span class=\"line\">  <span class=\"comment\">// 初始化各子系统的监控及管理服务</span></span><br><span class=\"line\">  <span class=\"comment\">// JMX、线程和同步子系统、类加载子系统的监控和管理</span></span><br><span class=\"line\">  management_init();</span><br><span class=\"line\">  <span class=\"comment\">// 初始化字节码表，如istore、iload、iadd</span></span><br><span class=\"line\">  bytecodes_init();</span><br><span class=\"line\">  <span class=\"comment\">// 类加载器初始化</span></span><br><span class=\"line\">  classLoader_init();</span><br><span class=\"line\">  <span class=\"comment\">// 代码缓存池初始化</span></span><br><span class=\"line\">  codeCache_init();</span><br><span class=\"line\">  <span class=\"comment\">// VM版本初始化</span></span><br><span class=\"line\">  VM_Version_init();</span><br><span class=\"line\">  <span class=\"comment\">// 系统初始化</span></span><br><span class=\"line\">  os_init_globals();</span><br><span class=\"line\">  stubRoutines_init1();</span><br><span class=\"line\">  <span class=\"comment\">// ============================</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化堆以及决定所使用GC策略</span></span><br><span class=\"line\">  <span class=\"comment\">// ============================</span></span><br><span class=\"line\">  jint status = universe_init();  <span class=\"comment\">// dependent on codeCache_init and</span></span><br><span class=\"line\">                                  <span class=\"comment\">// stubRoutines_init1</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status != JNI_OK)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> status;</span><br><span class=\"line\">  <span class=\"comment\">// 初始化解析器</span></span><br><span class=\"line\">  interpreter_init();  <span class=\"comment\">// before any methods loaded</span></span><br><span class=\"line\">  invocationCounter_init();  <span class=\"comment\">// before any methods loaded</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化MarkSweep</span></span><br><span class=\"line\">  marksweep_init();</span><br><span class=\"line\">  accessFlags_init();</span><br><span class=\"line\">  <span class=\"comment\">// 初始化操作码模板表</span></span><br><span class=\"line\">  templateTable_init();</span><br><span class=\"line\">  InterfaceSupport_init();</span><br><span class=\"line\">  SharedRuntime::generate_stubs();</span><br><span class=\"line\">  <span class=\"comment\">// 初始化语法表及系统字典等</span></span><br><span class=\"line\">  universe2_init();  <span class=\"comment\">// dependent on codeCache_init and stubRoutines_init1</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化软引用时间戳表并设定软引用清除策略</span></span><br><span class=\"line\">  referenceProcessor_init();</span><br><span class=\"line\">  jni_handles_init();</span><br><span class=\"line\">  <span class=\"comment\">// 代码数据结构的必要性检查（仅限debug版本）</span></span><br><span class=\"line\">  vmStructs_init();</span><br><span class=\"line\">  vtableStubs_init();</span><br><span class=\"line\">  InlineCacheBuffer_init();</span><br><span class=\"line\">  <span class=\"comment\">// oracle编译器初始化（oracle编译器是一个编译器开关接口）</span></span><br><span class=\"line\">  compilerOracle_init();</span><br><span class=\"line\">  <span class=\"comment\">// 初始化编译策略（根据启动参数决定编译策略）</span></span><br><span class=\"line\">  compilationPolicy_init();</span><br><span class=\"line\">  compileBroker_init();</span><br><span class=\"line\">  VMRegImpl::set_regName();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!universe_post_init()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> JNI_ERR;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  javaClasses_init();   <span class=\"comment\">// must happen after vtable initialization</span></span><br><span class=\"line\">  stubRoutines_init2(); <span class=\"comment\">// note: StubRoutines need 2-phase init</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// All the flags that get adjusted by VM_Version_init and os::init_2</span></span><br><span class=\"line\">  <span class=\"comment\">// have been set so dump the flags now.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (PrintFlagsFinal) &#123;</span><br><span class=\"line\">    CommandLineFlags::printFlags(tty, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> JNI_OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>其中<code>universe_init()</code>方法位于<code>hotspot/src/share/vm/memory/universe.cpp</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">jint <span class=\"title\">universe_init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  assert(!Universe::_fully_initialized, <span class=\"string\">\"called after initialize_vtables\"</span>);</span><br><span class=\"line\">  guarantee(<span class=\"number\">1</span> &lt;&lt; LogHeapWordSize == <span class=\"keyword\">sizeof</span>(HeapWord),</span><br><span class=\"line\">         <span class=\"string\">\"LogHeapWordSize is incorrect.\"</span>);</span><br><span class=\"line\">  guarantee(<span class=\"keyword\">sizeof</span>(oop) &gt;= <span class=\"keyword\">sizeof</span>(HeapWord), <span class=\"string\">\"HeapWord larger than oop?\"</span>);</span><br><span class=\"line\">  guarantee(<span class=\"keyword\">sizeof</span>(oop) % <span class=\"keyword\">sizeof</span>(HeapWord) == <span class=\"number\">0</span>,</span><br><span class=\"line\">            <span class=\"string\">\"oop size is not not a multiple of HeapWord size\"</span>);</span><br><span class=\"line\">  <span class=\"function\">TraceTime <span class=\"title\">timer</span><span class=\"params\">(<span class=\"string\">\"Genesis\"</span>, TraceStartupTime)</span></span>;</span><br><span class=\"line\">  GC_locker::lock();  <span class=\"comment\">// do not allow gc during bootstrapping</span></span><br><span class=\"line\">  JavaClasses::compute_hard_coded_offsets();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Get map info from shared archive file.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (DumpSharedSpaces)</span><br><span class=\"line\">    UseSharedSpaces = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  FileMapInfo* mapinfo = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseSharedSpaces) &#123;</span><br><span class=\"line\">    mapinfo = NEW_C_HEAP_OBJ(FileMapInfo, mtInternal);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(mapinfo, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(FileMapInfo));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Open the shared archive file, read and validate the header. If</span></span><br><span class=\"line\">    <span class=\"comment\">// initialization files, shared spaces [UseSharedSpaces] are</span></span><br><span class=\"line\">    <span class=\"comment\">// disabled and the file is closed.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mapinfo-&gt;initialize()) &#123;</span><br><span class=\"line\">      FileMapInfo::set_current_info(mapinfo);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      assert(!mapinfo-&gt;is_open() &amp;&amp; !UseSharedSpaces,</span><br><span class=\"line\">             <span class=\"string\">\"archive file not closed or shared spaces not disabled.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//===================================</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化堆</span></span><br><span class=\"line\">  <span class=\"comment\">// 包括创建及初始化各分区代，设定空间比例大小，回收策略等</span></span><br><span class=\"line\">  <span class=\"comment\">// 流程：根据启动参数决定使用的回收策略，初始化回收策略时会指定所使用的代规范，</span></span><br><span class=\"line\">  <span class=\"comment\">//       最后根据规范创建对应类型的回收堆。i.e.</span></span><br><span class=\"line\">  <span class=\"comment\">//      arguments -&gt; policy -&gt; spec -&gt; heap</span></span><br><span class=\"line\">  <span class=\"comment\">//===================================</span></span><br><span class=\"line\">  jint status = Universe::initialize_heap();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status != JNI_OK) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> status;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// We have a heap so create the methodOop caches before</span></span><br><span class=\"line\">  <span class=\"comment\">// CompactingPermGenGen::initialize_oops() tries to populate them.</span></span><br><span class=\"line\">  Universe::_finalizer_register_cache = <span class=\"keyword\">new</span> LatestMethodOopCache();</span><br><span class=\"line\">  Universe::_loader_addClass_cache    = <span class=\"keyword\">new</span> LatestMethodOopCache();</span><br><span class=\"line\">  Universe::_pd_implies_cache         = <span class=\"keyword\">new</span> LatestMethodOopCache();</span><br><span class=\"line\">  Universe::_reflect_invoke_cache     = <span class=\"keyword\">new</span> ActiveMethodOopsCache();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseSharedSpaces) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Read the data structures supporting the shared spaces (shared</span></span><br><span class=\"line\">    <span class=\"comment\">// system dictionary, symbol table, etc.).  After that, access to</span></span><br><span class=\"line\">    <span class=\"comment\">// the file (other than the mapped regions) is no longer needed, and</span></span><br><span class=\"line\">    <span class=\"comment\">// the file is closed. Closing the file does not affect the</span></span><br><span class=\"line\">    <span class=\"comment\">// currently mapped regions.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    CompactingPermGenGen::initialize_oops();</span><br><span class=\"line\">    mapinfo-&gt;close();</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    SymbolTable::create_table();</span><br><span class=\"line\">    StringTable::create_table();</span><br><span class=\"line\">    ClassLoader::create_package_info_table();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> JNI_OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>initialize_heap()方法如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jint Universe::initialize_heap() &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 如果使用并行GC</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseParallelGC) &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> SERIALGC</span></span><br><span class=\"line\">    <span class=\"comment\">// 回收堆类型使用并行回收堆</span></span><br><span class=\"line\">    Universe::_collectedHeap = <span class=\"keyword\">new</span> ParallelScavengeHeap();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span>  <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\">    fatal(<span class=\"string\">\"UseParallelGC not supported in java kernel vm.\"</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (UseG1GC) &#123;</span><br><span class=\"line\">#ifndef SERIALGC</span><br><span class=\"line\">    <span class=\"comment\">// 如果使用G1回收，设定回收器策略和回收堆类型为G1CollectorPolicy和G1CollectedHeap</span></span><br><span class=\"line\">    G1CollectorPolicy* g1p = <span class=\"keyword\">new</span> G1CollectorPolicy();</span><br><span class=\"line\">    G1CollectedHeap* g1h = <span class=\"keyword\">new</span> G1CollectedHeap(g1p);</span><br><span class=\"line\">    Universe::_collectedHeap = g1h;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span>  <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\">    fatal(<span class=\"string\">\"UseG1GC not supported in java kernel vm.\"</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    GenCollectorPolicy *gc_policy;</span><br><span class=\"line\">    <span class=\"comment\">// 使用串行回收</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (UseSerialGC) &#123;</span><br><span class=\"line\">      gc_policy = <span class=\"keyword\">new</span> MarkSweepPolicy();</span><br><span class=\"line\">    <span class=\"comment\">// 使用并发回收</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (UseConcMarkSweepGC) &#123;</span><br><span class=\"line\">#ifndef SERIALGC</span><br><span class=\"line\">      <span class=\"comment\">// 是否使用自适应策略</span></span><br><span class=\"line\">      <span class=\"comment\">// ASConcurrentMarkSweepPolicy继承自ConcurrentMarkSweepPolicy，</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (UseAdaptiveSizePolicy) &#123;</span><br><span class=\"line\">        gc_policy = <span class=\"keyword\">new</span> ASConcurrentMarkSweepPolicy();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        gc_policy = <span class=\"keyword\">new</span> ConcurrentMarkSweepPolicy();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span>   <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\">    fatal(<span class=\"string\">\"UseConcMarkSweepGC not supported in java kernel vm.\"</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\">    <span class=\"comment\">// 默认使用标记清除算法</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// default old generation</span></span><br><span class=\"line\">      gc_policy = <span class=\"keyword\">new</span> MarkSweepPolicy();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 回收策略类型体系图</span></span><br><span class=\"line\">    <span class=\"comment\">// AllocatedObj</span></span><br><span class=\"line\">    <span class=\"comment\">//    └── CHeapObj</span></span><br><span class=\"line\">    <span class=\"comment\">//        └── CollectorPolicy</span></span><br><span class=\"line\">    <span class=\"comment\">//            └── GenCollectorPolicy</span></span><br><span class=\"line\">    <span class=\"comment\">//                └── TwoGenerationCollectorPolicy</span></span><br><span class=\"line\">    <span class=\"comment\">//                    └── ConcurrentMarkSweepPolicy</span></span><br><span class=\"line\">    <span class=\"comment\">//                        └── ASConcurrentMarkSweepPolicy</span></span><br><span class=\"line\">    Universe::_collectedHeap = <span class=\"keyword\">new</span> GenCollectedHeap(gc_policy);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//===================================</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化堆空间</span></span><br><span class=\"line\">  <span class=\"comment\">// 这里调用GenCollectedHeap::initialize()方法， 真正向操作系统申请内存</span></span><br><span class=\"line\">  <span class=\"comment\">//===================================</span></span><br><span class=\"line\">  jint status = Universe::heap()-&gt;initialize();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status != JNI_OK) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> status;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> _LP64</span></span><br><span class=\"line\">  <span class=\"comment\">// 在LP64数据模型下是否开启对象指针压缩</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseCompressedOops) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Subtract a page because something can get allocated at heap base.</span></span><br><span class=\"line\">    <span class=\"comment\">// This also makes implicit null checking work, because the</span></span><br><span class=\"line\">    <span class=\"comment\">// memory+1 page below heap_base needs to cause a signal.</span></span><br><span class=\"line\">    <span class=\"comment\">// See needs_explicit_null_check.</span></span><br><span class=\"line\">    <span class=\"comment\">// Only set the heap base for compressed oops because it indicates</span></span><br><span class=\"line\">    <span class=\"comment\">// compressed oops for pstack code.</span></span><br><span class=\"line\">    <span class=\"keyword\">bool</span> verbose = PrintCompressedOopsMode || (PrintMiscellaneous &amp;&amp; Verbose);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verbose) &#123;</span><br><span class=\"line\">      tty-&gt;cr();</span><br><span class=\"line\">      tty-&gt;print(<span class=\"string\">\"heap address: \"</span> PTR_FORMAT <span class=\"string\">\", size: \"</span> SIZE_FORMAT <span class=\"string\">\" MB\"</span>,</span><br><span class=\"line\">                 Universe::heap()-&gt;base(), Universe::heap()-&gt;reserved_region().byte_size()/M);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">uint64_t</span>)Universe::heap()-&gt;reserved_region().end() &gt; OopEncodingHeapMax) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Can't reserve heap below 32Gb.</span></span><br><span class=\"line\">      Universe::set_narrow_oop_base(Universe::heap()-&gt;base() - os::vm_page_size());</span><br><span class=\"line\">      Universe::set_narrow_oop_shift(LogMinObjAlignmentInBytes);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (verbose) &#123;</span><br><span class=\"line\">        tty-&gt;print(<span class=\"string\">\", %s: \"</span>PTR_FORMAT,</span><br><span class=\"line\">            narrow_oop_mode_to_string(HeapBasedNarrowOop),</span><br><span class=\"line\">            Universe::narrow_oop_base());</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      Universe::set_narrow_oop_base(<span class=\"number\">0</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (verbose) &#123;</span><br><span class=\"line\">        tty-&gt;print(<span class=\"string\">\", %s\"</span>, narrow_oop_mode_to_string(ZeroBasedNarrowOop));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> _WIN64</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!Universe::narrow_oop_use_implicit_null_checks()) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Don't need guard page for implicit checks in indexed addressing</span></span><br><span class=\"line\">        <span class=\"comment\">// mode with zero based Compressed Oops.</span></span><br><span class=\"line\">        Universe::set_narrow_oop_use_implicit_null_checks(<span class=\"literal\">true</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">//  _WIN64</span></span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>((<span class=\"keyword\">uint64_t</span>)Universe::heap()-&gt;reserved_region().end() &gt; NarrowOopHeapMax) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Can't reserve heap below 4Gb.</span></span><br><span class=\"line\">        Universe::set_narrow_oop_shift(LogMinObjAlignmentInBytes);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        Universe::set_narrow_oop_shift(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (verbose) &#123;</span><br><span class=\"line\">          tty-&gt;print(<span class=\"string\">\", %s\"</span>, narrow_oop_mode_to_string(UnscaledNarrowOop));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verbose) &#123;</span><br><span class=\"line\">      tty-&gt;cr();</span><br><span class=\"line\">      tty-&gt;cr();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  assert(Universe::narrow_oop_base() == (Universe::heap()-&gt;base() - os::vm_page_size()) ||</span><br><span class=\"line\">         Universe::narrow_oop_base() == <span class=\"literal\">NULL</span>, <span class=\"string\">\"invalid value\"</span>);</span><br><span class=\"line\">  assert(Universe::narrow_oop_shift() == LogMinObjAlignmentInBytes ||</span><br><span class=\"line\">         Universe::narrow_oop_shift() == <span class=\"number\">0</span>, <span class=\"string\">\"invalid value\"</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// We will never reach the CATCH below since Exceptions::_throw will cause</span></span><br><span class=\"line\">  <span class=\"comment\">// the VM to exit if an exception is thrown during initialization</span></span><br><span class=\"line\">  <span class=\"comment\">// 如果使用TLAB则对其进行初始化</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseTLAB) &#123;</span><br><span class=\"line\">    assert(Universe::heap()-&gt;supports_tlab_allocation(),</span><br><span class=\"line\">           <span class=\"string\">\"Should support thread-local allocation buffers\"</span>);</span><br><span class=\"line\">    ThreadLocalAllocBuffer::startup_initialization();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> JNI_OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在上面的代码中<code>Universe::heap()-&gt;initialize()</code>会调用GenCollectedHeap的<code>initialize()</code>方法：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jint GenCollectedHeap::initialize() &#123;</span><br><span class=\"line\">  CollectedHeap::pre_initialize();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">  _n_gens = gen_policy()-&gt;number_of_generations();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// While there are no constraints in the GC code that HeapWordSize</span></span><br><span class=\"line\">  <span class=\"comment\">// be any particular value, there are multiple other areas in the</span></span><br><span class=\"line\">  <span class=\"comment\">// system which believe this to be true (e.g. oop-&gt;object_size in some</span></span><br><span class=\"line\">  <span class=\"comment\">// cases incorrectly returns the size in wordSize units rather than</span></span><br><span class=\"line\">  <span class=\"comment\">// HeapWordSize).</span></span><br><span class=\"line\">  guarantee(HeapWordSize == wordSize, <span class=\"string\">\"HeapWordSize must equal wordSize\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// The heap must be at least as aligned as generations.</span></span><br><span class=\"line\">  <span class=\"keyword\">size_t</span> alignment = Generation::GenGrain;</span><br><span class=\"line\"></span><br><span class=\"line\">  _gen_specs = gen_policy()-&gt;generations();</span><br><span class=\"line\">  PermanentGenerationSpec *perm_gen_spec =</span><br><span class=\"line\">                                collector_policy()-&gt;permanent_generation();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Make sure the sizes are all aligned.</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; _n_gens; i++) &#123;</span><br><span class=\"line\">    _gen_specs[i]-&gt;align(alignment);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  perm_gen_spec-&gt;align(alignment);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// If we are dumping the heap, then allocate a wasted block of address</span></span><br><span class=\"line\">  <span class=\"comment\">// space in order to push the heap to a lower address.  This extra</span></span><br><span class=\"line\">  <span class=\"comment\">// address range allows for other (or larger) libraries to be loaded</span></span><br><span class=\"line\">  <span class=\"comment\">// without them occupying the space required for the shared spaces.</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (DumpSharedSpaces) &#123;</span><br><span class=\"line\">    uintx reserved = <span class=\"number\">0</span>;</span><br><span class=\"line\">    uintx block_size = <span class=\"number\">64</span>*<span class=\"number\">1024</span>*<span class=\"number\">1024</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (reserved &lt; SharedDummyBlockSize) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">char</span>* dummy = os::reserve_memory(block_size);</span><br><span class=\"line\">      reserved += block_size;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Allocate space for the heap.</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">char</span>* heap_address;</span><br><span class=\"line\">  <span class=\"keyword\">size_t</span> total_reserved = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> n_covered_regions = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"function\">ReservedSpace <span class=\"title\">heap_rs</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">  <span class=\"comment\">//分配区域，三个区域:YoungGen,OldGen,PermGen</span></span><br><span class=\"line\">  heap_address = allocate(alignment, perm_gen_spec, &amp;total_reserved,</span><br><span class=\"line\">                          &amp;n_covered_regions, &amp;heap_rs);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseSharedSpaces) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!heap_rs.is_reserved() || heap_address != heap_rs.base()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (heap_rs.is_reserved()) &#123;</span><br><span class=\"line\">        heap_rs.release();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      FileMapInfo* mapinfo = FileMapInfo::current_info();</span><br><span class=\"line\">      mapinfo-&gt;fail_continue(<span class=\"string\">\"Unable to reserve shared region.\"</span>);</span><br><span class=\"line\">      allocate(alignment, perm_gen_spec, &amp;total_reserved, &amp;n_covered_regions,</span><br><span class=\"line\">               &amp;heap_rs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!heap_rs.is_reserved()) &#123;</span><br><span class=\"line\">    vm_shutdown_during_initialization(</span><br><span class=\"line\">      <span class=\"string\">\"Could not reserve enough space for object heap\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> JNI_ENOMEM;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//_reserved区域包括Y,O,P三个区域</span></span><br><span class=\"line\">  _reserved = MemRegion((HeapWord*)heap_rs.base(),</span><br><span class=\"line\">                        (HeapWord*)(heap_rs.base() + heap_rs.size()));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// It is important to do this in a way such that concurrent readers can't</span></span><br><span class=\"line\">  <span class=\"comment\">// temporarily think somethings in the heap.  (Seen this happen in asserts.)</span></span><br><span class=\"line\">  _reserved.set_word_size(<span class=\"number\">0</span>);</span><br><span class=\"line\">  _reserved.set_start((HeapWord*)heap_rs.base());</span><br><span class=\"line\">  <span class=\"keyword\">size_t</span> actual_heap_size = heap_rs.size() - perm_gen_spec-&gt;misc_data_size()</span><br><span class=\"line\">                                           - perm_gen_spec-&gt;misc_code_size();</span><br><span class=\"line\">  _reserved.set_end((HeapWord*)(heap_rs.base() + actual_heap_size));</span><br><span class=\"line\"></span><br><span class=\"line\">  _rem_set = collector_policy()-&gt;create_rem_set(_reserved, n_covered_regions);</span><br><span class=\"line\">  set_barrier_set(rem_set()-&gt;bs());</span><br><span class=\"line\"></span><br><span class=\"line\">  _gch = <span class=\"keyword\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; _n_gens; i++) &#123;</span><br><span class=\"line\">    ReservedSpace this_rs = heap_rs.first_part(_gen_specs[i]-&gt;max_size(),</span><br><span class=\"line\">                                              UseSharedSpaces, UseSharedSpaces);</span><br><span class=\"line\">    _gens[i] = _gen_specs[i]-&gt;init(this_rs, i, rem_set());</span><br><span class=\"line\">    <span class=\"comment\">// tag generations in JavaHeap</span></span><br><span class=\"line\">    MemTracker::record_virtual_memory_type((address)this_rs.base(), mtJavaHeap);</span><br><span class=\"line\">    heap_rs = heap_rs.last_part(_gen_specs[i]-&gt;max_size());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  _perm_gen = perm_gen_spec-&gt;init(heap_rs, PermSize, rem_set());</span><br><span class=\"line\">  <span class=\"comment\">// tag PermGen</span></span><br><span class=\"line\">  MemTracker::record_virtual_memory_type((address)heap_rs.base(), mtJavaHeap);</span><br><span class=\"line\"></span><br><span class=\"line\">  clear_incremental_collection_failed();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> SERIALGC</span></span><br><span class=\"line\">  <span class=\"comment\">// If we are running CMS, create the collector responsible</span></span><br><span class=\"line\">  <span class=\"comment\">// for collecting the CMS generations.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (collector_policy()-&gt;is_concurrent_mark_sweep_policy()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> success = create_cms_collector();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!success) <span class=\"keyword\">return</span> JNI_ENOMEM;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> JNI_OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>至此JVM的初始化全部完成，至于内存策略的计算部分详细内容请阅读Hotspot源码，这里只作抛砖引玉。</p>\n","site":{"data":{}},"excerpt":"<p>接上篇文章从Hotpost源码角度深入分析Java程序启动过程-创建 ，本文将继续介绍JVM启动过程的初始化部分。</p>\n<p>在上篇文章中在执行LoadJavaVM方法的时候将libjvm.so内的方法<code>JNI_CreateJavaVM</code>和<code>JNI_GetDefaultJavaVMInitArgs</code>符号引用挂载到了结构体<code>InvocationFunctions</code>上，并且在执行InitializeJVM方法的时候进行了调用。</p>\n<p>这里执行了JNI调用<code>JNI_CreateJavaVM</code>，文件位于<code>hotspot/src/share/vm/prims/jni.cpp</code>。方法内容如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">_<span class=\"function\">JNI_IMPORT_OR_EXPORT_ jint JNICALL <span class=\"title\">JNI_CreateJavaVM</span><span class=\"params\">(JavaVM **vm, <span class=\"keyword\">void</span> **penv, <span class=\"keyword\">void</span> *args)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// 略去部分非重要内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Certain errors during initialization are recoverable and do not</span></span><br><span class=\"line\"><span class=\"comment\">   * prevent this method from being called again at a later time</span></span><br><span class=\"line\"><span class=\"comment\">   * (perhaps with different arguments).  However, at a certain</span></span><br><span class=\"line\"><span class=\"comment\">   * point during initialization if an error occurs we cannot allow</span></span><br><span class=\"line\"><span class=\"comment\">   * this function to be called again (or it will crash).  In those</span></span><br><span class=\"line\"><span class=\"comment\">   * situations, the 'canTryAgain' flag is set to false, which atomically</span></span><br><span class=\"line\"><span class=\"comment\">   * sets safe_to_recreate_vm to 1, such that any new call to</span></span><br><span class=\"line\"><span class=\"comment\">   * JNI_CreateJavaVM will immediately fail using the above logic.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">bool</span> can_try_again = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"comment\">//========================================</span></span><br><span class=\"line\">  <span class=\"comment\">// 通过Threads模块初始化VM并创建VM线程</span></span><br><span class=\"line\">  <span class=\"comment\">//========================================</span></span><br><span class=\"line\">  result = Threads::create_vm((JavaVMInitArgs*) args, &amp;can_try_again);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (result == JNI_OK) &#123;</span><br><span class=\"line\">    JavaThread *thread = JavaThread::current();</span><br><span class=\"line\">    <span class=\"comment\">/* thread is thread_in_vm here */</span></span><br><span class=\"line\">    *vm = (JavaVM *)(&amp;main_vm);</span><br><span class=\"line\">    *(JNIEnv**)penv = thread-&gt;jni_environment();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Tracks the time application was running before GC</span></span><br><span class=\"line\">    RuntimeService::record_application_start();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Notify JVMTI</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (JvmtiExport::should_post_thread_life()) &#123;</span><br><span class=\"line\">       JvmtiExport::post_thread_start(thread);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    EventThreadStart event;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (event.should_commit()) &#123;</span><br><span class=\"line\">      event.set_javalangthread(java_lang_Thread::thread_id(thread-&gt;threadObj()));</span><br><span class=\"line\">      event.commit();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 略去部分内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","more":"<p>这里调用了<code>hotspot/src/share/vm/runtime/thread.cpp</code>的<code>create_vm</code>方法：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jint Threads::create_vm(JavaVMInitArgs* args, <span class=\"keyword\">bool</span>* canTryAgain) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">extern</span> <span class=\"keyword\">void</span> <span class=\"title\">JDK_Version_init</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Check version</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!is_supported_jni_version(args-&gt;version)) <span class=\"keyword\">return</span> JNI_EVERSION;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize the output stream module</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化输出流</span></span><br><span class=\"line\">  ostream_init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Process java launcher properties.</span></span><br><span class=\"line\">  <span class=\"comment\">// 处理Java启动参数，如-Dsun.java.launcher*</span></span><br><span class=\"line\">  Arguments::process_sun_java_launcher_properties(args);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize the os module before using TLS</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化操作系统模块，如页大小，处理器数量，系统时钟等</span></span><br><span class=\"line\">  os::init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize system properties.</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化系统属性，其中分为【可读属性】和【可读写属性】</span></span><br><span class=\"line\">  <span class=\"comment\">// 可读属性：</span></span><br><span class=\"line\">  <span class=\"comment\">// java.vm.specification.name</span></span><br><span class=\"line\">  <span class=\"comment\">// java.vm.version</span></span><br><span class=\"line\">  <span class=\"comment\">// java.vm.name</span></span><br><span class=\"line\">  <span class=\"comment\">// java.vm.info</span></span><br><span class=\"line\">  <span class=\"comment\">// 可读写属性：</span></span><br><span class=\"line\">  <span class=\"comment\">// java.ext.dirs</span></span><br><span class=\"line\">  <span class=\"comment\">// java.endorsed.dirs</span></span><br><span class=\"line\">  <span class=\"comment\">// sun.boot.library.path</span></span><br><span class=\"line\">  <span class=\"comment\">// java.library.path</span></span><br><span class=\"line\">  <span class=\"comment\">// java.home</span></span><br><span class=\"line\">  <span class=\"comment\">// sun.boot.class.path</span></span><br><span class=\"line\">  <span class=\"comment\">// java.class.path</span></span><br><span class=\"line\">  Arguments::init_system_properties();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// So that JDK version can be used as a discrimintor when parsing arguments</span></span><br><span class=\"line\">  JDK_Version_init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Update/Initialize System properties after JDK version number is known</span></span><br><span class=\"line\">  <span class=\"comment\">// 设置java.vm.specification.vendor属性（1.6之前是Sun Microsystems Inc. 1.7之后是Oracle Corporation）</span></span><br><span class=\"line\">  <span class=\"comment\">// 设置java.vm.specification.version和java.vm.vendor属性</span></span><br><span class=\"line\">  Arguments::init_version_specific_system_properties();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Parse arguments</span></span><br><span class=\"line\">  <span class=\"comment\">// 解析启动参数，如-XX:Flags=、-XX:+PrintVMOptions、-XX:+PrintFlagsInitial etc.</span></span><br><span class=\"line\">  jint parse_result = Arguments::parse(args);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (parse_result != JNI_OK) <span class=\"keyword\">return</span> parse_result;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (PauseAtStartup) &#123;</span><br><span class=\"line\">    os::pause();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> USDT2</span></span><br><span class=\"line\">  HS_DTRACE_PROBE(hotspot, vm__init__begin);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span> <span class=\"comment\">/* USDT2 */</span></span></span><br><span class=\"line\">  HOTSPOT_VM_INIT_BEGIN();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* USDT2 */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Record VM creation timing statistics</span></span><br><span class=\"line\">  TraceVmCreationTime create_vm_timer;</span><br><span class=\"line\">  create_vm_timer.start();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Timing (must come after argument parsing)</span></span><br><span class=\"line\">  <span class=\"function\">TraceTime <span class=\"title\">timer</span><span class=\"params\">(<span class=\"string\">\"Create VM\"</span>, TraceStartupTime)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize the os module after parsing the args</span></span><br><span class=\"line\">  jint os_init_2_result = os::init_2();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (os_init_2_result != JNI_OK) <span class=\"keyword\">return</span> os_init_2_result;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// intialize TLS</span></span><br><span class=\"line\">  ThreadLocalStorage::init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Bootstrap native memory tracking, so it can start recording memory</span></span><br><span class=\"line\">  <span class=\"comment\">// activities before worker thread is started. This is the first phase</span></span><br><span class=\"line\">  <span class=\"comment\">// of bootstrapping, VM is currently running in single-thread mode.</span></span><br><span class=\"line\">  MemTracker::bootstrap_single_thread();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize output stream logging</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化GC日志输出流，用来处理-Xloggc参数</span></span><br><span class=\"line\">  ostream_init_log();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Convert -Xrun to -agentlib: if there is no JVM_OnLoad</span></span><br><span class=\"line\">  <span class=\"comment\">// Must be before create_vm_init_agents()</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (Arguments::init_libraries_at_startup()) &#123;</span><br><span class=\"line\">    convert_vm_init_libraries_to_agents();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Launch -agentlib/-agentpath and converted -Xrun agents</span></span><br><span class=\"line\">  <span class=\"comment\">// 加载agent库</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (Arguments::init_agents_at_startup()) &#123;</span><br><span class=\"line\">    create_vm_init_agents();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize Threads state</span></span><br><span class=\"line\">  _thread_list = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  _number_of_threads = <span class=\"number\">0</span>;</span><br><span class=\"line\">  _number_of_non_daemon_threads = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize global data structures and create system classes in heap</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化全局数据数据结构及系统类，包括：</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化Java基础类型</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化时间队列</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化锁</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化chunkpool</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化性能数据统计模块</span></span><br><span class=\"line\">  vm_init_globals();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Attach the main thread to this os thread</span></span><br><span class=\"line\">  JavaThread* main_thread = <span class=\"keyword\">new</span> JavaThread();</span><br><span class=\"line\">  main_thread-&gt;set_thread_state(_thread_in_vm);</span><br><span class=\"line\">  main_thread-&gt;record_stack_base_and_size();</span><br><span class=\"line\">  main_thread-&gt;initialize_thread_local_storage();</span><br><span class=\"line\"></span><br><span class=\"line\">  main_thread-&gt;set_active_handles(JNIHandleBlock::allocate_block());</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!main_thread-&gt;set_as_starting_thread()) &#123;</span><br><span class=\"line\">    vm_shutdown_during_initialization(</span><br><span class=\"line\">      <span class=\"string\">\"Failed necessary internal allocation. Out of swap space\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> main_thread;</span><br><span class=\"line\">    *canTryAgain = <span class=\"literal\">false</span>; <span class=\"comment\">// don't let caller call JNI_CreateJavaVM again</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> JNI_ENOMEM;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Enable guard page *after* os::create_main_thread(), otherwise it would</span></span><br><span class=\"line\">  <span class=\"comment\">// crash Linux VM, see notes in os_linux.cpp.</span></span><br><span class=\"line\">  main_thread-&gt;create_stack_guard_pages();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize Java-Level synchronization subsystem</span></span><br><span class=\"line\">  ObjectMonitor::Initialize() ;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Second phase of bootstrapping, VM is about entering multi-thread mode</span></span><br><span class=\"line\">  MemTracker::bootstrap_multi_thread();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Initialize global modules</span></span><br><span class=\"line\">  <span class=\"comment\">// ========================================</span></span><br><span class=\"line\">  <span class=\"comment\">// IMPORTANT!!! 初始化全局模块</span></span><br><span class=\"line\">  <span class=\"comment\">// ========================================</span></span><br><span class=\"line\">  jint status = init_globals();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status != JNI_OK) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> main_thread;</span><br><span class=\"line\">    *canTryAgain = <span class=\"literal\">false</span>; <span class=\"comment\">// don't let caller call JNI_CreateJavaVM again</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> status;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Should be done after the heap is fully created</span></span><br><span class=\"line\">  main_thread-&gt;cache_global_variables();</span><br><span class=\"line\"></span><br><span class=\"line\">  HandleMark hm;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123; <span class=\"function\">MutexLocker <span class=\"title\">mu</span><span class=\"params\">(Threads_lock)</span></span>;</span><br><span class=\"line\">    Threads::add(main_thread);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Any JVMTI raw monitors entered in onload will transition into</span></span><br><span class=\"line\">  <span class=\"comment\">// real raw monitor. VM is setup enough here for raw monitor enter.</span></span><br><span class=\"line\">  JvmtiExport::transition_pending_onload_raw_monitors();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Fully start NMT</span></span><br><span class=\"line\">  MemTracker::start();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Create the VMThread</span></span><br><span class=\"line\">  &#123; <span class=\"function\">TraceTime <span class=\"title\">timer</span><span class=\"params\">(<span class=\"string\">\"Start VMThread\"</span>, TraceStartupTime)</span></span>;</span><br><span class=\"line\">    VMThread::create();</span><br><span class=\"line\">    Thread* vmthread = VMThread::vm_thread();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!os::create_thread(vmthread, os::vm_thread))</span><br><span class=\"line\">      vm_exit_during_initialization(<span class=\"string\">\"Cannot create VM thread. Out of system resources.\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Wait for the VM thread to become ready, and VMThread::run to initialize</span></span><br><span class=\"line\">    <span class=\"comment\">// Monitors can have spurious returns, must always check another state flag</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"function\">MutexLocker <span class=\"title\">ml</span><span class=\"params\">(Notify_lock)</span></span>;</span><br><span class=\"line\">      os::start_thread(vmthread);</span><br><span class=\"line\">      <span class=\"keyword\">while</span> (vmthread-&gt;active_handles() == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        Notify_lock-&gt;wait();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  assert (Universe::is_fully_initialized(), <span class=\"string\">\"not initialized\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (VerifyBeforeGC &amp;&amp; VerifyGCStartAt == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    Universe::heap()-&gt;prepare_for_verify();</span><br><span class=\"line\">    Universe::verify();   <span class=\"comment\">// make sure we're starting with a clean slate</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  EXCEPTION_MARK;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// At this point, the Universe is initialized, but we have not executed</span></span><br><span class=\"line\">  <span class=\"comment\">// any byte code.  Now is a good time (the only time) to dump out the</span></span><br><span class=\"line\">  <span class=\"comment\">// internal state of the JVM for sharing.</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (DumpSharedSpaces) &#123;</span><br><span class=\"line\">    Universe::heap()-&gt;preload_and_dump(CHECK_0);</span><br><span class=\"line\">    ShouldNotReachHere();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Always call even when there are not JVMTI environments yet, since environments</span></span><br><span class=\"line\">  <span class=\"comment\">// may be attached late and JVMTI must track phases of VM execution</span></span><br><span class=\"line\">  JvmtiExport::enter_start_phase();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Notify JVMTI agents that VM has started (JNI is up) - nop if no agents.</span></span><br><span class=\"line\">  JvmtiExport::post_vm_start();</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"function\">TraceTime <span class=\"title\">timer</span><span class=\"params\">(<span class=\"string\">\"Initialize java.lang classes\"</span>, TraceStartupTime)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (EagerXrunInit &amp;&amp; Arguments::init_libraries_at_startup()) &#123;</span><br><span class=\"line\">      create_vm_init_libraries();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (InitializeJavaLangString) &#123;</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_String(), CHECK_0);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.String not initialized\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Initialize java_lang.System (needed before creating the thread)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (InitializeJavaLangSystem) &#123;</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_System(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_ThreadGroup(), CHECK_0);</span><br><span class=\"line\">      Handle thread_group = create_initial_thread_group(CHECK_0);</span><br><span class=\"line\">      Universe::set_main_thread_group(thread_group());</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_Thread(), CHECK_0);</span><br><span class=\"line\">      oop thread_object = create_initial_thread(thread_group, main_thread, CHECK_0);</span><br><span class=\"line\">      main_thread-&gt;set_threadObj(thread_object);</span><br><span class=\"line\">      <span class=\"comment\">// Set thread status to running since main thread has</span></span><br><span class=\"line\">      <span class=\"comment\">// been started and running.</span></span><br><span class=\"line\">      java_lang_Thread::set_thread_status(thread_object,</span><br><span class=\"line\">                                          java_lang_Thread::RUNNABLE);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// The VM preresolve methods to these classes. Make sure that get initialized</span></span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_reflect_Method(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_ref_Finalizer(),  CHECK_0);</span><br><span class=\"line\">      <span class=\"comment\">// The VM creates &amp; returns objects of this class. Make sure it's initialized.</span></span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_Class(), CHECK_0);</span><br><span class=\"line\">      call_initializeSystemClass(CHECK_0);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// get the Java runtime name after java.lang.System is initialized</span></span><br><span class=\"line\">      JDK_Version::set_runtime_name(get_java_runtime_name(THREAD));</span><br><span class=\"line\">      JDK_Version::set_runtime_version(get_java_runtime_version(THREAD));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.System not initialized\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// an instance of OutOfMemory exception has been allocated earlier</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (InitializeJavaLangExceptionsErrors) &#123;</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_OutOfMemoryError(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_NullPointerException(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_ClassCastException(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_ArrayStoreException(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_ArithmeticException(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_StackOverflowError(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_IllegalMonitorStateException(), CHECK_0);</span><br><span class=\"line\">      initialize_class(vmSymbols::java_lang_IllegalArgumentException(), CHECK_0);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.OutOfMemoryError has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.NullPointerException has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.ClassCastException has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.ArrayStoreException has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.ArithmeticException has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.StackOverflowError has not been initialized\"</span>);</span><br><span class=\"line\">      warning(<span class=\"string\">\"java.lang.IllegalArgumentException has not been initialized\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  initialize_class(vmSymbols::java_lang_Compiler(), CHECK_0);</span><br><span class=\"line\"></span><br><span class=\"line\">  reset_vm_info_property(CHECK_0);</span><br><span class=\"line\"></span><br><span class=\"line\">  quicken_jni_functions();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Must be run after init_ft which initializes ft_enabled</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (TRACE_INITIALIZE() != JNI_OK) &#123;</span><br><span class=\"line\">    vm_exit_during_initialization(<span class=\"string\">\"Failed to initialize tracing backend\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Set flag that basic initialization has completed. Used by exceptions and various</span></span><br><span class=\"line\">  <span class=\"comment\">// debug stuff, that does not work until all basic classes have been initialized.</span></span><br><span class=\"line\">  set_init_completed();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> USDT2</span></span><br><span class=\"line\">  HS_DTRACE_PROBE(hotspot, vm__init__end);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span> <span class=\"comment\">/* USDT2 */</span></span></span><br><span class=\"line\">  HOTSPOT_VM_INIT_END();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* USDT2 */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// record VM initialization completion time</span></span><br><span class=\"line\">  <span class=\"comment\">// 向VM管理模块发送初始化完成信号</span></span><br><span class=\"line\">  Management::record_vm_init_completed();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Compute system loader. Note that this has to occur after set_init_completed, since</span></span><br><span class=\"line\">  <span class=\"comment\">// valid exceptions may be thrown in the process.</span></span><br><span class=\"line\">  <span class=\"comment\">// Note that we do not use CHECK_0 here since we are inside an EXCEPTION_MARK and</span></span><br><span class=\"line\">  <span class=\"comment\">// set_init_completed has just been called, causing exceptions not to be shortcut</span></span><br><span class=\"line\">  <span class=\"comment\">// anymore. We call vm_exit_during_initialization directly instead.</span></span><br><span class=\"line\">  <span class=\"comment\">// 载入classloader</span></span><br><span class=\"line\">  SystemDictionary::compute_java_system_loader(THREAD);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (HAS_PENDING_EXCEPTION) &#123;</span><br><span class=\"line\">    vm_exit_during_initialization(Handle(THREAD, PENDING_EXCEPTION));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> SERIALGC</span></span><br><span class=\"line\">  <span class=\"comment\">// Support for ConcurrentMarkSweep. This should be cleaned up</span></span><br><span class=\"line\">  <span class=\"comment\">// and better encapsulated. The ugly nested if test would go away</span></span><br><span class=\"line\">  <span class=\"comment\">// once things are properly refactored. XXX YSR</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseConcMarkSweepGC || UseG1GC) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (UseConcMarkSweepGC) &#123;</span><br><span class=\"line\">      ConcurrentMarkSweepThread::makeSurrogateLockerThread(THREAD);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      ConcurrentMarkThread::makeSurrogateLockerThread(THREAD);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (HAS_PENDING_EXCEPTION) &#123;</span><br><span class=\"line\">      vm_exit_during_initialization(Handle(THREAD, PENDING_EXCEPTION));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Always call even when there are not JVMTI environments yet, since environments</span></span><br><span class=\"line\">  <span class=\"comment\">// may be attached late and JVMTI must track phases of VM execution</span></span><br><span class=\"line\">  JvmtiExport::enter_live_phase();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Signal Dispatcher needs to be started before VMInit event is posted</span></span><br><span class=\"line\">  <span class=\"comment\">// 启动一个叫做“信号分发器”的线程用来处理进程间的信号</span></span><br><span class=\"line\">  <span class=\"comment\">// 比如通过jstack获取一个jvm实例的栈信息</span></span><br><span class=\"line\">  os::signal_init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Start Attach Listener if +StartAttachListener or it can't be started lazily</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!DisableAttachMechanism) &#123;</span><br><span class=\"line\">    AttachListener::vm_start();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (StartAttachListener || AttachListener::init_at_startup()) &#123;</span><br><span class=\"line\">      AttachListener::init();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Launch -Xrun agents</span></span><br><span class=\"line\">  <span class=\"comment\">// Must be done in the JVMTI live phase so that for backward compatibility the JDWP</span></span><br><span class=\"line\">  <span class=\"comment\">// back-end can launch with -Xdebug -Xrunjdwp.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!EagerXrunInit &amp;&amp; Arguments::init_libraries_at_startup()) &#123;</span><br><span class=\"line\">    create_vm_init_libraries();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Notify JVMTI agents that VM initialization is complete - nop if no agents.</span></span><br><span class=\"line\">  JvmtiExport::post_vm_initialized();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (TRACE_START() != JNI_OK) &#123;</span><br><span class=\"line\">    vm_exit_during_initialization(<span class=\"string\">\"Failed to start tracing backend.\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (CleanChunkPoolAsync) &#123;</span><br><span class=\"line\">    Chunk::start_chunk_pool_cleaner_task();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// initialize compiler(s)</span></span><br><span class=\"line\">  CompileBroker::compilation_init();</span><br><span class=\"line\">  <span class=\"comment\">// 加载sun.management.Agent类并调用startAgent方法开启管理服务</span></span><br><span class=\"line\">  Management::initialize(THREAD);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (HAS_PENDING_EXCEPTION) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// management agent fails to start possibly due to</span></span><br><span class=\"line\">    <span class=\"comment\">// configuration problem and is responsible for printing</span></span><br><span class=\"line\">    <span class=\"comment\">// stack trace if appropriate. Simply exit VM.</span></span><br><span class=\"line\">    vm_exit(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (Arguments::has_profile())       FlatProfiler::engage(main_thread, <span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (Arguments::has_alloc_profile()) AllocationProfiler::engage();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (MemProfiling)                   MemProfiler::engage();</span><br><span class=\"line\">  StatSampler::engage();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (CheckJNICalls)                  JniPeriodicChecker::engage();</span><br><span class=\"line\"></span><br><span class=\"line\">  BiasedLocking::init();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (JDK_Version::current().post_vm_init_hook_enabled()) &#123;</span><br><span class=\"line\">    call_postVMInitHook(THREAD);</span><br><span class=\"line\">    <span class=\"comment\">// The Java side of PostVMInitHook.run must deal with all</span></span><br><span class=\"line\">    <span class=\"comment\">// exceptions and provide means of diagnosis.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (HAS_PENDING_EXCEPTION) &#123;</span><br><span class=\"line\">      CLEAR_PENDING_EXCEPTION;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      <span class=\"function\">MutexLockerEx <span class=\"title\">ml</span><span class=\"params\">(PeriodicTask_lock, Mutex::_no_safepoint_check_flag)</span></span>;</span><br><span class=\"line\">      <span class=\"comment\">// Make sure the watcher thread can be started by WatcherThread::start()</span></span><br><span class=\"line\">      <span class=\"comment\">// or by dynamic enrollment.</span></span><br><span class=\"line\">      WatcherThread::make_startable();</span><br><span class=\"line\">      <span class=\"comment\">// Start up the WatcherThread if there are any periodic tasks</span></span><br><span class=\"line\">      <span class=\"comment\">// <span class=\"doctag\">NOTE:</span>  All PeriodicTasks should be registered by now. If they</span></span><br><span class=\"line\">      <span class=\"comment\">//   aren't, late joiners might appear to start slowly (we might</span></span><br><span class=\"line\">      <span class=\"comment\">//   take a while to process their first tick).</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (PeriodicTask::num_tasks() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">          WatcherThread::start();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Give os specific code one last chance to start</span></span><br><span class=\"line\">  os::init_3();</span><br><span class=\"line\"></span><br><span class=\"line\">  create_vm_timer.end();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> JNI_OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其中<code>init_globals()</code>方法位于<code>hotspot/src/share/vm/runtime/init.cpp</code>用来初始化全局模块:<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">jint <span class=\"title\">init_globals</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  HandleMark hm;</span><br><span class=\"line\">  <span class=\"comment\">// 初始化各子系统的监控及管理服务</span></span><br><span class=\"line\">  <span class=\"comment\">// JMX、线程和同步子系统、类加载子系统的监控和管理</span></span><br><span class=\"line\">  management_init();</span><br><span class=\"line\">  <span class=\"comment\">// 初始化字节码表，如istore、iload、iadd</span></span><br><span class=\"line\">  bytecodes_init();</span><br><span class=\"line\">  <span class=\"comment\">// 类加载器初始化</span></span><br><span class=\"line\">  classLoader_init();</span><br><span class=\"line\">  <span class=\"comment\">// 代码缓存池初始化</span></span><br><span class=\"line\">  codeCache_init();</span><br><span class=\"line\">  <span class=\"comment\">// VM版本初始化</span></span><br><span class=\"line\">  VM_Version_init();</span><br><span class=\"line\">  <span class=\"comment\">// 系统初始化</span></span><br><span class=\"line\">  os_init_globals();</span><br><span class=\"line\">  stubRoutines_init1();</span><br><span class=\"line\">  <span class=\"comment\">// ============================</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化堆以及决定所使用GC策略</span></span><br><span class=\"line\">  <span class=\"comment\">// ============================</span></span><br><span class=\"line\">  jint status = universe_init();  <span class=\"comment\">// dependent on codeCache_init and</span></span><br><span class=\"line\">                                  <span class=\"comment\">// stubRoutines_init1</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status != JNI_OK)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> status;</span><br><span class=\"line\">  <span class=\"comment\">// 初始化解析器</span></span><br><span class=\"line\">  interpreter_init();  <span class=\"comment\">// before any methods loaded</span></span><br><span class=\"line\">  invocationCounter_init();  <span class=\"comment\">// before any methods loaded</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化MarkSweep</span></span><br><span class=\"line\">  marksweep_init();</span><br><span class=\"line\">  accessFlags_init();</span><br><span class=\"line\">  <span class=\"comment\">// 初始化操作码模板表</span></span><br><span class=\"line\">  templateTable_init();</span><br><span class=\"line\">  InterfaceSupport_init();</span><br><span class=\"line\">  SharedRuntime::generate_stubs();</span><br><span class=\"line\">  <span class=\"comment\">// 初始化语法表及系统字典等</span></span><br><span class=\"line\">  universe2_init();  <span class=\"comment\">// dependent on codeCache_init and stubRoutines_init1</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化软引用时间戳表并设定软引用清除策略</span></span><br><span class=\"line\">  referenceProcessor_init();</span><br><span class=\"line\">  jni_handles_init();</span><br><span class=\"line\">  <span class=\"comment\">// 代码数据结构的必要性检查（仅限debug版本）</span></span><br><span class=\"line\">  vmStructs_init();</span><br><span class=\"line\">  vtableStubs_init();</span><br><span class=\"line\">  InlineCacheBuffer_init();</span><br><span class=\"line\">  <span class=\"comment\">// oracle编译器初始化（oracle编译器是一个编译器开关接口）</span></span><br><span class=\"line\">  compilerOracle_init();</span><br><span class=\"line\">  <span class=\"comment\">// 初始化编译策略（根据启动参数决定编译策略）</span></span><br><span class=\"line\">  compilationPolicy_init();</span><br><span class=\"line\">  compileBroker_init();</span><br><span class=\"line\">  VMRegImpl::set_regName();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!universe_post_init()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> JNI_ERR;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  javaClasses_init();   <span class=\"comment\">// must happen after vtable initialization</span></span><br><span class=\"line\">  stubRoutines_init2(); <span class=\"comment\">// note: StubRoutines need 2-phase init</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// All the flags that get adjusted by VM_Version_init and os::init_2</span></span><br><span class=\"line\">  <span class=\"comment\">// have been set so dump the flags now.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (PrintFlagsFinal) &#123;</span><br><span class=\"line\">    CommandLineFlags::printFlags(tty, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> JNI_OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>其中<code>universe_init()</code>方法位于<code>hotspot/src/share/vm/memory/universe.cpp</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">jint <span class=\"title\">universe_init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  assert(!Universe::_fully_initialized, <span class=\"string\">\"called after initialize_vtables\"</span>);</span><br><span class=\"line\">  guarantee(<span class=\"number\">1</span> &lt;&lt; LogHeapWordSize == <span class=\"keyword\">sizeof</span>(HeapWord),</span><br><span class=\"line\">         <span class=\"string\">\"LogHeapWordSize is incorrect.\"</span>);</span><br><span class=\"line\">  guarantee(<span class=\"keyword\">sizeof</span>(oop) &gt;= <span class=\"keyword\">sizeof</span>(HeapWord), <span class=\"string\">\"HeapWord larger than oop?\"</span>);</span><br><span class=\"line\">  guarantee(<span class=\"keyword\">sizeof</span>(oop) % <span class=\"keyword\">sizeof</span>(HeapWord) == <span class=\"number\">0</span>,</span><br><span class=\"line\">            <span class=\"string\">\"oop size is not not a multiple of HeapWord size\"</span>);</span><br><span class=\"line\">  <span class=\"function\">TraceTime <span class=\"title\">timer</span><span class=\"params\">(<span class=\"string\">\"Genesis\"</span>, TraceStartupTime)</span></span>;</span><br><span class=\"line\">  GC_locker::lock();  <span class=\"comment\">// do not allow gc during bootstrapping</span></span><br><span class=\"line\">  JavaClasses::compute_hard_coded_offsets();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Get map info from shared archive file.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (DumpSharedSpaces)</span><br><span class=\"line\">    UseSharedSpaces = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  FileMapInfo* mapinfo = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseSharedSpaces) &#123;</span><br><span class=\"line\">    mapinfo = NEW_C_HEAP_OBJ(FileMapInfo, mtInternal);</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(mapinfo, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(FileMapInfo));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Open the shared archive file, read and validate the header. If</span></span><br><span class=\"line\">    <span class=\"comment\">// initialization files, shared spaces [UseSharedSpaces] are</span></span><br><span class=\"line\">    <span class=\"comment\">// disabled and the file is closed.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (mapinfo-&gt;initialize()) &#123;</span><br><span class=\"line\">      FileMapInfo::set_current_info(mapinfo);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      assert(!mapinfo-&gt;is_open() &amp;&amp; !UseSharedSpaces,</span><br><span class=\"line\">             <span class=\"string\">\"archive file not closed or shared spaces not disabled.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//===================================</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化堆</span></span><br><span class=\"line\">  <span class=\"comment\">// 包括创建及初始化各分区代，设定空间比例大小，回收策略等</span></span><br><span class=\"line\">  <span class=\"comment\">// 流程：根据启动参数决定使用的回收策略，初始化回收策略时会指定所使用的代规范，</span></span><br><span class=\"line\">  <span class=\"comment\">//       最后根据规范创建对应类型的回收堆。i.e.</span></span><br><span class=\"line\">  <span class=\"comment\">//      arguments -&gt; policy -&gt; spec -&gt; heap</span></span><br><span class=\"line\">  <span class=\"comment\">//===================================</span></span><br><span class=\"line\">  jint status = Universe::initialize_heap();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status != JNI_OK) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> status;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// We have a heap so create the methodOop caches before</span></span><br><span class=\"line\">  <span class=\"comment\">// CompactingPermGenGen::initialize_oops() tries to populate them.</span></span><br><span class=\"line\">  Universe::_finalizer_register_cache = <span class=\"keyword\">new</span> LatestMethodOopCache();</span><br><span class=\"line\">  Universe::_loader_addClass_cache    = <span class=\"keyword\">new</span> LatestMethodOopCache();</span><br><span class=\"line\">  Universe::_pd_implies_cache         = <span class=\"keyword\">new</span> LatestMethodOopCache();</span><br><span class=\"line\">  Universe::_reflect_invoke_cache     = <span class=\"keyword\">new</span> ActiveMethodOopsCache();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseSharedSpaces) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Read the data structures supporting the shared spaces (shared</span></span><br><span class=\"line\">    <span class=\"comment\">// system dictionary, symbol table, etc.).  After that, access to</span></span><br><span class=\"line\">    <span class=\"comment\">// the file (other than the mapped regions) is no longer needed, and</span></span><br><span class=\"line\">    <span class=\"comment\">// the file is closed. Closing the file does not affect the</span></span><br><span class=\"line\">    <span class=\"comment\">// currently mapped regions.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    CompactingPermGenGen::initialize_oops();</span><br><span class=\"line\">    mapinfo-&gt;close();</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    SymbolTable::create_table();</span><br><span class=\"line\">    StringTable::create_table();</span><br><span class=\"line\">    ClassLoader::create_package_info_table();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> JNI_OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>initialize_heap()方法如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jint Universe::initialize_heap() &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 如果使用并行GC</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseParallelGC) &#123;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> SERIALGC</span></span><br><span class=\"line\">    <span class=\"comment\">// 回收堆类型使用并行回收堆</span></span><br><span class=\"line\">    Universe::_collectedHeap = <span class=\"keyword\">new</span> ParallelScavengeHeap();</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span>  <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\">    fatal(<span class=\"string\">\"UseParallelGC not supported in java kernel vm.\"</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (UseG1GC) &#123;</span><br><span class=\"line\">#ifndef SERIALGC</span><br><span class=\"line\">    <span class=\"comment\">// 如果使用G1回收，设定回收器策略和回收堆类型为G1CollectorPolicy和G1CollectedHeap</span></span><br><span class=\"line\">    G1CollectorPolicy* g1p = <span class=\"keyword\">new</span> G1CollectorPolicy();</span><br><span class=\"line\">    G1CollectedHeap* g1h = <span class=\"keyword\">new</span> G1CollectedHeap(g1p);</span><br><span class=\"line\">    Universe::_collectedHeap = g1h;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span>  <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\">    fatal(<span class=\"string\">\"UseG1GC not supported in java kernel vm.\"</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    GenCollectorPolicy *gc_policy;</span><br><span class=\"line\">    <span class=\"comment\">// 使用串行回收</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (UseSerialGC) &#123;</span><br><span class=\"line\">      gc_policy = <span class=\"keyword\">new</span> MarkSweepPolicy();</span><br><span class=\"line\">    <span class=\"comment\">// 使用并发回收</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (UseConcMarkSweepGC) &#123;</span><br><span class=\"line\">#ifndef SERIALGC</span><br><span class=\"line\">      <span class=\"comment\">// 是否使用自适应策略</span></span><br><span class=\"line\">      <span class=\"comment\">// ASConcurrentMarkSweepPolicy继承自ConcurrentMarkSweepPolicy，</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (UseAdaptiveSizePolicy) &#123;</span><br><span class=\"line\">        gc_policy = <span class=\"keyword\">new</span> ASConcurrentMarkSweepPolicy();</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        gc_policy = <span class=\"keyword\">new</span> ConcurrentMarkSweepPolicy();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span>   <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\">    fatal(<span class=\"string\">\"UseConcMarkSweepGC not supported in java kernel vm.\"</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\">    <span class=\"comment\">// 默认使用标记清除算法</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// default old generation</span></span><br><span class=\"line\">      gc_policy = <span class=\"keyword\">new</span> MarkSweepPolicy();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 回收策略类型体系图</span></span><br><span class=\"line\">    <span class=\"comment\">// AllocatedObj</span></span><br><span class=\"line\">    <span class=\"comment\">//    └── CHeapObj</span></span><br><span class=\"line\">    <span class=\"comment\">//        └── CollectorPolicy</span></span><br><span class=\"line\">    <span class=\"comment\">//            └── GenCollectorPolicy</span></span><br><span class=\"line\">    <span class=\"comment\">//                └── TwoGenerationCollectorPolicy</span></span><br><span class=\"line\">    <span class=\"comment\">//                    └── ConcurrentMarkSweepPolicy</span></span><br><span class=\"line\">    <span class=\"comment\">//                        └── ASConcurrentMarkSweepPolicy</span></span><br><span class=\"line\">    Universe::_collectedHeap = <span class=\"keyword\">new</span> GenCollectedHeap(gc_policy);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//===================================</span></span><br><span class=\"line\">  <span class=\"comment\">// 初始化堆空间</span></span><br><span class=\"line\">  <span class=\"comment\">// 这里调用GenCollectedHeap::initialize()方法， 真正向操作系统申请内存</span></span><br><span class=\"line\">  <span class=\"comment\">//===================================</span></span><br><span class=\"line\">  jint status = Universe::heap()-&gt;initialize();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (status != JNI_OK) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> status;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> _LP64</span></span><br><span class=\"line\">  <span class=\"comment\">// 在LP64数据模型下是否开启对象指针压缩</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseCompressedOops) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Subtract a page because something can get allocated at heap base.</span></span><br><span class=\"line\">    <span class=\"comment\">// This also makes implicit null checking work, because the</span></span><br><span class=\"line\">    <span class=\"comment\">// memory+1 page below heap_base needs to cause a signal.</span></span><br><span class=\"line\">    <span class=\"comment\">// See needs_explicit_null_check.</span></span><br><span class=\"line\">    <span class=\"comment\">// Only set the heap base for compressed oops because it indicates</span></span><br><span class=\"line\">    <span class=\"comment\">// compressed oops for pstack code.</span></span><br><span class=\"line\">    <span class=\"keyword\">bool</span> verbose = PrintCompressedOopsMode || (PrintMiscellaneous &amp;&amp; Verbose);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verbose) &#123;</span><br><span class=\"line\">      tty-&gt;cr();</span><br><span class=\"line\">      tty-&gt;print(<span class=\"string\">\"heap address: \"</span> PTR_FORMAT <span class=\"string\">\", size: \"</span> SIZE_FORMAT <span class=\"string\">\" MB\"</span>,</span><br><span class=\"line\">                 Universe::heap()-&gt;base(), Universe::heap()-&gt;reserved_region().byte_size()/M);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((<span class=\"keyword\">uint64_t</span>)Universe::heap()-&gt;reserved_region().end() &gt; OopEncodingHeapMax) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Can't reserve heap below 32Gb.</span></span><br><span class=\"line\">      Universe::set_narrow_oop_base(Universe::heap()-&gt;base() - os::vm_page_size());</span><br><span class=\"line\">      Universe::set_narrow_oop_shift(LogMinObjAlignmentInBytes);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (verbose) &#123;</span><br><span class=\"line\">        tty-&gt;print(<span class=\"string\">\", %s: \"</span>PTR_FORMAT,</span><br><span class=\"line\">            narrow_oop_mode_to_string(HeapBasedNarrowOop),</span><br><span class=\"line\">            Universe::narrow_oop_base());</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      Universe::set_narrow_oop_base(<span class=\"number\">0</span>);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (verbose) &#123;</span><br><span class=\"line\">        tty-&gt;print(<span class=\"string\">\", %s\"</span>, narrow_oop_mode_to_string(ZeroBasedNarrowOop));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> _WIN64</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!Universe::narrow_oop_use_implicit_null_checks()) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Don't need guard page for implicit checks in indexed addressing</span></span><br><span class=\"line\">        <span class=\"comment\">// mode with zero based Compressed Oops.</span></span><br><span class=\"line\">        Universe::set_narrow_oop_use_implicit_null_checks(<span class=\"literal\">true</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">//  _WIN64</span></span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>((<span class=\"keyword\">uint64_t</span>)Universe::heap()-&gt;reserved_region().end() &gt; NarrowOopHeapMax) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// Can't reserve heap below 4Gb.</span></span><br><span class=\"line\">        Universe::set_narrow_oop_shift(LogMinObjAlignmentInBytes);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        Universe::set_narrow_oop_shift(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (verbose) &#123;</span><br><span class=\"line\">          tty-&gt;print(<span class=\"string\">\", %s\"</span>, narrow_oop_mode_to_string(UnscaledNarrowOop));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verbose) &#123;</span><br><span class=\"line\">      tty-&gt;cr();</span><br><span class=\"line\">      tty-&gt;cr();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  assert(Universe::narrow_oop_base() == (Universe::heap()-&gt;base() - os::vm_page_size()) ||</span><br><span class=\"line\">         Universe::narrow_oop_base() == <span class=\"literal\">NULL</span>, <span class=\"string\">\"invalid value\"</span>);</span><br><span class=\"line\">  assert(Universe::narrow_oop_shift() == LogMinObjAlignmentInBytes ||</span><br><span class=\"line\">         Universe::narrow_oop_shift() == <span class=\"number\">0</span>, <span class=\"string\">\"invalid value\"</span>);</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// We will never reach the CATCH below since Exceptions::_throw will cause</span></span><br><span class=\"line\">  <span class=\"comment\">// the VM to exit if an exception is thrown during initialization</span></span><br><span class=\"line\">  <span class=\"comment\">// 如果使用TLAB则对其进行初始化</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseTLAB) &#123;</span><br><span class=\"line\">    assert(Universe::heap()-&gt;supports_tlab_allocation(),</span><br><span class=\"line\">           <span class=\"string\">\"Should support thread-local allocation buffers\"</span>);</span><br><span class=\"line\">    ThreadLocalAllocBuffer::startup_initialization();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> JNI_OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在上面的代码中<code>Universe::heap()-&gt;initialize()</code>会调用GenCollectedHeap的<code>initialize()</code>方法：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jint GenCollectedHeap::initialize() &#123;</span><br><span class=\"line\">  CollectedHeap::pre_initialize();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">  _n_gens = gen_policy()-&gt;number_of_generations();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// While there are no constraints in the GC code that HeapWordSize</span></span><br><span class=\"line\">  <span class=\"comment\">// be any particular value, there are multiple other areas in the</span></span><br><span class=\"line\">  <span class=\"comment\">// system which believe this to be true (e.g. oop-&gt;object_size in some</span></span><br><span class=\"line\">  <span class=\"comment\">// cases incorrectly returns the size in wordSize units rather than</span></span><br><span class=\"line\">  <span class=\"comment\">// HeapWordSize).</span></span><br><span class=\"line\">  guarantee(HeapWordSize == wordSize, <span class=\"string\">\"HeapWordSize must equal wordSize\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// The heap must be at least as aligned as generations.</span></span><br><span class=\"line\">  <span class=\"keyword\">size_t</span> alignment = Generation::GenGrain;</span><br><span class=\"line\"></span><br><span class=\"line\">  _gen_specs = gen_policy()-&gt;generations();</span><br><span class=\"line\">  PermanentGenerationSpec *perm_gen_spec =</span><br><span class=\"line\">                                collector_policy()-&gt;permanent_generation();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Make sure the sizes are all aligned.</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; _n_gens; i++) &#123;</span><br><span class=\"line\">    _gen_specs[i]-&gt;align(alignment);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  perm_gen_spec-&gt;align(alignment);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// If we are dumping the heap, then allocate a wasted block of address</span></span><br><span class=\"line\">  <span class=\"comment\">// space in order to push the heap to a lower address.  This extra</span></span><br><span class=\"line\">  <span class=\"comment\">// address range allows for other (or larger) libraries to be loaded</span></span><br><span class=\"line\">  <span class=\"comment\">// without them occupying the space required for the shared spaces.</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (DumpSharedSpaces) &#123;</span><br><span class=\"line\">    uintx reserved = <span class=\"number\">0</span>;</span><br><span class=\"line\">    uintx block_size = <span class=\"number\">64</span>*<span class=\"number\">1024</span>*<span class=\"number\">1024</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (reserved &lt; SharedDummyBlockSize) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">char</span>* dummy = os::reserve_memory(block_size);</span><br><span class=\"line\">      reserved += block_size;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Allocate space for the heap.</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">char</span>* heap_address;</span><br><span class=\"line\">  <span class=\"keyword\">size_t</span> total_reserved = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> n_covered_regions = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"function\">ReservedSpace <span class=\"title\">heap_rs</span><span class=\"params\">(<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">  <span class=\"comment\">//分配区域，三个区域:YoungGen,OldGen,PermGen</span></span><br><span class=\"line\">  heap_address = allocate(alignment, perm_gen_spec, &amp;total_reserved,</span><br><span class=\"line\">                          &amp;n_covered_regions, &amp;heap_rs);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (UseSharedSpaces) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!heap_rs.is_reserved() || heap_address != heap_rs.base()) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (heap_rs.is_reserved()) &#123;</span><br><span class=\"line\">        heap_rs.release();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      FileMapInfo* mapinfo = FileMapInfo::current_info();</span><br><span class=\"line\">      mapinfo-&gt;fail_continue(<span class=\"string\">\"Unable to reserve shared region.\"</span>);</span><br><span class=\"line\">      allocate(alignment, perm_gen_spec, &amp;total_reserved, &amp;n_covered_regions,</span><br><span class=\"line\">               &amp;heap_rs);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!heap_rs.is_reserved()) &#123;</span><br><span class=\"line\">    vm_shutdown_during_initialization(</span><br><span class=\"line\">      <span class=\"string\">\"Could not reserve enough space for object heap\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> JNI_ENOMEM;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//_reserved区域包括Y,O,P三个区域</span></span><br><span class=\"line\">  _reserved = MemRegion((HeapWord*)heap_rs.base(),</span><br><span class=\"line\">                        (HeapWord*)(heap_rs.base() + heap_rs.size()));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// It is important to do this in a way such that concurrent readers can't</span></span><br><span class=\"line\">  <span class=\"comment\">// temporarily think somethings in the heap.  (Seen this happen in asserts.)</span></span><br><span class=\"line\">  _reserved.set_word_size(<span class=\"number\">0</span>);</span><br><span class=\"line\">  _reserved.set_start((HeapWord*)heap_rs.base());</span><br><span class=\"line\">  <span class=\"keyword\">size_t</span> actual_heap_size = heap_rs.size() - perm_gen_spec-&gt;misc_data_size()</span><br><span class=\"line\">                                           - perm_gen_spec-&gt;misc_code_size();</span><br><span class=\"line\">  _reserved.set_end((HeapWord*)(heap_rs.base() + actual_heap_size));</span><br><span class=\"line\"></span><br><span class=\"line\">  _rem_set = collector_policy()-&gt;create_rem_set(_reserved, n_covered_regions);</span><br><span class=\"line\">  set_barrier_set(rem_set()-&gt;bs());</span><br><span class=\"line\"></span><br><span class=\"line\">  _gch = <span class=\"keyword\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; _n_gens; i++) &#123;</span><br><span class=\"line\">    ReservedSpace this_rs = heap_rs.first_part(_gen_specs[i]-&gt;max_size(),</span><br><span class=\"line\">                                              UseSharedSpaces, UseSharedSpaces);</span><br><span class=\"line\">    _gens[i] = _gen_specs[i]-&gt;init(this_rs, i, rem_set());</span><br><span class=\"line\">    <span class=\"comment\">// tag generations in JavaHeap</span></span><br><span class=\"line\">    MemTracker::record_virtual_memory_type((address)this_rs.base(), mtJavaHeap);</span><br><span class=\"line\">    heap_rs = heap_rs.last_part(_gen_specs[i]-&gt;max_size());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  _perm_gen = perm_gen_spec-&gt;init(heap_rs, PermSize, rem_set());</span><br><span class=\"line\">  <span class=\"comment\">// tag PermGen</span></span><br><span class=\"line\">  MemTracker::record_virtual_memory_type((address)heap_rs.base(), mtJavaHeap);</span><br><span class=\"line\"></span><br><span class=\"line\">  clear_incremental_collection_failed();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> SERIALGC</span></span><br><span class=\"line\">  <span class=\"comment\">// If we are running CMS, create the collector responsible</span></span><br><span class=\"line\">  <span class=\"comment\">// for collecting the CMS generations.</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (collector_policy()-&gt;is_concurrent_mark_sweep_policy()) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> success = create_cms_collector();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!success) <span class=\"keyword\">return</span> JNI_ENOMEM;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// SERIALGC</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> JNI_OK;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>至此JVM的初始化全部完成，至于内存策略的计算部分详细内容请阅读Hotspot源码，这里只作抛砖引玉。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjfb89nbt00035ls69h0n3uwx","category_id":"cjfb89nbz00055ls6r97cdtci","_id":"cjfb89nc7000e5ls64grht4i1"},{"post_id":"cjfb89nc5000b5ls6wft67yef","category_id":"cjfb89nc4000a5ls6i7dfkfba","_id":"cjfb89nc9000i5ls63t4u24ct"},{"post_id":"cjfb89nbw00045ls61kpoe082","category_id":"cjfb89nc4000a5ls6i7dfkfba","_id":"cjfb89nc9000l5ls6kb3xxfdn"},{"post_id":"cjfb89nc6000d5ls6orzk35w7","category_id":"cjfb89nc4000a5ls6i7dfkfba","_id":"cjfb89nc9000n5ls6sdaonfbf"},{"post_id":"cjfb89nc000065ls65nrntooj","category_id":"cjfb89nc8000f5ls6rs4gukx8","_id":"cjfb89nca000q5ls6a4123a0q"},{"post_id":"cjfb89nc200085ls60cyqjzdc","category_id":"cjfb89nc9000j5ls6p4mp5vvf","_id":"cjfb89ncc000u5ls689aqw62v"},{"post_id":"cjfb89nc300095ls6sv28k0rr","category_id":"cjfb89nc4000a5ls6i7dfkfba","_id":"cjfb89ncd000x5ls6ske835kb"}],"PostTag":[{"post_id":"cjfb89nc6000d5ls6orzk35w7","tag_id":"cjfb89nc200075ls66xe0qfwu","_id":"cjfb89nc9000h5ls6soido1dw"},{"post_id":"cjfb89nc6000d5ls6orzk35w7","tag_id":"cjfb89nc6000c5ls68ovkcm65","_id":"cjfb89nc9000k5ls64ra24v8b"},{"post_id":"cjfb89nbw00045ls61kpoe082","tag_id":"cjfb89nc200075ls66xe0qfwu","_id":"cjfb89nca000o5ls6zxkdmj23"},{"post_id":"cjfb89nbw00045ls61kpoe082","tag_id":"cjfb89nc6000c5ls68ovkcm65","_id":"cjfb89ncb000r5ls6bvdjb1of"},{"post_id":"cjfb89nbw00045ls61kpoe082","tag_id":"cjfb89nc8000g5ls6j4wems2p","_id":"cjfb89ncc000t5ls68odokhg7"},{"post_id":"cjfb89nc000065ls65nrntooj","tag_id":"cjfb89nc9000m5ls6p9vyjddf","_id":"cjfb89ncd000w5ls62jy7jpm5"},{"post_id":"cjfb89nc000065ls65nrntooj","tag_id":"cjfb89nc8000g5ls6j4wems2p","_id":"cjfb89ncd000y5ls6zvhnmpfj"},{"post_id":"cjfb89nc200085ls60cyqjzdc","tag_id":"cjfb89ncd000v5ls68o38jq66","_id":"cjfb89ncg00125ls6roimqycx"},{"post_id":"cjfb89nc200085ls60cyqjzdc","tag_id":"cjfb89ncd000z5ls6ewsfqt4d","_id":"cjfb89ncg00135ls6aca6iz5b"},{"post_id":"cjfb89nc200085ls60cyqjzdc","tag_id":"cjfb89ncf00105ls6d3ks43lg","_id":"cjfb89nch00155ls6c63lc6kw"},{"post_id":"cjfb89nc300095ls6sv28k0rr","tag_id":"cjfb89nc200075ls66xe0qfwu","_id":"cjfb89nci00185ls6s8dsoh3n"},{"post_id":"cjfb89nc300095ls6sv28k0rr","tag_id":"cjfb89nc6000c5ls68ovkcm65","_id":"cjfb89nci00195ls6aek1v9l3"},{"post_id":"cjfb89nc300095ls6sv28k0rr","tag_id":"cjfb89ncd000v5ls68o38jq66","_id":"cjfb89nci001a5ls6uwlfp52a"},{"post_id":"cjfb89nc300095ls6sv28k0rr","tag_id":"cjfb89nc8000g5ls6j4wems2p","_id":"cjfb89nci001b5ls6kdnj17od"},{"post_id":"cjfb89nc5000b5ls6wft67yef","tag_id":"cjfb89nc200075ls66xe0qfwu","_id":"cjfb89nci001c5ls6tgb0h4zy"},{"post_id":"cjfb89nc5000b5ls6wft67yef","tag_id":"cjfb89nc6000c5ls68ovkcm65","_id":"cjfb89nci001d5ls6erduk9xn"}],"Tag":[{"name":"OpenJDK","_id":"cjfb89nc200075ls66xe0qfwu"},{"name":"JVM","_id":"cjfb89nc6000c5ls68ovkcm65"},{"name":"CentOS","_id":"cjfb89nc8000g5ls6j4wems2p"},{"name":"MySQL","_id":"cjfb89nc9000m5ls6p9vyjddf"},{"name":"Linux","_id":"cjfb89ncd000v5ls68o38jq66"},{"name":"vim","_id":"cjfb89ncd000z5ls6ewsfqt4d"},{"name":"Mac","_id":"cjfb89ncf00105ls6d3ks43lg"}]}}